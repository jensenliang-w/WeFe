package com.welab.wefe.manager.service.contract;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.fisco.bcos.sdk.abi.FunctionReturnDecoder;
import org.fisco.bcos.sdk.abi.TypeReference;
import org.fisco.bcos.sdk.abi.datatypes.Bool;
import org.fisco.bcos.sdk.abi.datatypes.DynamicArray;
import org.fisco.bcos.sdk.abi.datatypes.Event;
import org.fisco.bcos.sdk.abi.datatypes.Function;
import org.fisco.bcos.sdk.abi.datatypes.Type;
import org.fisco.bcos.sdk.abi.datatypes.Utf8String;
import org.fisco.bcos.sdk.abi.datatypes.generated.Int256;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple1;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple2;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple4;
import org.fisco.bcos.sdk.client.Client;
import org.fisco.bcos.sdk.contract.Contract;
import org.fisco.bcos.sdk.crypto.CryptoSuite;
import org.fisco.bcos.sdk.crypto.keypair.CryptoKeyPair;
import org.fisco.bcos.sdk.eventsub.EventCallback;
import org.fisco.bcos.sdk.model.CryptoType;
import org.fisco.bcos.sdk.model.TransactionReceipt;
import org.fisco.bcos.sdk.model.callback.TransactionCallback;
import org.fisco.bcos.sdk.transaction.model.exception.ContractException;

@SuppressWarnings("unchecked")
public class DataSetDefaultTagContract extends Contract {
    public static final String[] BINARY_ARRAY = {"","5250846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610d11929190613187565b602060405180830381600087803b158015610d2b57600080fd5b505af1158015610d3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610d639190810190612b65565b9050600181121515610d785760009350610d9c565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7f5b67fcfc52bf8293823b40863b3cf1890e73d0eae2e12fd2eada0bcc37ce68f38487604051610dcd929190613081565b60405180910390a180945050505050919050565b600060606000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280601481526020017f646174615f7365745f64656661756c745f7461670000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610e939190613165565b602060405180830381600087803b158015610ead57600080fd5b505af1158015610ec1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ee59190810190612b3c565b91508173ffffffffffffffffffffffffffffffffffffffff1663e8434e396040805190810160405280600a81526020017f6669785f69645f303034000000000000000000000000000000000000000000008152508473ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610f9d57600080fd5b505af1158015610fb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610fd59190810190612ac1565b6040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161100e929190613187565b602060405180830381600087803b15801561102857600080fd5b505af115801561103c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506110609190810190612aea565b90508073ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156110c657600080fd5b505af11580156110da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506110fe9190810190612b65565b6000141561116c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600060405190808252806020026020018201604052801561115c57816020015b60608152602001906001900390816111475790505b508191508090509350935061117f565b600061117782611f3d565b819150935093505b50509091565b60008060008060008093506111b18760008151811015156111a257fe5b90602001906020020151610692565b1561123c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff93507f5157dc1ab0b55c7621be94a34b2ae4228f7d16e8271628060cc027b1a513b12f84888860405161120c9392919061303c565b60405180910390a17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff94506118ed565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280601481526020017f646174615f7365745f64656661756c745f7461670000000000000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016112e79190613165565b602060405180830381600087803b15801561130157600080fd5b505af1158015611315573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113399190810190612b3c565b92508273ffffffffffffffffffffffffffffffffffffffff166313db93466040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561139f57600080fd5b505af11580156113b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113d79190810190612b13565b91508173ffffffffffffffffffffffffffffffffffffffff1663e942b5166040805190810160405280600a81526020017f6669785f69645f303034000000000000000000000000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611463919061327a565b600060405180830381600087803b15801561147d57600080fd5b505af1158015611491573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b5168860008151811015156114c057fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611502919061346d565b600060405180830381600087803b15801561151c57600080fd5b505af1158015611530573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b51688600181518110151561155f57fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016115a191906132cf565b600060405180830381600087803b1580156115bb57600080fd5b505af11580156115cf573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b5168860028151811015156115fe57fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016116409190613418565b600060405180830381600087803b15801561165a57600080fd5b505af115801561166e573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b51688600381518110151561169d57fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016116df9190613359565b600060405180830381600087803b1580156116f957600080fd5b505af115801561170d573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b516876040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016117669190613245565b600060405180830381600087803b15801561178057600080fd5b505af1158015611794573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff166331afac366040805190810160405280600a81526020017f6669785f69645f30303400000000000000000000000000000000000000000000815250846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016118249291906131b7565b602060405180830381600087803b15801561183e57600080fd5b505af1158015611852573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118769190810190612b65565b9050600181141561188a57600093506118ae565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7f5157dc1ab0b55c7621be94a34b2ae4228f7d16e8271628060cc027b1a513b12f8488886040516118e19392919061303c565b60405180910390a18094505b5050505092915050565b6000806000806000806000945061190d8a610692565b151561197d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff94507f8718faa5c5c2bb075c6af3f223c80ed4c4632bd62204f0cbfdfb360b366ee20c858b8b8b8b60405161196d9594939291906130f6565b60405180910390a1849550611f30565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280601481526020017f646174615f7365745f64656661756c745f7461670000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611a289190613165565b602060405180830381600087803b158015611a4257600080fd5b505af1158015611a56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611a7a9190810190612b3c565b93508373ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611ae057600080fd5b505af1158015611af4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611b189190810190612ac1565b92508273ffffffffffffffffffffffffffffffffffffffff1663cd30a1d18b6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611b6f91906134a2565b600060405180830381600087803b158015611b8957600080fd5b505af1158015611b9d573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff166313db93466040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611c0557600080fd5b505af1158015611c19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611c3d9190810190612b13565b91508173ffffffffffffffffffffffffffffffffffffffff1663e942b5168a6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611c949190613304565b600060405180830381600087803b158015611cae57600080fd5b505af1158015611cc2573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffff","ffffffffffffff1663e942b516886040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611d1b919061338e565b600060405180830381600087803b158015611d3557600080fd5b505af1158015611d49573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b516896040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611da29190613245565b600060405180830381600087803b158015611dbc57600080fd5b505af1158015611dd0573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff1663bf2b70a16040805190810160405280600a81526020017f6669785f69645f3030340000000000000000000000000000000000000000000081525084866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611e62939291906131e7565b602060405180830381600087803b158015611e7c57600080fd5b505af1158015611e90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611eb49190810190612b65565b9050600181121515611ec95760009450611eed565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe94505b7f8718faa5c5c2bb075c6af3f223c80ed4c4632bd62204f0cbfdfb360b366ee20c858b8b8b8b604051611f249594939291906130f6565b60405180910390a18095505b5050505050949350505050565b60608060008060608573ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611fa957600080fd5b505af1158015611fbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611fe19190810190612b65565b60405190808252806020026020018201604052801561201457816020015b6060815260200190600190039081611fff5790505b509350600092505b8573ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561208057600080fd5b505af1158015612094573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506120b89190810190612b65565b831215612638578573ffffffffffffffffffffffffffffffffffffffff1663846719e0846040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016121149190612ff1565b602060405180830381600087803b15801561212e57600080fd5b505af1158015612142573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506121669190810190612b13565b915061225861221d8373ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016121c19061344d565b600060405180830381600087803b1580156121db57600080fd5b505af11580156121ef573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506122189190810190612bcf565b612644565b6040805190810160405280600181526020017f7c0000000000000000000000000000000000000000000000000000000000000081525061269d565b9050612315816123108473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016122b4906132af565b600060405180830381600087803b1580156122ce57600080fd5b505af11580156122e2573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061230b9190810190612bcf565b612644565b61269d565b9050612356816040805190810160405280600181526020017f7c0000000000000000000000000000000000000000000000000000000000000081525061269d565b90506124138161240e8473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016123b2906133f8565b600060405180830381600087803b1580156123cc57600080fd5b505af11580156123e0573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506124099190810190612bcf565b612644565b61269d565b9050612454816040805190810160405280600181526020017f7c0000000000000000000000000000000000000000000000000000000000000081525061269d565b90506125118161250c8473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016124b090613339565b600060405180830381600087803b1580156124ca57600080fd5b505af11580156124de573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506125079190810190612bcf565b612644565b61269d565b9050612552816040805190810160405280600181526020017f7c0000000000000000000000000000000000000000000000000000000000000081525061269d565b905061260f8161260a8473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016125ae90613225565b600060405180830381600087803b1580156125c857600080fd5b505af11580156125dc573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506126059190810190612bcf565b612644565b61269d565b905080848481518110151561262057fe5b9060200190602002018190525082600101925061201c565b83945050505050919050565b606060006126518361286e565b1415612694576040805190810160405280600181526020017f20000000000000000000000000000000000000000000000000000000000000008152509050612698565b8190505b919050565b606080606080606060008088955087945084518651016040519080825280601f01601f1916602001820160405280156126e55781602001602082028038833980820191505090505b50935083925060009150600090505b85518110156127a757858181518110151561270b57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561276a57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506126f4565b600090505b845181101561285f5784818151811015156127c357fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561282257fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506127ac565b83965050505050505092915050565b600081519050919050565b600082601f830112151561288c57600080fd5b813561289f61289a82613504565b6134d7565b9150818183526020840193506020810190508360005b838110156128e557813586016128cb8882612953565b8452602084019350602083019250506001810190506128b5565b5050505092915050565b60006128fb82516135f5565b905092915050565b600061290f8251613607565b905092915050565b60006129238251613619565b905092915050565b6000612937825161362b565b905092915050565b600061294b825161363d565b905092915050565b600082601f830112151561296657600080fd5b81356129796129748261352c565b6134d7565b9150808252602083016020830185838301111561299557600080fd5b6129a083828461366b565b50505092915050565b600082601f83011215156129bc57600080fd5b81356129cf6129ca82613558565b6134d7565b915080825260208301602083018583830111156129eb57600080fd5b6129f683828461366b565b50505092915050565b600082601f8301121515612a1257600080fd5b8151612a25612a2082613558565b6134d7565b91508082526020830160208301858383011115612a4157600080fd5b612a4c83828461367a565b50505092915050565b60008060408385031215612a6857600080fd5b600083013567ffffffffffffffff811115612a8257600080fd5b612a8e85828601612879565b925050602083013567ffffffffffffffff811115612aab57600080fd5b612ab7858286016129a9565b9150509250929050565b600060208284031215612ad357600080fd5b6000612ae1848285016128ef565b91505092915050565b600060208284031215612afc57600080fd5b6000612b0a84828501612903565b91505092915050565b600060208284031215612b2557600080fd5b6000612b3384828501612917565b91505092915050565b600060208284031215612b4e57600080fd5b6000612b5c8482850161292b565b91505092915050565b600060208284031215612b7757600080fd5b6000612b858482850161293f565b91505092915050565b600060208284031215612ba057600080fd5b600082013567ffffffffffffffff811115612bba57600080fd5b612bc6848285016129a9565b91505092915050565b600060208284031215612be157600080fd5b600082015167ffffffffffffffff811115612bfb57600080fd5b612c07848285016129ff565b91505092915050565b60008060408385031215612c2357600080fd5b600083013567ffffffffffffffff811115612c3d57600080fd5b612c49858286016129a9565b925050602083013567ffffffffffffffff811115612c6657600080fd5b612c72858286016129a9565b9150509250929050565b60008060008060808587031215612c9257600080fd5b600085013567ffffffffffffffff811115612cac57600080fd5b612cb8878288016129a9565b945050602085013567ffffffffffffffff811115612cd557600080fd5b","612ce1878288016129a9565b935050604085013567ffffffffffffffff811115612cfe57600080fd5b612d0a878288016129a9565b925050606085013567ffffffffffffffff811115612d2757600080fd5b612d33878288016129a9565b91505092959194509250565b6000612d4a82613591565b80845260208401935083602082028501612d6385613584565b60005b84811015612d9c578383038852612d7e838351612e1f565b9250612d89826135b2565b9150602088019750600181019050612d66565b508196508694505050505092915050565b612db6816135df565b82525050565b612dc581613647565b82525050565b612dd481613659565b82525050565b612de3816135eb565b82525050565b6000612df4826135a7565b808452612e0881602086016020860161367a565b612e11816136ad565b602085010191505092915050565b6000612e2a8261359c565b808452612e3e81602086016020860161367a565b612e47816136ad565b602085010191505092915050565b6000600882527f6578745f6a736f6e0000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600682527f6669785f696400000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f7461675f6e616d650000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f757064617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000600282527f69640000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f637265617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000600682527f7461675f696400000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000602082019050612feb6000830184612dad565b92915050565b60006020820190506130066000830184612dda565b92915050565b60006040820190506130216000830185612dda565b81810360208301526130338184612d3f565b90509392505050565b60006060820190506130516000830186612dda565b81810360208301526130638185612d3f565b905081810360408301526130778184612de9565b9050949350505050565b60006040820190506130966000830185612dda565b81810360208301526130a88184612de9565b90509392505050565b60006060820190506130c66000830186612dda565b81810360208301526130d88185612de9565b905081810360408301526130ec8184612de9565b9050949350505050565b600060a08201905061310b6000830188612dda565b818103602083015261311d8187612de9565b905081810360408301526131318186612de9565b905081810360608301526131458185612de9565b905081810360808301526131598184612de9565b90509695505050505050565b6000602082019050818103600083015261317f8184612e1f565b905092915050565b600060408201905081810360008301526131a18185612e1f565b90506131b06020830184612dbc565b9392505050565b600060408201905081810360008301526131d18185612e1f565b90506131e06020830184612dcb565b9392505050565b600060608201905081810360008301526132018186612e1f565b90506132106020830185612dcb565b61321d6040830184612dbc565b949350505050565b6000602082019050818103600083015261323e81612e55565b9050919050565b6000604082019050818103600083015261325e81612e55565b905081810360208301526132728184612de9565b905092915050565b6000604082019050818103600083015261329381612e8c565b905081810360208301526132a78184612e1f565b905092915050565b600060208201905081810360008301526132c881612ec3565b9050919050565b600060408201905081810360008301526132e881612ec3565b905081810360208301526132fc8184612e1f565b905092915050565b6000604082019050818103600083015261331d81612ec3565b905081810360208301526133318184612de9565b905092915050565b6000602082019050818103600083015261335281612efa565b9050919050565b6000604082019050818103600083015261337281612efa565b905081810360208301526133868184612e1f565b905092915050565b600060408201905081810360008301526133a781612efa565b905081810360208301526133bb8184612de9565b905092915050565b600060408201905081810360008301526133dc81612f31565b905081810360208301526133f08184612de9565b905092915050565b6000602082019050818103600083015261341181612f68565b9050919050565b6000604082019050818103600083015261343181612f68565b905081810360208301526134458184612e1f565b905092915050565b6000602082019050818103600083015261346681612f9f565b9050919050565b6000604082019050818103600083015261348681612f9f565b9050818103602083015261349a8184612e1f565b905092915050565b600060408201905081810360008301526134bb81612f9f565b905081810360208301526134cf8184612de9565b905092915050565b6000604051905081810181811067ffffffffffffffff821117156134fa57600080fd5b8060405250919050565b600067ffffffffffffffff82111561351b57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561354357600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561356f57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b6000613600826135bf565b9050919050565b6000613612826135bf565b9050919050565b6000613624826135bf565b9050919050565b6000613636826135bf565b9050919050565b6000819050919050565b6000613652826135bf565b9050919050565b6000613664826135bf565b9050919050565b82818337600083830152505050565b60005b8381101561369857808201518184015260208101905061367d565b838111156136a7576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a72305820a929ac7ad11bac154b9fb3a45d01bb60b87bb572d320c62439575ce6e833976c6c6578706572696d656e74616cf50037"};

    public static final String BINARY = String.join("", BINARY_ARRAY);

    public static final String[] SM_BINARY_ARRAY = {"","6020017f6669785f69645f303034000000000000000000000000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610d34919061344d565b600060405180830381600087803b158015610d4e57600080fd5b505af1158015610d62573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4886000815181101515610d9157fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610dd391906133e3565b600060405180830381600087803b158015610ded57600080fd5b505af1158015610e01573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4886001815181101515610e3057fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610e7291906132cf565b600060405180830381600087803b158015610e8c57600080fd5b505af1158015610ea0573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4886002815181101515610ecf57fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610f119190613359565b600060405180830381600087803b158015610f2b57600080fd5b505af1158015610f3f573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4886003815181101515610f6e57fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610fb09190613245565b600060405180830381600087803b158015610fca57600080fd5b505af1158015610fde573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4876040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161103791906134a2565b600060405180830381600087803b15801561105157600080fd5b505af1158015611065573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff16634c6f30c06040805190810160405280600a81526020017f6669785f69645f30303400000000000000000000000000000000000000000000815250846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016110f59291906131b7565b602060405180830381600087803b15801561110f57600080fd5b505af1158015611123573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111479190810190612b65565b9050600181141561115b576000935061117f565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7fcb263a23d186eec891d55f1e0ba96ec8290af8c893d32d644c22dbff0953e51f8488886040516111b29392919061303c565b60405180910390a18094505b5050505092915050565b60008060008060008093506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280601481526020017f646174615f7365745f64656661756c745f7461670000000000000000000000008152506040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161127e9190613165565b602060405180830381600087803b15801561129857600080fd5b505af11580156112ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112d09190810190612b3c565b92508273ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561133657600080fd5b505af115801561134a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061136e9190810190612ac1565b91508173ffffffffffffffffffffffffffffffffffffffff1663ae763db5876040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016113c59190613418565b600060405180830381600087803b1580156113df57600080fd5b505af11580156113f3573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff166309ff42f06040805190810160405280600a81526020017f6669785f69645f30303400000000000000000000000000000000000000000000815250846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611483929190613187565b602060405180830381600087803b15801561149d57600080fd5b505af11580156114b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506114d59190810190612b65565b90506001811215156114ea576000935061150e565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7f5d528ae6f2f8bddbfc139090621683e2eaefebbd3654e1db601848d2581a193b848760405161153f929190613081565b60405180910390a180945050505050919050565b600080600080600080600094506115698a6101da565b15156115d9577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff94507fcec28b4baf7cc2a7ed2fc9d09086089702d907240b080f609acb60309a914084858b8b8b8b6040516115c99594939291906130f6565b60405180910390a1849550611b8c565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280601481526020017f646174615f7365745f64656661756c745f7461670000000000000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016116849190613165565b602060405180830381600087803b15801561169e57600080fd5b505af11580156116b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506116d69190810190612b3c565b93508373ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561173c57600080fd5b505af1158015611750573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117749190810190612ac1565b92508273ffffffffffffffffffffffffffffffffffffffff1663ae763db58b6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016117cb9190613418565b600060405180830381600087803b1580156117e557600080fd5b505af11580156117f9573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff16635887ab246040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561186157600080fd5b505af1158015611875573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118999190810190612b13565b91508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48a6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016118f09190613304565b600060405180830381600087803b15801561190a57600080fd5b505af115801561191e573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4886040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611977919061327a565b600060405180830381600087803b15801561199157600080fd5b505af11580156119a5573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4896040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016119fe91906134a2565b600060405180830381600087803b158015611a1857600080fd5b505af1158015611a2c573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff1663664b37d66040805190810160405280600a81526020017f6669785f69645f3030340000000000000000000000000000000000000000000081525084866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611abe939291906131e7565b602060405180830381600087803b158015611ad857600080fd5b505af1158015611aec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611b109190810190612b65565b9050600181121515611b255760009450611b49565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe94505b7fcec28b4baf7cc2a7ed2fc9d09086089702d907240b080f609acb60309a914084858b8b8b8b604051611b809594939291906130f6565b60405180910390a18095505b5050505050949350505050565b600060606000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280601481526020017f646174615f7365745f64656661756c745f7461670000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611c4b9190613165565b602060405180830381600087803b158015611c6557600080fd5b505af1158015611c79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611c9d9190810190612b3c565b91508173ffffffffffffffffffffffffffffffffffffffff1663d8ac59576040805190810160405280600a81526020017f6669785f69645f","303034000000000000000000000000000000000000000000008152508473ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611d5557600080fd5b505af1158015611d69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611d8d9190810190612ac1565b6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611dc6929190613187565b602060405180830381600087803b158015611de057600080fd5b505af1158015611df4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611e189190810190612aea565b90508073ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611e7e57600080fd5b505af1158015611e92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611eb69190810190612b65565b60001415611f24577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6000604051908082528060200260200182016040528015611f1457816020015b6060815260200190600190039081611eff5790505b5081915080905093509350611f37565b6000611f2f82611f3d565b819150935093505b50509091565b60608060008060608573ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611fa957600080fd5b505af1158015611fbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611fe19190810190612b65565b60405190808252806020026020018201604052801561201457816020015b6060815260200190600190039081611fff5790505b509350600092505b8573ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561208057600080fd5b505af1158015612094573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506120b89190810190612b65565b831215612638578573ffffffffffffffffffffffffffffffffffffffff16633dd2b614846040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016121149190612ff1565b602060405180830381600087803b15801561212e57600080fd5b505af1158015612142573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506121669190810190612b13565b915061225861221d8373ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016121c1906133c3565b600060405180830381600087803b1580156121db57600080fd5b505af11580156121ef573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506122189190810190612bcf565b612644565b6040805190810160405280600181526020017f7c0000000000000000000000000000000000000000000000000000000000000081525061269d565b9050612315816123108473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016122b4906132af565b600060405180830381600087803b1580156122ce57600080fd5b505af11580156122e2573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061230b9190810190612bcf565b612644565b61269d565b9050612356816040805190810160405280600181526020017f7c0000000000000000000000000000000000000000000000000000000000000081525061269d565b90506124138161240e8473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016123b290613339565b600060405180830381600087803b1580156123cc57600080fd5b505af11580156123e0573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506124099190810190612bcf565b612644565b61269d565b9050612454816040805190810160405280600181526020017f7c0000000000000000000000000000000000000000000000000000000000000081525061269d565b90506125118161250c8473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016124b090613225565b600060405180830381600087803b1580156124ca57600080fd5b505af11580156124de573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506125079190810190612bcf565b612644565b61269d565b9050612552816040805190810160405280600181526020017f7c0000000000000000000000000000000000000000000000000000000000000081525061269d565b905061260f8161260a8473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016125ae90613482565b600060405180830381600087803b1580156125c857600080fd5b505af11580156125dc573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506126059190810190612bcf565b612644565b61269d565b905080848481518110151561262057fe5b9060200190602002018190525082600101925061201c565b83945050505050919050565b606060006126518361286e565b1415612694576040805190810160405280600181526020017f20000000000000000000000000000000000000000000000000000000000000008152509050612698565b8190505b919050565b606080606080606060008088955087945084518651016040519080825280601f01601f1916602001820160405280156126e55781602001602082028038833980820191505090505b50935083925060009150600090505b85518110156127a757858181518110151561270b57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561276a57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506126f4565b600090505b845181101561285f5784818151811015156127c357fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561282257fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506127ac565b83965050505050505092915050565b600081519050919050565b600082601f830112151561288c57600080fd5b813561289f61289a82613504565b6134d7565b9150818183526020840193506020810190508360005b838110156128e557813586016128cb8882612953565b8452602084019350602083019250506001810190506128b5565b5050505092915050565b60006128fb82516135f5565b905092915050565b600061290f8251613607565b905092915050565b60006129238251613619565b905092915050565b6000612937825161362b565b905092915050565b600061294b825161363d565b905092915050565b600082601f830112151561296657600080fd5b81356129796129748261352c565b6134d7565b9150808252602083016020830185838301111561299557600080fd5b6129a083828461366b565b50505092915050565b600082601f83011215156129bc57600080fd5b81356129cf6129ca82613558565b6134d7565b915080825260208301602083018583830111156129eb57600080fd5b6129f683828461366b565b50505092915050565b600082601f8301121515612a1257600080fd5b8151612a25612a2082613558565b6134d7565b91508082526020830160208301858383011115612a4157600080fd5b612a4c83828461367a565b50505092915050565b60008060408385031215612a6857600080fd5b600083013567ffffffffffffffff811115612a8257600080fd5b612a8e85828601612879565b925050602083013567ffffffffffffffff811115612aab57600080fd5b612ab7858286016129a9565b9150509250929050565b600060208284031215612ad357600080fd5b6000612ae1848285016128ef565b91505092915050565b600060208284031215612afc57600080fd5b6000612b0a84828501612903565b91505092915050565b600060208284031215612b2557600080fd5b6000612b3384828501612917565b91505092915050565b600060208284031215612b4e57600080fd5b6000612b5c8482850161292b565b91505092915050565b600060208284031215612b7757600080fd5b6000612b858482850161293f565b91505092915050565b600060208284031215612ba057600080fd5b600082013567ffffffffffffffff811115612bba57600080fd5b612bc6848285016129a9565b91505092915050565b600060208284031215612be157600080fd5b600082015167ffffffffffffffff811115612bfb57600080fd5b612c07848285016129ff565b91505092915050565b60008060408385031215612c2357600080fd5b600083013567ffffffffffffffff811115612c3d57600080fd5b612c49858286016129a9565b925050602083013567ffffffffffffffff811115612c6657600080fd5b612c72858286016129a9565b9150509250929050565b60008060008060808587031215612c9257600080fd5b600085013567ffffffffffffffff811115612cac57600080fd5b612cb8878288016129a9565b945050602085013567ffffffffffffffff811115612cd557600080fd5b","612ce1878288016129a9565b935050604085013567ffffffffffffffff811115612cfe57600080fd5b612d0a878288016129a9565b925050606085013567ffffffffffffffff811115612d2757600080fd5b612d33878288016129a9565b91505092959194509250565b6000612d4a82613591565b80845260208401935083602082028501612d6385613584565b60005b84811015612d9c578383038852612d7e838351612e1f565b9250612d89826135b2565b9150602088019750600181019050612d66565b508196508694505050505092915050565b612db6816135df565b82525050565b612dc581613647565b82525050565b612dd481613659565b82525050565b612de3816135eb565b82525050565b6000612df4826135a7565b808452612e0881602086016020860161367a565b612e11816136ad565b602085010191505092915050565b6000612e2a8261359c565b808452612e3e81602086016020860161367a565b612e47816136ad565b602085010191505092915050565b6000600c82527f757064617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f7461675f6e616d650000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f637265617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000600282527f69640000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600682527f7461675f696400000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600682527f6669785f696400000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f6578745f6a736f6e0000000000000000000000000000000000000000000000006020830152604082019050919050565b6000602082019050612feb6000830184612dad565b92915050565b60006020820190506130066000830184612dda565b92915050565b60006040820190506130216000830185612dda565b81810360208301526130338184612d3f565b90509392505050565b60006060820190506130516000830186612dda565b81810360208301526130638185612d3f565b905081810360408301526130778184612de9565b9050949350505050565b60006040820190506130966000830185612dda565b81810360208301526130a88184612de9565b90509392505050565b60006060820190506130c66000830186612dda565b81810360208301526130d88185612de9565b905081810360408301526130ec8184612de9565b9050949350505050565b600060a08201905061310b6000830188612dda565b818103602083015261311d8187612de9565b905081810360408301526131318186612de9565b905081810360608301526131458185612de9565b905081810360808301526131598184612de9565b90509695505050505050565b6000602082019050818103600083015261317f8184612e1f565b905092915050565b600060408201905081810360008301526131a18185612e1f565b90506131b06020830184612dbc565b9392505050565b600060408201905081810360008301526131d18185612e1f565b90506131e06020830184612dcb565b9392505050565b600060608201905081810360008301526132018186612e1f565b90506132106020830185612dcb565b61321d6040830184612dbc565b949350505050565b6000602082019050818103600083015261323e81612e55565b9050919050565b6000604082019050818103600083015261325e81612e55565b905081810360208301526132728184612e1f565b905092915050565b6000604082019050818103600083015261329381612e55565b905081810360208301526132a78184612de9565b905092915050565b600060208201905081810360008301526132c881612e8c565b9050919050565b600060408201905081810360008301526132e881612e8c565b905081810360208301526132fc8184612e1f565b905092915050565b6000604082019050818103600083015261331d81612e8c565b905081810360208301526133318184612de9565b905092915050565b6000602082019050818103600083015261335281612ec3565b9050919050565b6000604082019050818103600083015261337281612ec3565b905081810360208301526133868184612e1f565b905092915050565b600060408201905081810360008301526133a781612efa565b905081810360208301526133bb8184612de9565b905092915050565b600060208201905081810360008301526133dc81612f31565b9050919050565b600060408201905081810360008301526133fc81612f31565b905081810360208301526134108184612e1f565b905092915050565b6000604082019050818103600083015261343181612f31565b905081810360208301526134458184612de9565b905092915050565b6000604082019050818103600083015261346681612f68565b9050818103602083015261347a8184612e1f565b905092915050565b6000602082019050818103600083015261349b81612f9f565b9050919050565b600060408201905081810360008301526134bb81612f9f565b905081810360208301526134cf8184612de9565b905092915050565b6000604051905081810181811067ffffffffffffffff821117156134fa57600080fd5b8060405250919050565b600067ffffffffffffffff82111561351b57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561354357600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561356f57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b6000613600826135bf565b9050919050565b6000613612826135bf565b9050919050565b6000613624826135bf565b9050919050565b6000613636826135bf565b9050919050565b6000819050919050565b6000613652826135bf565b9050919050565b6000613664826135bf565b9050919050565b82818337600083830152505050565b60005b8381101561369857808201518184015260208101905061367d565b838111156136a7576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a72305820a2a9a79baa356fdb1a6b9f0945c291142da8cb210a55fc78fb200d454b4ae1d46c6578706572696d656e74616cf50037"};

    public static final String SM_BINARY = String.join("", SM_BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"ext_json\",\"type\":\"string\"}],\"name\":\"updateExtJson\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tag_id\",\"type\":\"string\"}],\"name\":\"isExist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tag_id\",\"type\":\"string\"}],\"name\":\"deleteByTagId\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"selectAll\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"params\",\"type\":\"string[]\"},{\"name\":\"ext_json\",\"type\":\"string\"}],\"name\":\"insert\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tag_id\",\"type\":\"string\"},{\"name\":\"tag_name\",\"type\":\"string\"},{\"name\":\"ext_json\",\"type\":\"string\"},{\"name\":\"updated_time\",\"type\":\"string\"}],\"name\":\"update\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"params\",\"type\":\"string[]\"},{\"indexed\":false,\"name\":\"ext_json\",\"type\":\"string\"}],\"name\":\"insertEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"tag_id\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"tag_name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"ext_json\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"updated_time\",\"type\":\"string\"}],\"name\":\"updateEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"tag_id\",\"type\":\"string\"}],\"name\":\"deleteByTagIdEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"id\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"ext_json\",\"type\":\"string\"}],\"name\":\"updateExtJsonEvent\",\"type\":\"event\"}]"};

    public static final String ABI = String.join("", ABI_ARRAY);

    public static final String FUNC_UPDATEEXTJSON = "updateExtJson";

    public static final String FUNC_ISEXIST = "isExist";

    public static final String FUNC_DELETEBYTAGID = "deleteByTagId";

    public static final String FUNC_SELECTALL = "selectAll";

    public static final String FUNC_INSERT = "insert";

    public static final String FUNC_UPDATE = "update";

    public static final Event INSERTEVENT_EVENT = new Event("insertEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event UPDATEEVENT_EVENT = new Event("updateEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event DELETEBYTAGIDEVENT_EVENT = new Event("deleteByTagIdEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event UPDATEEXTJSONEVENT_EVENT = new Event("updateExtJsonEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
    ;

    protected DataSetDefaultTagContract(String contractAddress, Client client, CryptoKeyPair credential) {
        super(getBinary(client.getCryptoSuite()), contractAddress, client, credential);
    }

    public static String getBinary(CryptoSuite cryptoSuite) {
        return (cryptoSuite.getCryptoTypeConfig() == CryptoType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public TransactionReceipt updateExtJson(String id, String ext_json) {
        final Function function = new Function(
                FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(new Utf8String(id),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void updateExtJson(String id, String ext_json, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(new Utf8String(id),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForUpdateExtJson(String id, String ext_json) {
        final Function function = new Function(
                FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(new Utf8String(id),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<String, String> getUpdateExtJsonInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<String, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue()
                );
    }

    public Tuple1<BigInteger> getUpdateExtJsonOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public Boolean isExist(String tag_id) throws ContractException {
        final Function function = new Function(FUNC_ISEXIST, 
                Arrays.<Type>asList(new Utf8String(tag_id)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeCallWithSingleValueReturn(function, Boolean.class);
    }

    public TransactionReceipt deleteByTagId(String tag_id) {
        final Function function = new Function(
                FUNC_DELETEBYTAGID, 
                Arrays.<Type>asList(new Utf8String(tag_id)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void deleteByTagId(String tag_id, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_DELETEBYTAGID, 
                Arrays.<Type>asList(new Utf8String(tag_id)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForDeleteByTagId(String tag_id) {
        final Function function = new Function(
                FUNC_DELETEBYTAGID, 
                Arrays.<Type>asList(new Utf8String(tag_id)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getDeleteByTagIdInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_DELETEBYTAGID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple1<BigInteger> getDeleteByTagIdOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_DELETEBYTAGID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public Tuple2<BigInteger, List<String>> selectAll() throws ContractException {
        final Function function = new Function(FUNC_SELECTALL, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<DynamicArray<Utf8String>>() {}));
        List<Type> results = executeCallWithMultipleValueReturn(function);
        return new Tuple2<BigInteger, List<String>>(
                (BigInteger) results.get(0).getValue(), 
                convertToNative((List<Utf8String>) results.get(1).getValue()));
    }

    public TransactionReceipt insert(List<String> params, String ext_json) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(params.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(params, Utf8String.class)),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void insert(List<String> params, String ext_json, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(params.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(params, Utf8String.class)),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForInsert(List<String> params, String ext_json) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(params.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(params, Utf8String.class)),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<List<String>, String> getInsertInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_INSERT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<List<String>, String>(

                convertToNative((List<Utf8String>) results.get(0).getValue()), 
                (String) results.get(1).getValue()
                );
    }

    public Tuple1<BigInteger> getInsertOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_INSERT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public TransactionReceipt update(String tag_id, String tag_name, String ext_json, String updated_time) {
        final Function function = new Function(
                FUNC_UPDATE, 
                Arrays.<Type>asList(new Utf8String(tag_id),
                new Utf8String(tag_name),
                new Utf8String(ext_json),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void update(String tag_id, String tag_name, String ext_json, String updated_time, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UPDATE, 
                Arrays.<Type>asList(new Utf8String(tag_id),
                new Utf8String(tag_name),
                new Utf8String(ext_json),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForUpdate(String tag_id, String tag_name, String ext_json, String updated_time) {
        final Function function = new Function(
                FUNC_UPDATE, 
                Arrays.<Type>asList(new Utf8String(tag_id),
                new Utf8String(tag_name),
                new Utf8String(ext_json),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple4<String, String, String, String> getUpdateInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_UPDATE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple4<String, String, String, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (String) results.get(2).getValue(), 
                (String) results.get(3).getValue()
                );
    }

    public Tuple1<BigInteger> getUpdateOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_UPDATE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public List<InsertEventEventResponse> getInsertEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(INSERTEVENT_EVENT, transactionReceipt);
        ArrayList<InsertEventEventResponse> responses = new ArrayList<InsertEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            InsertEventEventResponse typedResponse = new InsertEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.params = (List<String>) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.ext_json = (String) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeInsertEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeInsertEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<UpdateEventEventResponse> getUpdateEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(UPDATEEVENT_EVENT, transactionReceipt);
        ArrayList<UpdateEventEventResponse> responses = new ArrayList<UpdateEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            UpdateEventEventResponse typedResponse = new UpdateEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.tag_id = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.tag_name = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.ext_json = (String) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse.updated_time = (String) eventValues.getNonIndexedValues().get(4).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeUpdateEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeUpdateEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<DeleteByTagIdEventEventResponse> getDeleteByTagIdEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(DELETEBYTAGIDEVENT_EVENT, transactionReceipt);
        ArrayList<DeleteByTagIdEventEventResponse> responses = new ArrayList<DeleteByTagIdEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            DeleteByTagIdEventEventResponse typedResponse = new DeleteByTagIdEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.tag_id = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeDeleteByTagIdEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(DELETEBYTAGIDEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeDeleteByTagIdEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(DELETEBYTAGIDEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<UpdateExtJsonEventEventResponse> getUpdateExtJsonEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(UPDATEEXTJSONEVENT_EVENT, transactionReceipt);
        ArrayList<UpdateExtJsonEventEventResponse> responses = new ArrayList<UpdateExtJsonEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            UpdateExtJsonEventEventResponse typedResponse = new UpdateExtJsonEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.id = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.ext_json = (String) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeUpdateExtJsonEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEXTJSONEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeUpdateExtJsonEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEXTJSONEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public static DataSetDefaultTagContract load(String contractAddress, Client client, CryptoKeyPair credential) {
        return new DataSetDefaultTagContract(contractAddress, client, credential);
    }

    public static DataSetDefaultTagContract deploy(Client client, CryptoKeyPair credential) throws ContractException {
        return deploy(DataSetDefaultTagContract.class, client, credential, getBinary(client.getCryptoSuite()), "");
    }

    public static class InsertEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public List<String> params;

        public String ext_json;
    }

    public static class UpdateEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public String tag_id;

        public String tag_name;

        public String ext_json;

        public String updated_time;
    }

    public static class DeleteByTagIdEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public String tag_id;
    }

    public static class UpdateExtJsonEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public String id;

        public String ext_json;
    }
}
