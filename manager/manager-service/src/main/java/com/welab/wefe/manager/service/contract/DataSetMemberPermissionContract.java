package com.welab.wefe.manager.service.contract;

import org.fisco.bcos.sdk.abi.FunctionReturnDecoder;
import org.fisco.bcos.sdk.abi.TypeReference;
import org.fisco.bcos.sdk.abi.datatypes.*;
import org.fisco.bcos.sdk.abi.datatypes.generated.Int256;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple1;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple2;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple7;
import org.fisco.bcos.sdk.client.Client;
import org.fisco.bcos.sdk.contract.Contract;
import org.fisco.bcos.sdk.crypto.CryptoSuite;
import org.fisco.bcos.sdk.crypto.keypair.CryptoKeyPair;
import org.fisco.bcos.sdk.eventsub.EventCallback;
import org.fisco.bcos.sdk.model.CryptoType;
import org.fisco.bcos.sdk.model.TransactionReceipt;
import org.fisco.bcos.sdk.model.callback.TransactionCallback;
import org.fisco.bcos.sdk.transaction.model.exception.ContractException;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

@SuppressWarnings("unchecked")
public class DataSetMemberPermissionContract extends Contract {
    public static final String[] BINARY_ARRAY = {"","000000000000000000028152600401610cc89190614025565b600060405180830381600087803b158015610ce257600080fd5b505af1158015610cf6573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663e8434e396040805190810160405280600a81526020017f6669785f69645f30303300000000000000000000000000000000000000000000815250846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610d86929190613d90565b602060405180830381600087803b158015610da057600080fd5b505af1158015610db4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610dd891908101906136a9565b905060008173ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610e4057600080fd5b505af1158015610e54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e789190810190613724565b1115610e875760019350610e8c565b600093505b505050919050565b6000606060008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280601a81526020017f646174615f7365745f6d656d6265725f7065726d697373696f6e0000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610f489190613d6e565b602060405180830381600087803b158015610f6257600080fd5b505af1158015610f76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610f9a91908101906136fb565b92508273ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561100057600080fd5b505af1158015611014573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506110389190810190613680565b91508173ffffffffffffffffffffffffffffffffffffffff16637ec1cc6588886040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611091929190613c6d565b600060405180830381600087803b1580156110ab57600080fd5b505af11580156110bf573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663e8434e396040805190810160405280600a81526020017f6669785f69645f30303300000000000000000000000000000000000000000000815250846040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161114f929190613d90565b602060405180830381600087803b15801561116957600080fd5b505af115801561117d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111a191908101906136a9565b90508073ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561120757600080fd5b505af115801561121b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061123f9190810190613724565b600014156112ad577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600060405190808252806020026020018201604052801561129d57816020015b60608152602001906001900390816112885790505b50819150809050945094506112c0565b60006112b882612a24565b819150945094505b5050509250929050565b600060606000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280601a81526020017f646174615f7365745f6d656d6265725f7065726d697373696f6e0000000000008152506040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161137c9190613d6e565b602060405180830381600087803b15801561139657600080fd5b505af11580156113aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113ce91908101906136fb565b91508173ffffffffffffffffffffffffffffffffffffffff1663e8434e396040805190810160405280600a81526020017f6669785f69645f303033000000000000000000000000000000000000000000008152508473ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561148657600080fd5b505af115801561149a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506114be9190810190613680565b6040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016114f7929190613d90565b602060405180830381600087803b15801561151157600080fd5b505af1158015611525573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061154991908101906136a9565b90508073ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156115af57600080fd5b505af11580156115c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506115e79190810190613724565b60001415611655577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600060405190808252806020026020018201604052801561164557816020015b60608152602001906001900390816116305790505b5081915080905093509350611668565b600061166082612a24565b819150935093505b50509091565b600080600080600080600094506116848d610ad0565b151561171a577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff94507fc14b935603e398b2024d314b5155b8507ec77056d2195ab98fa7e18af0a67e20858e8e8e8e8e8e8e6040516116ea989796959493929190613cc6565b60405180910390a17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9550611e68565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280601a81526020017f646174615f7365745f6d656d6265725f7065726d697373696f6e0000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016117c59190613d6e565b602060405180830381600087803b1580156117df57600080fd5b505af11580156117f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061181791908101906136fb565b93508373ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561187d57600080fd5b505af1158015611891573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118b59190810190613680565b92508273ffffffffffffffffffffffffffffffffffffffff1663cd30a1d18e6040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161190c9190614025565b600060405180830381600087803b15801561192657600080fd5b505af115801561193a573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff166313db93466040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156119a257600080fd5b505af11580156119b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506119da91908101906136d2565b91508173ffffffffffffffffffffffffffffffffffffffff1663e942b5168d6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611a319190613ea3565b600060405180830381600087803b158015611a4b57600080fd5b505af1158015611a5f573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b5168c6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611ab89190613e4e565b600060405180830381600087803b158015611ad257600080fd5b505af1158015611ae6573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b5168b6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611b3f919061407a565b600060405180830381600087803b158015611b5957600080fd5b505af1158015611b6d573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b5168a6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611bc69190613fd0565b600060405180830381600087803b158015611be057600080fd5b505af1158015611bf4573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16632ef8ba74896040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611c4d9190613f82565b600060405180830381600087803b158015611c6757600080fd5b505af1158015611c7b573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b516886040518263ffffffff167c0100000000000000","000000000000000000000000000000000000000000028152600401611cd49190613ef8565b600060405180830381600087803b158015611cee57600080fd5b505af1158015611d02573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff1663bf2b70a16040805190810160405280600a81526020017f6669785f69645f3030330000000000000000000000000000000000000000000081525084866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611d9493929190613df0565b602060405180830381600087803b158015611dae57600080fd5b505af1158015611dc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611de69190810190613724565b9050600181121515611dfb5760009450611e1f565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe94505b7fc14b935603e398b2024d314b5155b8507ec77056d2195ab98fa7e18af0a67e20858e8e8e8e8e8e8e604051611e5c989796959493929190613cc6565b60405180910390a18095505b5050505050979650505050505050565b6000806000806000809350611e8c8c610ad0565b15611f21577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff93507fc0d844becfcc141ed1bcf48131982727784ed6435ca8f53352fd7f9b89b951c9848d8d8d8d8d8d8d604051611ef1989796959493929190613cc6565b60405180910390a17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff945061268a565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280601a81526020017f646174615f7365745f6d656d6265725f7065726d697373696f6e0000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611fcc9190613d6e565b602060405180830381600087803b158015611fe657600080fd5b505af1158015611ffa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061201e91908101906136fb565b92508273ffffffffffffffffffffffffffffffffffffffff166313db93466040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561208457600080fd5b505af1158015612098573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506120bc91908101906136d2565b91508173ffffffffffffffffffffffffffffffffffffffff1663e942b5166040805190810160405280600a81526020017f6669785f69645f303033000000000000000000000000000000000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016121489190613f2d565b600060405180830381600087803b15801561216257600080fd5b505af1158015612176573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b5168d6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016121cf9190614025565b600060405180830381600087803b1580156121e957600080fd5b505af11580156121fd573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b5168c6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016122569190613ea3565b600060405180830381600087803b15801561227057600080fd5b505af1158015612284573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b5168b6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016122dd9190613e4e565b600060405180830381600087803b1580156122f757600080fd5b505af115801561230b573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b5168a6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612364919061407a565b600060405180830381600087803b15801561237e57600080fd5b505af1158015612392573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b516896040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016123eb9190613fd0565b600060405180830381600087803b15801561240557600080fd5b505af1158015612419573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16632ef8ba74886040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016124729190613f82565b600060405180830381600087803b15801561248c57600080fd5b505af11580156124a0573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b516876040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016124f99190613ef8565b600060405180830381600087803b15801561251357600080fd5b505af1158015612527573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff166331afac366040805190810160405280600a81526020017f6669785f69645f30303300000000000000000000000000000000000000000000815250846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016125b7929190613dc0565b602060405180830381600087803b1580156125d157600080fd5b505af11580156125e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506126099190810190613724565b9050600181141561261d5760009350612641565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7fc0d844becfcc141ed1bcf48131982727784ed6435ca8f53352fd7f9b89b951c9848d8d8d8d8d8d8d60405161267e989796959493929190613cc6565b60405180910390a18094505b50505050979650505050505050565b60008060008060008093506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280601a81526020017f646174615f7365745f6d656d6265725f7065726d697373696f6e0000000000008152506040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161274f9190613d6e565b602060405180830381600087803b15801561276957600080fd5b505af115801561277d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506127a191908101906136fb565b92508273ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561280757600080fd5b505af115801561281b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061283f9190810190613680565b91508173ffffffffffffffffffffffffffffffffffffffff1663cd30a1d1876040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016128969190613ea3565b600060405180830381600087803b1580156128b057600080fd5b505af11580156128c4573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff166328bb21176040805190810160405280600a81526020017f6669785f69645f30303300000000000000000000000000000000000000000000815250846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612954929190613d90565b602060405180830381600087803b15801561296e57600080fd5b505af1158015612982573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506129a69190810190613724565b90506001811215156129bb57600093506129df565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7fe09f4966609778cce39c8e76b023c6fdcfdc04aec687aabf43f58e8084ddb9528487604051612a10929190613c96565b60405180910390a180945050505050919050565b60608060008060608573ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612a9057600080fd5b505af1158015612aa4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612ac89190810190613724565b604051908082528060200260200182016040528015612afb57816020015b6060815260200190600190039081612ae65790505b509350600092505b8573ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612b6757600080fd5b505af1158015612b7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612b9f9190810190613724565b83121561331b578573ffffffffffffffffffffffffffffffffffffffff1663846719e0846040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612bfb9190613c22565b602060405180830381600087803b158015612c1557600080fd5b505af1158015612c29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612c4d91908101906136d2565b9150612d3f612d048373ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612ca890614005565b60006040518083","","20830152613cbd81846139e3565b90509392505050565b600061010082019050613cdc600083018b6139d4565b8181036020830152613cee818a6139e3565b90508181036040830152613d0281896139e3565b90508181036060830152613d1681886139e3565b90508181036080830152613d2a81876139e3565b905081810360a0830152613d3e81866139e3565b9050613d4d60c08301856139d4565b81810360e0830152613d5f81846139e3565b90509998505050505050505050565b60006020820190508181036000830152613d888184613a19565b905092915050565b60006040820190508181036000830152613daa8185613a19565b9050613db960208301846139b6565b9392505050565b60006040820190508181036000830152613dda8185613a19565b9050613de960208301846139c5565b9392505050565b60006060820190508181036000830152613e0a8186613a19565b9050613e1960208301856139c5565b613e2660408301846139b6565b949350505050565b60006020820190508181036000830152613e4781613a4f565b9050919050565b60006040820190508181036000830152613e6781613a4f565b90508181036020830152613e7b81846139e3565b905092915050565b60006020820190508181036000830152613e9c81613a86565b9050919050565b60006040820190508181036000830152613ebc81613a86565b90508181036020830152613ed081846139e3565b905092915050565b60006020820190508181036000830152613ef181613abd565b9050919050565b60006040820190508181036000830152613f1181613abd565b90508181036020830152613f2581846139e3565b905092915050565b60006040820190508181036000830152613f4681613af4565b90508181036020830152613f5a8184613a19565b905092915050565b60006020820190508181036000830152613f7b81613b2b565b9050919050565b60006040820190508181036000830152613f9b81613b2b565b9050613faa60208301846139d4565b92915050565b60006020820190508181036000830152613fc981613b62565b9050919050565b60006040820190508181036000830152613fe981613b62565b90508181036020830152613ffd81846139e3565b905092915050565b6000602082019050818103600083015261401e81613b99565b9050919050565b6000604082019050818103600083015261403e81613b99565b9050818103602083015261405281846139e3565b905092915050565b6000602082019050818103600083015261407381613bd0565b9050919050565b6000604082019050818103600083015261409381613bd0565b905081810360208301526140a781846139e3565b905092915050565b6000604051905081810181811067ffffffffffffffff821117156140d257600080fd5b8060405250919050565b600067ffffffffffffffff8211156140f357600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b600061418482614143565b9050919050565b600061419682614143565b9050919050565b60006141a882614143565b9050919050565b60006141ba82614143565b9050919050565b6000819050919050565b60006141d682614143565b9050919050565b60006141e882614143565b9050919050565b82818337600083830152505050565b60005b8381101561421c578082015181840152602081019050614201565b8381111561422b576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a72305820085ab76d8fde62499a3ccfa08cfe1c21d3f1cb32ac9cef476d84bfb3328e99f56c6578706572696d656e74616cf50037"};

    public static final String BINARY = String.join("", BINARY_ARRAY);

    public static final String[] SM_BINARY_ARRAY = {"","5190810160405280600a81526020017f6669785f69645f3030330000000000000000000000000000000000000000000081525084866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610d1e93929190613df1565b602060405180830381600087803b158015610d3857600080fd5b505af1158015610d4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610d709190810190613725565b9050600181121515610d855760009450610da9565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe94505b7f8ef7162f3a3dcb46a71eec69908d5a8530aa63dda24b5dfa23c20f704e01b72c858e8e8e8e8e8e8e604051610de6989796959493929190613cc7565b60405180910390a18095505b5050505050979650505050505050565b6000806000806000809350610e168c611a55565b15610eab577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff93507f0541655c3d49a0dd0d71384602057b81c0c3233fa1a59e45789fbea68e500cb7848d8d8d8d8d8d8d604051610e7b989796959493929190613cc7565b60405180910390a17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9450611614565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280601a81526020017f646174615f7365745f6d656d6265725f7065726d697373696f6e0000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610f569190613d6f565b602060405180830381600087803b158015610f7057600080fd5b505af1158015610f84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610fa891908101906136fc565b92508273ffffffffffffffffffffffffffffffffffffffff16635887ab246040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561100e57600080fd5b505af1158015611022573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061104691908101906136d3565b91508173ffffffffffffffffffffffffffffffffffffffff16631a391cb46040805190810160405280600a81526020017f6669785f69645f303033000000000000000000000000000000000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016110d29190614026565b600060405180830381600087803b1580156110ec57600080fd5b505af1158015611100573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48d6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016111599190613ff1565b600060405180830381600087803b15801561117357600080fd5b505af1158015611187573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48c6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016111e09190613e4f565b600060405180830381600087803b1580156111fa57600080fd5b505af115801561120e573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48b6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016112679190613ef9565b600060405180830381600087803b15801561128157600080fd5b505af1158015611295573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48a6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016112ee9190613f4e565b600060405180830381600087803b15801561130857600080fd5b505af115801561131c573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4896040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016113759190613ea4565b600060405180830381600087803b15801561138f57600080fd5b505af11580156113a3573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663def42698886040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016113fc9190613fa3565b600060405180830381600087803b15801561141657600080fd5b505af115801561142a573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4876040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611483919061407b565b600060405180830381600087803b15801561149d57600080fd5b505af11580156114b1573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff16634c6f30c06040805190810160405280600a81526020017f6669785f69645f30303300000000000000000000000000000000000000000000815250846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611541929190613dc1565b602060405180830381600087803b15801561155b57600080fd5b505af115801561156f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506115939190810190613725565b905060018114156115a757600093506115cb565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7f0541655c3d49a0dd0d71384602057b81c0c3233fa1a59e45789fbea68e500cb7848d8d8d8d8d8d8d604051611608989796959493929190613cc7565b60405180910390a18094505b50505050979650505050505050565b6000606060008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280601a81526020017f646174615f7365745f6d656d6265725f7065726d697373696f6e0000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016116d79190613d6f565b602060405180830381600087803b1580156116f157600080fd5b505af1158015611705573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061172991908101906136fc565b92508273ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561178f57600080fd5b505af11580156117a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117c79190810190613681565b91508173ffffffffffffffffffffffffffffffffffffffff1663ae763db5876040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161181e9190613ef9565b600060405180830381600087803b15801561183857600080fd5b505af115801561184c573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663d8ac59576040805190810160405280600a81526020017f6669785f69645f30303300000000000000000000000000000000000000000000815250846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016118dc929190613d91565b602060405180830381600087803b1580156118f657600080fd5b505af115801561190a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061192e91908101906136aa565b90508073ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561199457600080fd5b505af11580156119a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506119cc9190810190613725565b60001415611a3a577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6000604051908082528060200260200182016040528015611a2a57816020015b6060815260200190600190039081611a155790505b5081915080905094509450611a4d565b6000611a4582612a25565b819150945094505b505050915091565b6000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280601a81526020017f646174615f7365745f6d656d6265725f7065726d697373696f6e0000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611b069190613d6f565b602060405180830381600087803b158015611b2057600080fd5b505af1158015611b34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611b5891908101906136fc565b92508273ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611bbe57600080fd5b505af1158015611bd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611bf69190810190613681565b91508173ffffffffffffffffffffffffffffffffffffffff1663ae763db5866040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611c4d9190613ff1565b600060405180830381600087803b158015611c6757600080fd5b505af1158015611c7b573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663d8ac59576040805190810160405280600a81526020017f66","","","6020830152613cbe81846139e4565b90509392505050565b600061010082019050613cdd600083018b6139d5565b8181036020830152613cef818a6139e4565b90508181036040830152613d0381896139e4565b90508181036060830152613d1781886139e4565b90508181036080830152613d2b81876139e4565b905081810360a0830152613d3f81866139e4565b9050613d4e60c08301856139d5565b81810360e0830152613d6081846139e4565b90509998505050505050505050565b60006020820190508181036000830152613d898184613a1a565b905092915050565b60006040820190508181036000830152613dab8185613a1a565b9050613dba60208301846139b7565b9392505050565b60006040820190508181036000830152613ddb8185613a1a565b9050613dea60208301846139c6565b9392505050565b60006060820190508181036000830152613e0b8186613a1a565b9050613e1a60208301856139c6565b613e2760408301846139b7565b949350505050565b60006020820190508181036000830152613e4881613a50565b9050919050565b60006040820190508181036000830152613e6881613a50565b90508181036020830152613e7c81846139e4565b905092915050565b60006020820190508181036000830152613e9d81613a87565b9050919050565b60006040820190508181036000830152613ebd81613a87565b90508181036020830152613ed181846139e4565b905092915050565b60006020820190508181036000830152613ef281613abe565b9050919050565b60006040820190508181036000830152613f1281613abe565b90508181036020830152613f2681846139e4565b905092915050565b60006020820190508181036000830152613f4781613af5565b9050919050565b60006040820190508181036000830152613f6781613af5565b90508181036020830152613f7b81846139e4565b905092915050565b60006020820190508181036000830152613f9c81613b2c565b9050919050565b60006040820190508181036000830152613fbc81613b2c565b9050613fcb60208301846139d5565b92915050565b60006020820190508181036000830152613fea81613b63565b9050919050565b6000604082019050818103600083015261400a81613b63565b9050818103602083015261401e81846139e4565b905092915050565b6000604082019050818103600083015261403f81613b9a565b905081810360208301526140538184613a1a565b905092915050565b6000602082019050818103600083015261407481613bd1565b9050919050565b6000604082019050818103600083015261409481613bd1565b905081810360208301526140a881846139e4565b905092915050565b6000604051905081810181811067ffffffffffffffff821117156140d357600080fd5b8060405250919050565b600067ffffffffffffffff8211156140f457600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b600061418582614144565b9050919050565b600061419782614144565b9050919050565b60006141a982614144565b9050919050565b60006141bb82614144565b9050919050565b6000819050919050565b60006141d782614144565b9050919050565b60006141e982614144565b9050919050565b82818337600083830152505050565b60005b8381101561421d578082015181840152602081019050614202565b8381111561422c576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a72305820d9e5b8da4155ffc20fc476938c017cac116adf46737acab60aa68a7535e8e9916c6578706572696d656e74616cf50037"};

    public static final String SM_BINARY = String.join("", SM_BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"constant\":true,\"inputs\":[{\"name\":\"member_id\",\"type\":\"string\"}],\"name\":\"selectByMemberId\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"string\"}],\"name\":\"selectById\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"string\"}],\"name\":\"isExist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"startIndex\",\"type\":\"int256\"},{\"name\":\"endIndex\",\"type\":\"int256\"}],\"name\":\"selectByPage\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"selectAll\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"data_set_id\",\"type\":\"string\"},{\"name\":\"member_id\",\"type\":\"string\"},{\"name\":\"created_time\",\"type\":\"string\"},{\"name\":\"updated_time\",\"type\":\"string\"},{\"name\":\"log_time\",\"type\":\"int256\"},{\"name\":\"ext_json\",\"type\":\"string\"}],\"name\":\"update\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"data_set_id\",\"type\":\"string\"},{\"name\":\"member_id\",\"type\":\"string\"},{\"name\":\"created_time\",\"type\":\"string\"},{\"name\":\"updated_time\",\"type\":\"string\"},{\"name\":\"log_time\",\"type\":\"int256\"},{\"name\":\"ext_json\",\"type\":\"string\"}],\"name\":\"insert\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"data_set_id\",\"type\":\"string\"}],\"name\":\"deleteByDataSetId\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"id\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"data_set_id\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"member_id\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"created_time\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"updated_time\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"log_time\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"ext_json\",\"type\":\"string\"}],\"name\":\"insertEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"id\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"data_set_id\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"member_id\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"created_time\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"updated_time\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"log_time\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"ext_json\",\"type\":\"string\"}],\"name\":\"updateEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"data_set_id\",\"type\":\"string\"}],\"name\":\"deleteByDataSetIdEvent\",\"type\":\"event\"}]"};

    public static final String ABI = String.join("", ABI_ARRAY);

    public static final String FUNC_SELECTBYMEMBERID = "selectByMemberId";

    public static final String FUNC_SELECTBYID = "selectById";

    public static final String FUNC_ISEXIST = "isExist";

    public static final String FUNC_SELECTBYPAGE = "selectByPage";

    public static final String FUNC_SELECTALL = "selectAll";

    public static final String FUNC_UPDATE = "update";

    public static final String FUNC_INSERT = "insert";

    public static final String FUNC_DELETEBYDATASETID = "deleteByDataSetId";

    public static final Event INSERTEVENT_EVENT = new Event("insertEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event UPDATEEVENT_EVENT = new Event("updateEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event DELETEBYDATASETIDEVENT_EVENT = new Event("deleteByDataSetIdEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}));
    ;

    protected DataSetMemberPermissionContract(String contractAddress, Client client, CryptoKeyPair credential) {
        super(getBinary(client.getCryptoSuite()), contractAddress, client, credential);
    }

    public static String getBinary(CryptoSuite cryptoSuite) {
        return (cryptoSuite.getCryptoTypeConfig() == CryptoType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public Tuple2<BigInteger, List<String>> selectByMemberId(String member_id) throws ContractException {
        final Function function = new Function(FUNC_SELECTBYMEMBERID, 
                Arrays.<Type>asList(new Utf8String(member_id)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<DynamicArray<Utf8String>>() {}));
        List<Type> results = executeCallWithMultipleValueReturn(function);
        return new Tuple2<BigInteger, List<String>>(
                (BigInteger) results.get(0).getValue(), 
                convertToNative((List<Utf8String>) results.get(1).getValue()));
    }

    public Tuple2<BigInteger, List<String>> selectById(String id) throws ContractException {
        final Function function = new Function(FUNC_SELECTBYID, 
                Arrays.<Type>asList(new Utf8String(id)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<DynamicArray<Utf8String>>() {}));
        List<Type> results = executeCallWithMultipleValueReturn(function);
        return new Tuple2<BigInteger, List<String>>(
                (BigInteger) results.get(0).getValue(), 
                convertToNative((List<Utf8String>) results.get(1).getValue()));
    }

    public Boolean isExist(String id) throws ContractException {
        final Function function = new Function(FUNC_ISEXIST, 
                Arrays.<Type>asList(new Utf8String(id)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeCallWithSingleValueReturn(function, Boolean.class);
    }

    public Tuple2<BigInteger, List<String>> selectByPage(BigInteger startIndex, BigInteger endIndex) throws ContractException {
        final Function function = new Function(FUNC_SELECTBYPAGE, 
                Arrays.<Type>asList(new Int256(startIndex),
                new Int256(endIndex)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<DynamicArray<Utf8String>>() {}));
        List<Type> results = executeCallWithMultipleValueReturn(function);
        return new Tuple2<BigInteger, List<String>>(
                (BigInteger) results.get(0).getValue(), 
                convertToNative((List<Utf8String>) results.get(1).getValue()));
    }

    public Tuple2<BigInteger, List<String>> selectAll() throws ContractException {
        final Function function = new Function(FUNC_SELECTALL, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<DynamicArray<Utf8String>>() {}));
        List<Type> results = executeCallWithMultipleValueReturn(function);
        return new Tuple2<BigInteger, List<String>>(
                (BigInteger) results.get(0).getValue(), 
                convertToNative((List<Utf8String>) results.get(1).getValue()));
    }

    public TransactionReceipt update(String id, String data_set_id, String member_id, String created_time, String updated_time, BigInteger log_time, String ext_json) {
        final Function function = new Function(
                FUNC_UPDATE, 
                Arrays.<Type>asList(new Utf8String(id),
                new Utf8String(data_set_id),
                new Utf8String(member_id),
                new Utf8String(created_time),
                new Utf8String(updated_time),
                new Int256(log_time),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void update(String id, String data_set_id, String member_id, String created_time, String updated_time, BigInteger log_time, String ext_json, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UPDATE, 
                Arrays.<Type>asList(new Utf8String(id),
                new Utf8String(data_set_id),
                new Utf8String(member_id),
                new Utf8String(created_time),
                new Utf8String(updated_time),
                new Int256(log_time),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForUpdate(String id, String data_set_id, String member_id, String created_time, String updated_time, BigInteger log_time, String ext_json) {
        final Function function = new Function(
                FUNC_UPDATE, 
                Arrays.<Type>asList(new Utf8String(id),
                new Utf8String(data_set_id),
                new Utf8String(member_id),
                new Utf8String(created_time),
                new Utf8String(updated_time),
                new Int256(log_time),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple7<String, String, String, String, String, BigInteger, String> getUpdateInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_UPDATE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple7<String, String, String, String, String, BigInteger, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (String) results.get(2).getValue(), 
                (String) results.get(3).getValue(), 
                (String) results.get(4).getValue(), 
                (BigInteger) results.get(5).getValue(), 
                (String) results.get(6).getValue()
                );
    }

    public Tuple1<BigInteger> getUpdateOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_UPDATE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public TransactionReceipt insert(String id, String data_set_id, String member_id, String created_time, String updated_time, BigInteger log_time, String ext_json) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(new Utf8String(id),
                new Utf8String(data_set_id),
                new Utf8String(member_id),
                new Utf8String(created_time),
                new Utf8String(updated_time),
                new Int256(log_time),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void insert(String id, String data_set_id, String member_id, String created_time, String updated_time, BigInteger log_time, String ext_json, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(new Utf8String(id),
                new Utf8String(data_set_id),
                new Utf8String(member_id),
                new Utf8String(created_time),
                new Utf8String(updated_time),
                new Int256(log_time),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForInsert(String id, String data_set_id, String member_id, String created_time, String updated_time, BigInteger log_time, String ext_json) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(new Utf8String(id),
                new Utf8String(data_set_id),
                new Utf8String(member_id),
                new Utf8String(created_time),
                new Utf8String(updated_time),
                new Int256(log_time),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple7<String, String, String, String, String, BigInteger, String> getInsertInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_INSERT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple7<String, String, String, String, String, BigInteger, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (String) results.get(2).getValue(), 
                (String) results.get(3).getValue(), 
                (String) results.get(4).getValue(), 
                (BigInteger) results.get(5).getValue(), 
                (String) results.get(6).getValue()
                );
    }

    public Tuple1<BigInteger> getInsertOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_INSERT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public TransactionReceipt deleteByDataSetId(String data_set_id) {
        final Function function = new Function(
                FUNC_DELETEBYDATASETID, 
                Arrays.<Type>asList(new Utf8String(data_set_id)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void deleteByDataSetId(String data_set_id, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_DELETEBYDATASETID, 
                Arrays.<Type>asList(new Utf8String(data_set_id)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForDeleteByDataSetId(String data_set_id) {
        final Function function = new Function(
                FUNC_DELETEBYDATASETID, 
                Arrays.<Type>asList(new Utf8String(data_set_id)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getDeleteByDataSetIdInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_DELETEBYDATASETID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple1<BigInteger> getDeleteByDataSetIdOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_DELETEBYDATASETID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public List<InsertEventEventResponse> getInsertEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(INSERTEVENT_EVENT, transactionReceipt);
        ArrayList<InsertEventEventResponse> responses = new ArrayList<InsertEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            InsertEventEventResponse typedResponse = new InsertEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.id = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.data_set_id = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.member_id = (String) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse.created_time = (String) eventValues.getNonIndexedValues().get(4).getValue();
            typedResponse.updated_time = (String) eventValues.getNonIndexedValues().get(5).getValue();
            typedResponse.log_time = (BigInteger) eventValues.getNonIndexedValues().get(6).getValue();
            typedResponse.ext_json = (String) eventValues.getNonIndexedValues().get(7).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeInsertEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeInsertEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<UpdateEventEventResponse> getUpdateEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(UPDATEEVENT_EVENT, transactionReceipt);
        ArrayList<UpdateEventEventResponse> responses = new ArrayList<UpdateEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            UpdateEventEventResponse typedResponse = new UpdateEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.id = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.data_set_id = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.member_id = (String) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse.created_time = (String) eventValues.getNonIndexedValues().get(4).getValue();
            typedResponse.updated_time = (String) eventValues.getNonIndexedValues().get(5).getValue();
            typedResponse.log_time = (BigInteger) eventValues.getNonIndexedValues().get(6).getValue();
            typedResponse.ext_json = (String) eventValues.getNonIndexedValues().get(7).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeUpdateEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeUpdateEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<DeleteByDataSetIdEventEventResponse> getDeleteByDataSetIdEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(DELETEBYDATASETIDEVENT_EVENT, transactionReceipt);
        ArrayList<DeleteByDataSetIdEventEventResponse> responses = new ArrayList<DeleteByDataSetIdEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            DeleteByDataSetIdEventEventResponse typedResponse = new DeleteByDataSetIdEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.data_set_id = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeDeleteByDataSetIdEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(DELETEBYDATASETIDEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeDeleteByDataSetIdEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(DELETEBYDATASETIDEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public static DataSetMemberPermissionContract load(String contractAddress, Client client, CryptoKeyPair credential) {
        return new DataSetMemberPermissionContract(contractAddress, client, credential);
    }

    public static DataSetMemberPermissionContract deploy(Client client, CryptoKeyPair credential) throws ContractException {
        return deploy(DataSetMemberPermissionContract.class, client, credential, getBinary(client.getCryptoSuite()), "");
    }

    public static class InsertEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public String id;

        public String data_set_id;

        public String member_id;

        public String created_time;

        public String updated_time;

        public BigInteger log_time;

        public String ext_json;
    }

    public static class UpdateEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public String id;

        public String data_set_id;

        public String member_id;

        public String created_time;

        public String updated_time;

        public BigInteger log_time;

        public String ext_json;
    }

    public static class DeleteByDataSetIdEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public String data_set_id;
    }
}
