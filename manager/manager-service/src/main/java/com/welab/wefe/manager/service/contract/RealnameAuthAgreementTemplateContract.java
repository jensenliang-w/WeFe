/*
 * Copyright 2021 Tianmian Tech. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.welab.wefe.manager.service.contract;

import org.fisco.bcos.sdk.abi.FunctionReturnDecoder;
import org.fisco.bcos.sdk.abi.TypeReference;
import org.fisco.bcos.sdk.abi.datatypes.*;
import org.fisco.bcos.sdk.abi.datatypes.generated.Int256;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple1;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple2;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple3;
import org.fisco.bcos.sdk.client.Client;
import org.fisco.bcos.sdk.contract.Contract;
import org.fisco.bcos.sdk.crypto.CryptoSuite;
import org.fisco.bcos.sdk.crypto.keypair.CryptoKeyPair;
import org.fisco.bcos.sdk.eventsub.EventCallback;
import org.fisco.bcos.sdk.model.CryptoType;
import org.fisco.bcos.sdk.model.TransactionReceipt;
import org.fisco.bcos.sdk.model.callback.TransactionCallback;
import org.fisco.bcos.sdk.transaction.model.exception.ContractException;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

@SuppressWarnings("unchecked")
public class RealnameAuthAgreementTemplateContract extends Contract {
    public static final String[] BINARY_ARRAY = {"60806040523480156200001157600080fd5b506110016000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166356004b6a6040805190810160405280602081526020017f7265616c6e616d655f617574685f61677265656d656e745f74656d706c6174658152506040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162000101919062000296565b602060405180830381600087803b1580156200011c57600080fd5b505af115801562000131573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062000157919081019062000174565b5062000340565b60006200016c8251620002ef565b905092915050565b6000602082840312156200018757600080fd5b600062000197848285016200015e565b91505092915050565b6000620001ad82620002e4565b808452620001c3816020860160208601620002f9565b620001ce816200032f565b602085010191505092915050565b6000600682527f6669785f696400000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000605782527f74656d706c6174655f66696c655f69642c74656d706c6174655f66696c655f7360208301527f69676e2c66696c655f6e616d652c656e61626c652c637265617465645f74696d60408301527f652c757064617465645f74696d652c6578745f6a736f6e0000000000000000006060830152608082019050919050565b60006060820190508181036000830152620002b28184620001a0565b90508181036020830152620002c781620001dc565b90508181036040830152620002dc8162000213565b905092915050565b600081519050919050565b6000819050919050565b60005b8381101562000319578082015181840152602081019050620002fc565b8381111562000329576000848401525b50505050565b6000601f19601f8301169050919050565b6135e780620003506000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806305a9bbe7146100725780634d3d096b146100af57806363964aa3146100ec578063857cb0eb146101295780639729115014610155575b600080fd5b34801561007e57600080fd5b5061009960048036036100949190810190612b75565b610192565b6040516100a69190612ef5565b60405180910390f35b3480156100bb57600080fd5b506100d660048036036100d19190810190612af3565b61074c565b6040516100e39190612eda565b60405180910390f35b3480156100f857600080fd5b50610113600480360361010e9190810190612b75565b610b10565b6040516101209190612ef5565b60405180910390f35b34801561013557600080fd5b5061013e611052565b60405161014c929190612f10565b60405180910390f35b34801561016157600080fd5b5061017c600480360361017791908101906129ba565b6113f6565b6040516101899190612ef5565b60405180910390f35b600080600080600080600094506101a88961074c565b1515610216577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff94507f7d29950a0ae63eb067d4a746f4bfc4351fff7ffaa81e13a0c7f07a80aa4f529d858a8a8a6040516102069493929190612f85565b60405180910390a1849550610740565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280602081526020017f7265616c6e616d655f617574685f61677265656d656e745f74656d706c6174658152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016102c19190612fdf565b602060405180830381600087803b1580156102db57600080fd5b505af11580156102ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506103139190810190612aa1565b93508373ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561037957600080fd5b505af115801561038d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506103b19190810190612a26565b92508273ffffffffffffffffffffffffffffffffffffffff1663cd30a1d18a6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016104089190613149565b600060405180830381600087803b15801561042257600080fd5b505af1158015610436573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff166313db93466040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561049e57600080fd5b505af11580156104b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506104d69190810190612a78565b91508173ffffffffffffffffffffffffffffffffffffffff1663e942b516896040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161052d91906132e7565b600060405180830381600087803b15801561054757600080fd5b505af115801561055b573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b516886040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016105b49190613208565b600060405180830381600087803b1580156105ce57600080fd5b505af11580156105e2573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff1663bf2b70a16040805190810160405280600a81526020017f6669785f69645f3030370000000000000000000000000000000000000000000081525084866040518463ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161067493929190613061565b602060405180830381600087803b15801561068e57600080fd5b505af11580156106a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106c69190810190612aca565b90506001811215156106db57600094506106ff565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe94505b7f7d29950a0ae63eb067d4a746f4bfc4351fff7ffaa81e13a0c7f07a80aa4f529d858a8a8a6040516107349493929190612f85565b60405180910390a18095505b50505050509392505050565b6000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280602081526020017f7265616c6e616d655f617574685f61677265656d656e745f74656d706c6174658152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016107fd9190612fdf565b602060405180830381600087803b15801561081757600080fd5b505af115801561082b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061084f9190810190612aa1565b92508273ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156108b557600080fd5b505af11580156108c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108ed9190810190612a26565b91508173ffffffffffffffffffffffffffffffffffffffff1663cd30a1d1866040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016109449190613149565b600060405180830381600087803b15801561095e57600080fd5b505af1158015610972573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663e8434e396040805190810160405280600a81526020017f6669785f69645f30303700000000000000000000000000000000000000000000815250846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610a02929190613001565b602060405180830381600087803b158015610a1c57600080fd5b505af1158015610a30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a549190810190612a4f565b905060008173ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610abc57600080fd5b505af1158015610ad0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610af49190810190612aca565b1115610b035760019350610b08565b600093505b505050919050565b6000806000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280602081526020017f7265616c6e616d655f617574685f61677265656d656e745f74656d706c6174658152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610bc49190612fdf565b602060405180830381600087803b158015610bde57600080fd5b505af1158015610bf2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c169190810190612aa1565b94508473ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610c7c57600080fd5b505af1158015610c90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610cb49190810190", "612a26565b93508373ffffffffffffffffffffffffffffffffffffffff1663cd30a1d18a6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610d0b9190613149565b600060405180830381600087803b158015610d2557600080fd5b505af1158015610d39573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff166313db93466040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610da157600080fd5b505af1158015610db5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610dd99190810190612a78565b92508273ffffffffffffffffffffffffffffffffffffffff1663e942b516896040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610e3091906130bf565b600060405180830381600087803b158015610e4a57600080fd5b505af1158015610e5e573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663e942b516886040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610eb79190613208565b600060405180830381600087803b158015610ed157600080fd5b505af1158015610ee5573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff1663bf2b70a16040805190810160405280600a81526020017f6669785f69645f3030370000000000000000000000000000000000000000000081525085876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610f7793929190613061565b602060405180830381600087803b158015610f9157600080fd5b505af1158015610fa5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610fc99190810190612aca565b915060009050600182121515610fe25760009050611006565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe90505b7f91fa9d6109b9b8b47733f98f4b6858346683ebdf73ba3c2f98b90c0d352f83e1818a8a8a60405161103b9493929190612f85565b60405180910390a180955050505050509392505050565b600060606000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280602081526020017f7265616c6e616d655f617574685f61677265656d656e745f74656d706c6174658152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016111049190612fdf565b602060405180830381600087803b15801561111e57600080fd5b505af1158015611132573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111569190810190612aa1565b91508173ffffffffffffffffffffffffffffffffffffffff1663e8434e396040805190810160405280600a81526020017f6669785f69645f303037000000000000000000000000000000000000000000008152508473ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561120e57600080fd5b505af1158015611222573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112469190810190612a26565b6040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161127f929190613001565b602060405180830381600087803b15801561129957600080fd5b505af11580156112ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112d19190810190612a4f565b90508073ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561133757600080fd5b505af115801561134b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061136f9190810190612aca565b600014156113dd577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd60006040519080825280602002602001820160405280156113cd57816020015b60608152602001906001900390816113b85790505b50819150809050935093506113f0565b60006113e882611ca6565b819150935093505b50509091565b600080600080600080935061142287600081518110151561141357fe5b9060200190602002015161074c565b156114ad577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff93507f5157dc1ab0b55c7621be94a34b2ae4228f7d16e8271628060cc027b1a513b12f84888860405161147d93929190612f40565b60405180910390a17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9450611c9c565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280602081526020017f7265616c6e616d655f617574685f61677265656d656e745f74656d706c6174658152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016115589190612fdf565b602060405180830381600087803b15801561157257600080fd5b505af1158015611586573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506115aa9190810190612aa1565b92508273ffffffffffffffffffffffffffffffffffffffff166313db93466040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561161057600080fd5b505af1158015611624573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506116489190810190612a78565b91508173ffffffffffffffffffffffffffffffffffffffff1663e942b5166040805190810160405280600a81526020017f6669785f69645f303037000000000000000000000000000000000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016116d4919061317e565b600060405180830381600087803b1580156116ee57600080fd5b505af1158015611702573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b51688600081518110151561173157fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016117739190613114565b600060405180830381600087803b15801561178d57600080fd5b505af11580156117a1573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b5168860018151811015156117d057fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016118129190613391565b600060405180830381600087803b15801561182c57600080fd5b505af1158015611840573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b51688600281518110151561186f57fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016118b1919061325d565b600060405180830381600087803b1580156118cb57600080fd5b505af11580156118df573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b51688600381518110151561190e57fe5b906020019060200201516040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161195091906132b2565b600060405180830381600087803b15801561196a57600080fd5b505af115801561197e573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b5168860048151811015156119ad57fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016119ef919061333c565b600060405180830381600087803b158015611a0957600080fd5b505af1158015611a1d573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b516886005815181101515611a4c57fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611a8e91906131d3565b600060405180830381600087803b158015611aa857600080fd5b505af1158015611abc573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b516876040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611b1591906130bf565b600060405180830381600087803b158015611b2f57600080fd5b505af1158015611b43573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff166331afac366040805190810160405280600a81526020017f6669785f69645f30303700000000000000000000000000000000000000000000815250846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611bd3929190613031565b602060405180830381600087803b158015611bed57600080fd5b505af1158015611c01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611c259190810190612aca565b90506001811415611c395760009350611c5d565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7f5157dc1ab0b55c7621be94a34b2ae4228f7d16e8271628060cc027b1a513b12f848888604051611c9093929190612f40565b60405180910390a18094505b5050505092915050565b606080600080606085", "73ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611d1257600080fd5b505af1158015611d26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611d4a9190810190612aca565b604051908082528060200260200182016040528015611d7d57816020015b6060815260200190600190039081611d685790505b509350600092505b8573ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611de957600080fd5b505af1158015611dfd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611e219190810190612aca565b83121561259d578573ffffffffffffffffffffffffffffffffffffffff1663846719e0846040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611e7d9190612ef5565b602060405180830381600087803b158015611e9757600080fd5b505af1158015611eab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611ecf9190810190612a78565b9150611fc1611f868373ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611f2a906130f4565b600060405180830381600087803b158015611f4457600080fd5b505af1158015611f58573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250611f819190810190612b34565b6125a9565b6040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250612602565b905061207e816120798473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161201d90613371565b600060405180830381600087803b15801561203757600080fd5b505af115801561204b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506120749190810190612b34565b6125a9565b612602565b90506120bf816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250612602565b905061217c816121778473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161211b9061323d565b600060405180830381600087803b15801561213557600080fd5b505af1158015612149573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506121729190810190612b34565b6125a9565b612602565b90506121bd816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250612602565b905061227a816122758473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161221990613292565b600060405180830381600087803b15801561223357600080fd5b505af1158015612247573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506122709190810190612b34565b6125a9565b612602565b90506122bb816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250612602565b9050612378816123738473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016123179061331c565b600060405180830381600087803b15801561233157600080fd5b505af1158015612345573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061236e9190810190612b34565b6125a9565b612602565b90506123b9816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250612602565b9050612476816124718473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612415906131b3565b600060405180830381600087803b15801561242f57600080fd5b505af1158015612443573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061246c9190810190612b34565b6125a9565b612602565b90506124b7816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250612602565b90506125748161256f8473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016125139061309f565b600060405180830381600087803b15801561252d57600080fd5b505af1158015612541573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061256a9190810190612b34565b6125a9565b612602565b905080848481518110151561258557fe5b90602001906020020181905250826001019250611d85565b83945050505050919050565b606060006125b6836127d3565b14156125f9576040805190810160405280600181526020017f200000000000000000000000000000000000000000000000000000000000000081525090506125fd565b8190505b919050565b606080606080606060008088955087945084518651016040519080825280601f01601f19166020018201604052801561264a5781602001602082028038833980820191505090505b50935083925060009150600090505b855181101561270c57858181518110151561267057fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156126cf57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612659565b600090505b84518110156127c457848181518110151561272857fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561278757fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612711565b83965050505050505092915050565b600081519050919050565b600082601f83011215156127f157600080fd5b81356128046127ff826133f3565b6133c6565b9150818183526020840193506020810190508360005b8381101561284a578135860161283088826128b8565b84526020840193506020830192505060018101905061281a565b5050505092915050565b600061286082516134e4565b905092915050565b600061287482516134f6565b905092915050565b60006128888251613508565b905092915050565b600061289c825161351a565b905092915050565b60006128b0825161352c565b905092915050565b600082601f83011215156128cb57600080fd5b81356128de6128d98261341b565b6133c6565b915080825260208301602083018583830111156128fa57600080fd5b61290583828461355a565b50505092915050565b600082601f830112151561292157600080fd5b813561293461292f82613447565b6133c6565b9150808252602083016020830185838301111561295057600080fd5b61295b83828461355a565b50505092915050565b600082601f830112151561297757600080fd5b815161298a61298582613447565b6133c6565b915080825260208301602083018583830111156129a657600080fd5b6129b1838284613569565b50505092915050565b600080604083850312156129cd57600080fd5b600083013567ffffffffffffffff8111156129e757600080fd5b6129f3858286016127de565b925050602083013567ffffffffffffffff811115612a1057600080fd5b612a1c8582860161290e565b9150509250929050565b600060208284031215612a3857600080fd5b6000612a4684828501612854565b91505092915050565b600060208284031215612a6157600080fd5b6000612a6f84828501612868565b91505092915050565b600060208284031215612a8a57600080fd5b6000612a988482850161287c565b91505092915050565b600060208284031215612ab357600080fd5b6000612ac184828501612890565b91505092915050565b600060208284031215612adc57600080fd5b6000612aea848285016128a4565b91505092915050565b600060208284031215612b0557600080fd5b600082013567ffffffffffffffff811115612b1f57600080fd5b612b2b8482850161290e565b91505092915050565b600060208284031215612b4657600080fd5b600082015167ffffffffffffffff811115612b6057600080fd5b612b6c84828501612964565b91505092915050565b600080600060608486031215612b8a57600080fd5b600084013567ffffffffffffffff811115612ba457600080fd5b612bb08682870161290e565b935050602084013567ffffffffffffffff811115612bcd57600080fd5b612bd98682870161290e565b925050604084013567ffffffffffffffff811115612bf657600080fd5b612c028682870161290e565b9150509250925092565b6000612c1782613480565b80845260208401935083602082028501612c3085613473565b60005b84811015612c69578383038852612c4b838351612cec565b9250612c56826134a1565b9150602088019750600181019050612c33565b508196508694505050505092915050565b612c83816134ce565b82525050565b612c9281613536565b82525050565b612ca181613548565b82525050565b612cb0816134da56", "5b82525050565b6000612cc182613496565b808452612cd5816020860160208601613569565b612cde8161359c565b602085010191505092915050565b6000612cf78261348b565b808452612d0b816020860160208601613569565b612d148161359c565b602085010191505092915050565b6000600882527f6578745f6a736f6e0000000000000000000000000000000000000000000000006020830152604082019050919050565b6000601082527f74656d706c6174655f66696c655f6964000000000000000000000000000000006020830152604082019050919050565b6000600682527f6669785f696400000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f757064617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000600982527f66696c655f6e616d6500000000000000000000000000000000000000000000006020830152604082019050919050565b6000600682527f656e61626c6500000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f637265617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000601282527f74656d706c6174655f66696c655f7369676e00000000000000000000000000006020830152604082019050919050565b6000602082019050612eef6000830184612c7a565b92915050565b6000602082019050612f0a6000830184612ca7565b92915050565b6000604082019050612f256000830185612ca7565b8181036020830152612f378184612c0c565b90509392505050565b6000606082019050612f556000830186612ca7565b8181036020830152612f678185612c0c565b90508181036040830152612f7b8184612cb6565b9050949350505050565b6000608082019050612f9a6000830187612ca7565b8181036020830152612fac8186612cb6565b90508181036040830152612fc08185612cb6565b90508181036060830152612fd48184612cb6565b905095945050505050565b60006020820190508181036000830152612ff98184612cec565b905092915050565b6000604082019050818103600083015261301b8185612cec565b905061302a6020830184612c89565b9392505050565b6000604082019050818103600083015261304b8185612cec565b905061305a6020830184612c98565b9392505050565b6000606082019050818103600083015261307b8186612cec565b905061308a6020830185612c98565b6130976040830184612c89565b949350505050565b600060208201905081810360008301526130b881612d22565b9050919050565b600060408201905081810360008301526130d881612d22565b905081810360208301526130ec8184612cb6565b905092915050565b6000602082019050818103600083015261310d81612d59565b9050919050565b6000604082019050818103600083015261312d81612d59565b905081810360208301526131418184612cec565b905092915050565b6000604082019050818103600083015261316281612d59565b905081810360208301526131768184612cb6565b905092915050565b6000604082019050818103600083015261319781612d90565b905081810360208301526131ab8184612cec565b905092915050565b600060208201905081810360008301526131cc81612dc7565b9050919050565b600060408201905081810360008301526131ec81612dc7565b905081810360208301526132008184612cec565b905092915050565b6000604082019050818103600083015261322181612dc7565b905081810360208301526132358184612cb6565b905092915050565b6000602082019050818103600083015261325681612dfe565b9050919050565b6000604082019050818103600083015261327681612dfe565b9050818103602083015261328a8184612cec565b905092915050565b600060208201905081810360008301526132ab81612e35565b9050919050565b600060408201905081810360008301526132cb81612e35565b905081810360208301526132df8184612cec565b905092915050565b6000604082019050818103600083015261330081612e35565b905081810360208301526133148184612cb6565b905092915050565b6000602082019050818103600083015261333581612e6c565b9050919050565b6000604082019050818103600083015261335581612e6c565b905081810360208301526133698184612cec565b905092915050565b6000602082019050818103600083015261338a81612ea3565b9050919050565b600060408201905081810360008301526133aa81612ea3565b905081810360208301526133be8184612cec565b905092915050565b6000604051905081810181811067ffffffffffffffff821117156133e957600080fd5b8060405250919050565b600067ffffffffffffffff82111561340a57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561343257600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561345e57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b60006134ef826134ae565b9050919050565b6000613501826134ae565b9050919050565b6000613513826134ae565b9050919050565b6000613525826134ae565b9050919050565b6000819050919050565b6000613541826134ae565b9050919050565b6000613553826134ae565b9050919050565b82818337600083830152505050565b60005b8381101561358757808201518184015260208101905061356c565b83811115613596576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a72305820b663263862dd3e16ba0c55936f1b2ca30a099bd393c940ab844cd9e74078f8626c6578706572696d656e74616cf50037"};

    public static final String BINARY = String.join("", BINARY_ARRAY);

    public static final String[] SM_BINARY_ARRAY = {"", "80fd5b505af1158015610cc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610cea9190810190612a78565b91508173ffffffffffffffffffffffffffffffffffffffff16631a391cb46040805190810160405280600a81526020017f6669785f69645f303037000000000000000000000000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610d76919061333c565b600060405180830381600087803b158015610d9057600080fd5b505af1158015610da4573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4886000815181101515610dd357fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610e1591906132d2565b600060405180830381600087803b158015610e2f57600080fd5b505af1158015610e43573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4886001815181101515610e7257fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610eb4919061327d565b600060405180830381600087803b158015610ece57600080fd5b505af1158015610ee2573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4886002815181101515610f1157fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610f539190613149565b600060405180830381600087803b158015610f6d57600080fd5b505af1158015610f81573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4886003815181101515610fb057fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610ff291906130bf565b600060405180830381600087803b15801561100c57600080fd5b505af1158015611020573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb488600481518110151561104f57fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016110919190613228565b600060405180830381600087803b1580156110ab57600080fd5b505af11580156110bf573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48860058151811015156110ee57fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611130919061319e565b600060405180830381600087803b15801561114a57600080fd5b505af115801561115e573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4876040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016111b79190613391565b600060405180830381600087803b1580156111d157600080fd5b505af11580156111e5573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff16634c6f30c06040805190810160405280600a81526020017f6669785f69645f30303700000000000000000000000000000000000000000000815250846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611275929190613031565b602060405180830381600087803b15801561128f57600080fd5b505af11580156112a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112c79190810190612aca565b905060018114156112db57600093506112ff565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7fcb263a23d186eec891d55f1e0ba96ec8290af8c893d32d644c22dbff0953e51f84888860405161133293929190612f40565b60405180910390a18094505b5050505092915050565b600060606000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280602081526020017f7265616c6e616d655f617574685f61677265656d656e745f74656d706c6174658152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016113fa9190612fdf565b602060405180830381600087803b15801561141457600080fd5b505af1158015611428573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061144c9190810190612aa1565b91508173ffffffffffffffffffffffffffffffffffffffff1663d8ac59576040805190810160405280600a81526020017f6669785f69645f303037000000000000000000000000000000000000000000008152508473ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561150457600080fd5b505af1158015611518573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061153c9190810190612a26565b6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611575929190613001565b602060405180830381600087803b15801561158f57600080fd5b505af11580156115a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506115c79190810190612a4f565b90508073ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561162d57600080fd5b505af1158015611641573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506116659190810190612aca565b600014156116d3577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd60006040519080825280602002602001820160405280156116c357816020015b60608152602001906001900390816116ae5790505b50819150809050935093506116e6565b60006116de82611ca6565b819150935093505b50509091565b60008060008060008060009450611702896106d4565b1515611770577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff94507f6cbca64bfdd615f94babd25f1fed6a9d80607ed38c5e9cd592d1647e6de646a2858a8a8a6040516117609493929190612f85565b60405180910390a1849550611c9a565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280602081526020017f7265616c6e616d655f617574685f61677265656d656e745f74656d706c6174658152506040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161181b9190612fdf565b602060405180830381600087803b15801561183557600080fd5b505af1158015611849573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061186d9190810190612aa1565b93508373ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156118d357600080fd5b505af11580156118e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061190b9190810190612a26565b92508273ffffffffffffffffffffffffffffffffffffffff1663ae763db58a6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016119629190613307565b600060405180830381600087803b15801561197c57600080fd5b505af1158015611990573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff16635887ab246040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156119f857600080fd5b505af1158015611a0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611a309190810190612a78565b91508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4896040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611a8791906130f4565b600060405180830381600087803b158015611aa157600080fd5b505af1158015611ab5573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4886040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611b0e91906131d3565b600060405180830381600087803b158015611b2857600080fd5b505af1158015611b3c573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff1663664b37d66040805190810160405280600a81526020017f6669785f69645f3030370000000000000000000000000000000000000000000081525084866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611bce93929190613061565b602060405180830381600087803b158015611be857600080fd5b505af1158015611bfc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611c209190810190612aca565b9050600181121515611c355760009450611c59565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe94505b7f6cbca64bfdd615f94babd25f1fed6a9d80607ed38c5e9cd592d1647e6de646a2858a8a8a604051611c8e9493929190612f85565b60405180910390a18095505b50505050509392505050565b606080600080606085", "73ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611d1257600080fd5b505af1158015611d26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611d4a9190810190612aca565b604051908082528060200260200182016040528015611d7d57816020015b6060815260200190600190039081611d685790505b509350600092505b8573ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611de957600080fd5b505af1158015611dfd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611e219190810190612aca565b83121561259d578573ffffffffffffffffffffffffffffffffffffffff16633dd2b614846040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611e7d9190612ef5565b602060405180830381600087803b158015611e9757600080fd5b505af1158015611eab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611ecf9190810190612a78565b9150611fc1611f868373ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611f2a906132b2565b600060405180830381600087803b158015611f4457600080fd5b505af1158015611f58573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250611f819190810190612b34565b6125a9565b6040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250612602565b905061207e816120798473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161201d9061325d565b600060405180830381600087803b15801561203757600080fd5b505af115801561204b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506120749190810190612b34565b6125a9565b612602565b90506120bf816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250612602565b905061217c816121778473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161211b90613129565b600060405180830381600087803b15801561213557600080fd5b505af1158015612149573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506121729190810190612b34565b6125a9565b612602565b90506121bd816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250612602565b905061227a816122758473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016122199061309f565b600060405180830381600087803b15801561223357600080fd5b505af1158015612247573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506122709190810190612b34565b6125a9565b612602565b90506122bb816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250612602565b9050612378816123738473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161231790613208565b600060405180830381600087803b15801561233157600080fd5b505af1158015612345573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061236e9190810190612b34565b6125a9565b612602565b90506123b9816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250612602565b9050612476816124718473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016124159061317e565b600060405180830381600087803b15801561242f57600080fd5b505af1158015612443573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061246c9190810190612b34565b6125a9565b612602565b90506124b7816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250612602565b90506125748161256f8473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161251390613371565b600060405180830381600087803b15801561252d57600080fd5b505af1158015612541573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061256a9190810190612b34565b6125a9565b612602565b905080848481518110151561258557fe5b90602001906020020181905250826001019250611d85565b83945050505050919050565b606060006125b6836127d3565b14156125f9576040805190810160405280600181526020017f200000000000000000000000000000000000000000000000000000000000000081525090506125fd565b8190505b919050565b606080606080606060008088955087945084518651016040519080825280601f01601f19166020018201604052801561264a5781602001602082028038833980820191505090505b50935083925060009150600090505b855181101561270c57858181518110151561267057fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156126cf57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612659565b600090505b84518110156127c457848181518110151561272857fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561278757fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612711565b83965050505050505092915050565b600081519050919050565b600082601f83011215156127f157600080fd5b81356128046127ff826133f3565b6133c6565b9150818183526020840193506020810190508360005b8381101561284a578135860161283088826128b8565b84526020840193506020830192505060018101905061281a565b5050505092915050565b600061286082516134e4565b905092915050565b600061287482516134f6565b905092915050565b60006128888251613508565b905092915050565b600061289c825161351a565b905092915050565b60006128b0825161352c565b905092915050565b600082601f83011215156128cb57600080fd5b81356128de6128d98261341b565b6133c6565b915080825260208301602083018583830111156128fa57600080fd5b61290583828461355a565b50505092915050565b600082601f830112151561292157600080fd5b813561293461292f82613447565b6133c6565b9150808252602083016020830185838301111561295057600080fd5b61295b83828461355a565b50505092915050565b600082601f830112151561297757600080fd5b815161298a61298582613447565b6133c6565b915080825260208301602083018583830111156129a657600080fd5b6129b1838284613569565b50505092915050565b600080604083850312156129cd57600080fd5b600083013567ffffffffffffffff8111156129e757600080fd5b6129f3858286016127de565b925050602083013567ffffffffffffffff811115612a1057600080fd5b612a1c8582860161290e565b9150509250929050565b600060208284031215612a3857600080fd5b6000612a4684828501612854565b91505092915050565b600060208284031215612a6157600080fd5b6000612a6f84828501612868565b91505092915050565b600060208284031215612a8a57600080fd5b6000612a988482850161287c565b91505092915050565b600060208284031215612ab357600080fd5b6000612ac184828501612890565b91505092915050565b600060208284031215612adc57600080fd5b6000612aea848285016128a4565b91505092915050565b600060208284031215612b0557600080fd5b600082013567ffffffffffffffff811115612b1f57600080fd5b612b2b8482850161290e565b91505092915050565b600060208284031215612b4657600080fd5b600082015167ffffffffffffffff811115612b6057600080fd5b612b6c84828501612964565b91505092915050565b600080600060608486031215612b8a57600080fd5b600084013567ffffffffffffffff811115612ba457600080fd5b612bb08682870161290e565b935050602084013567ffffffffffffffff811115612bcd57600080fd5b612bd98682870161290e565b925050604084013567ffffffffffffffff811115612bf657600080fd5b612c028682870161290e565b9150509250925092565b6000612c1782613480565b80845260208401935083602082028501612c3085613473565b60005b84811015612c69578383038852612c4b838351612cec565b9250612c56826134a1565b9150602088019750600181019050612c33565b508196508694505050505092915050565b612c83816134ce565b82525050565b612c9281613536565b82525050565b612ca181613548565b82525050565b612cb0816134da56", "5b82525050565b6000612cc182613496565b808452612cd5816020860160208601613569565b612cde8161359c565b602085010191505092915050565b6000612cf78261348b565b808452612d0b816020860160208601613569565b612d148161359c565b602085010191505092915050565b6000600682527f656e61626c6500000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600982527f66696c655f6e616d6500000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f757064617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f637265617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000601282527f74656d706c6174655f66696c655f7369676e00000000000000000000000000006020830152604082019050919050565b6000601082527f74656d706c6174655f66696c655f6964000000000000000000000000000000006020830152604082019050919050565b6000600682527f6669785f696400000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f6578745f6a736f6e0000000000000000000000000000000000000000000000006020830152604082019050919050565b6000602082019050612eef6000830184612c7a565b92915050565b6000602082019050612f0a6000830184612ca7565b92915050565b6000604082019050612f256000830185612ca7565b8181036020830152612f378184612c0c565b90509392505050565b6000606082019050612f556000830186612ca7565b8181036020830152612f678185612c0c565b90508181036040830152612f7b8184612cb6565b9050949350505050565b6000608082019050612f9a6000830187612ca7565b8181036020830152612fac8186612cb6565b90508181036040830152612fc08185612cb6565b90508181036060830152612fd48184612cb6565b905095945050505050565b60006020820190508181036000830152612ff98184612cec565b905092915050565b6000604082019050818103600083015261301b8185612cec565b905061302a6020830184612c89565b9392505050565b6000604082019050818103600083015261304b8185612cec565b905061305a6020830184612c98565b9392505050565b6000606082019050818103600083015261307b8186612cec565b905061308a6020830185612c98565b6130976040830184612c89565b949350505050565b600060208201905081810360008301526130b881612d22565b9050919050565b600060408201905081810360008301526130d881612d22565b905081810360208301526130ec8184612cec565b905092915050565b6000604082019050818103600083015261310d81612d22565b905081810360208301526131218184612cb6565b905092915050565b6000602082019050818103600083015261314281612d59565b9050919050565b6000604082019050818103600083015261316281612d59565b905081810360208301526131768184612cec565b905092915050565b6000602082019050818103600083015261319781612d90565b9050919050565b600060408201905081810360008301526131b781612d90565b905081810360208301526131cb8184612cec565b905092915050565b600060408201905081810360008301526131ec81612d90565b905081810360208301526132008184612cb6565b905092915050565b6000602082019050818103600083015261322181612dc7565b9050919050565b6000604082019050818103600083015261324181612dc7565b905081810360208301526132558184612cec565b905092915050565b6000602082019050818103600083015261327681612dfe565b9050919050565b6000604082019050818103600083015261329681612dfe565b905081810360208301526132aa8184612cec565b905092915050565b600060208201905081810360008301526132cb81612e35565b9050919050565b600060408201905081810360008301526132eb81612e35565b905081810360208301526132ff8184612cec565b905092915050565b6000604082019050818103600083015261332081612e35565b905081810360208301526133348184612cb6565b905092915050565b6000604082019050818103600083015261335581612e6c565b905081810360208301526133698184612cec565b905092915050565b6000602082019050818103600083015261338a81612ea3565b9050919050565b600060408201905081810360008301526133aa81612ea3565b905081810360208301526133be8184612cb6565b905092915050565b6000604051905081810181811067ffffffffffffffff821117156133e957600080fd5b8060405250919050565b600067ffffffffffffffff82111561340a57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561343257600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561345e57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b60006134ef826134ae565b9050919050565b6000613501826134ae565b9050919050565b6000613513826134ae565b9050919050565b6000613525826134ae565b9050919050565b6000819050919050565b6000613541826134ae565b9050919050565b6000613553826134ae565b9050919050565b82818337600083830152505050565b60005b8381101561358757808201518184015260208101905061356c565b83811115613596576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a72305820223172df5f5d26a9d1f5a6ecfc434f70cfe45035d49a88b813b9000c1c6acb686c6578706572696d656e74616cf50037"};

    public static final String SM_BINARY = String.join("", SM_BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"constant\":false,\"inputs\":[{\"name\":\"template_file_id\",\"type\":\"string\"},{\"name\":\"enable\",\"type\":\"string\"},{\"name\":\"updated_time\",\"type\":\"string\"}],\"name\":\"updateEnable\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"template_file_id\",\"type\":\"string\"}],\"name\":\"isExist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"template_file_id\",\"type\":\"string\"},{\"name\":\"ext_json\",\"type\":\"string\"},{\"name\":\"updated_time\",\"type\":\"string\"}],\"name\":\"updateExtJson\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"selectAll\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"params\",\"type\":\"string[]\"},{\"name\":\"ext_json\",\"type\":\"string\"}],\"name\":\"insert\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"params\",\"type\":\"string[]\"},{\"indexed\":false,\"name\":\"ext_json\",\"type\":\"string\"}],\"name\":\"insertEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"template_file_id\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"params\",\"type\":\"string[]\"}],\"name\":\"updateEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"template_file_id\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"enable\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"updated_time\",\"type\":\"string\"}],\"name\":\"updateEnableEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"template_file_id\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"ext_json\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"updated_time\",\"type\":\"string\"}],\"name\":\"updateExtJsonEvent\",\"type\":\"event\"}]"};

    public static final String ABI = String.join("", ABI_ARRAY);

    public static final String FUNC_UPDATEENABLE = "updateEnable";

    public static final String FUNC_ISEXIST = "isExist";

    public static final String FUNC_UPDATEEXTJSON = "updateExtJson";

    public static final String FUNC_SELECTALL = "selectAll";

    public static final String FUNC_INSERT = "insert";

    public static final Event INSERTEVENT_EVENT = new Event("insertEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event UPDATEEVENT_EVENT = new Event("updateEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<DynamicArray<Utf8String>>() {}));
    ;

    public static final Event UPDATEENABLEEVENT_EVENT = new Event("updateEnableEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event UPDATEEXTJSONEVENT_EVENT = new Event("updateExtJsonEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
    ;

    protected RealnameAuthAgreementTemplateContract(String contractAddress, Client client, CryptoKeyPair credential) {
        super(getBinary(client.getCryptoSuite()), contractAddress, client, credential);
    }

    public static String getBinary(CryptoSuite cryptoSuite) {
        return (cryptoSuite.getCryptoTypeConfig() == CryptoType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public TransactionReceipt updateEnable(String template_file_id, String enable, String updated_time) {
        final Function function = new Function(
                FUNC_UPDATEENABLE, 
                Arrays.<Type>asList(new Utf8String(template_file_id),
                new Utf8String(enable),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void updateEnable(String template_file_id, String enable, String updated_time, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UPDATEENABLE, 
                Arrays.<Type>asList(new Utf8String(template_file_id),
                new Utf8String(enable),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForUpdateEnable(String template_file_id, String enable, String updated_time) {
        final Function function = new Function(
                FUNC_UPDATEENABLE, 
                Arrays.<Type>asList(new Utf8String(template_file_id),
                new Utf8String(enable),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<String, String, String> getUpdateEnableInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_UPDATEENABLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<String, String, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (String) results.get(2).getValue()
                );
    }

    public Tuple1<BigInteger> getUpdateEnableOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_UPDATEENABLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public Boolean isExist(String template_file_id) throws ContractException {
        final Function function = new Function(FUNC_ISEXIST, 
                Arrays.<Type>asList(new Utf8String(template_file_id)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeCallWithSingleValueReturn(function, Boolean.class);
    }

    public TransactionReceipt updateExtJson(String template_file_id, String ext_json, String updated_time) {
        final Function function = new Function(
                FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(new Utf8String(template_file_id),
                new Utf8String(ext_json),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void updateExtJson(String template_file_id, String ext_json, String updated_time, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(new Utf8String(template_file_id),
                new Utf8String(ext_json),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForUpdateExtJson(String template_file_id, String ext_json, String updated_time) {
        final Function function = new Function(
                FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(new Utf8String(template_file_id),
                new Utf8String(ext_json),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<String, String, String> getUpdateExtJsonInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<String, String, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (String) results.get(2).getValue()
                );
    }

    public Tuple1<BigInteger> getUpdateExtJsonOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public Tuple2<BigInteger, List<String>> selectAll() throws ContractException {
        final Function function = new Function(FUNC_SELECTALL, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<DynamicArray<Utf8String>>() {}));
        List<Type> results = executeCallWithMultipleValueReturn(function);
        return new Tuple2<BigInteger, List<String>>(
                (BigInteger) results.get(0).getValue(), 
                convertToNative((List<Utf8String>) results.get(1).getValue()));
    }

    public TransactionReceipt insert(List<String> params, String ext_json) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(params.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(params, Utf8String.class)),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void insert(List<String> params, String ext_json, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(params.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(params, Utf8String.class)),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForInsert(List<String> params, String ext_json) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(params.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(params, Utf8String.class)),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<List<String>, String> getInsertInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_INSERT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<List<String>, String>(

                convertToNative((List<Utf8String>) results.get(0).getValue()), 
                (String) results.get(1).getValue()
                );
    }

    public Tuple1<BigInteger> getInsertOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_INSERT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public List<InsertEventEventResponse> getInsertEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(INSERTEVENT_EVENT, transactionReceipt);
        ArrayList<InsertEventEventResponse> responses = new ArrayList<InsertEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            InsertEventEventResponse typedResponse = new InsertEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.params = (List<String>) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.ext_json = (String) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeInsertEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeInsertEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<UpdateEventEventResponse> getUpdateEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(UPDATEEVENT_EVENT, transactionReceipt);
        ArrayList<UpdateEventEventResponse> responses = new ArrayList<UpdateEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            UpdateEventEventResponse typedResponse = new UpdateEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.template_file_id = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.params = (List<String>) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeUpdateEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeUpdateEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<UpdateEnableEventEventResponse> getUpdateEnableEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(UPDATEENABLEEVENT_EVENT, transactionReceipt);
        ArrayList<UpdateEnableEventEventResponse> responses = new ArrayList<UpdateEnableEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            UpdateEnableEventEventResponse typedResponse = new UpdateEnableEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.template_file_id = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.enable = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.updated_time = (String) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeUpdateEnableEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEENABLEEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeUpdateEnableEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEENABLEEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<UpdateExtJsonEventEventResponse> getUpdateExtJsonEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(UPDATEEXTJSONEVENT_EVENT, transactionReceipt);
        ArrayList<UpdateExtJsonEventEventResponse> responses = new ArrayList<UpdateExtJsonEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            UpdateExtJsonEventEventResponse typedResponse = new UpdateExtJsonEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.template_file_id = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.ext_json = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.updated_time = (String) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeUpdateExtJsonEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEXTJSONEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeUpdateExtJsonEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEXTJSONEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public static RealnameAuthAgreementTemplateContract load(String contractAddress, Client client, CryptoKeyPair credential) {
        return new RealnameAuthAgreementTemplateContract(contractAddress, client, credential);
    }

    public static RealnameAuthAgreementTemplateContract deploy(Client client, CryptoKeyPair credential) throws ContractException {
        return deploy(RealnameAuthAgreementTemplateContract.class, client, credential, getBinary(client.getCryptoSuite()), "");
    }

    public static class InsertEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public List<String> params;

        public String ext_json;
    }

    public static class UpdateEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public String template_file_id;

        public List<String> params;
    }

    public static class UpdateEnableEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public String template_file_id;

        public String enable;

        public String updated_time;
    }

    public static class UpdateExtJsonEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public String template_file_id;

        public String ext_json;

        public String updated_time;
    }
}
