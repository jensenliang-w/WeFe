package com.welab.wefe.manager.service.contract;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.fisco.bcos.sdk.abi.FunctionReturnDecoder;
import org.fisco.bcos.sdk.abi.TypeReference;
import org.fisco.bcos.sdk.abi.datatypes.Bool;
import org.fisco.bcos.sdk.abi.datatypes.DynamicArray;
import org.fisco.bcos.sdk.abi.datatypes.Event;
import org.fisco.bcos.sdk.abi.datatypes.Function;
import org.fisco.bcos.sdk.abi.datatypes.Type;
import org.fisco.bcos.sdk.abi.datatypes.Utf8String;
import org.fisco.bcos.sdk.abi.datatypes.generated.Int256;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple1;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple2;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple3;
import org.fisco.bcos.sdk.client.Client;
import org.fisco.bcos.sdk.contract.Contract;
import org.fisco.bcos.sdk.crypto.CryptoSuite;
import org.fisco.bcos.sdk.crypto.keypair.CryptoKeyPair;
import org.fisco.bcos.sdk.eventsub.EventCallback;
import org.fisco.bcos.sdk.model.CryptoType;
import org.fisco.bcos.sdk.model.TransactionReceipt;
import org.fisco.bcos.sdk.model.callback.TransactionCallback;
import org.fisco.bcos.sdk.transaction.model.exception.ContractException;

@SuppressWarnings("unchecked")
public class UnionNodeContract extends Contract {
    public static final String[] BINARY_ARRAY = {"60806040523480156200001157600080fd5b506110016000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166356004b6a6040805190810160405280600d81526020017f756e696f6e5f6e6f64655f7632000000000000000000000000000000000000008152506040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162000101919062000296565b602060405180830381600087803b1580156200011c57600080fd5b505af115801562000131573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062000157919081019062000174565b5062000340565b60006200016c8251620002ef565b905092915050565b6000602082840312156200018757600080fd5b600062000197848285016200015e565b91505092915050565b6000620001ad82620002e4565b808452620001c3816020860160208601620002f9565b620001ce816200032f565b602085010191505092915050565b6000600682527f6669785f696400000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000605882527f756e696f6e5f6e6f64655f69642c756e696f6e5f626173655f75726c2c6f726760208301527f616e697a6174696f6e5f6e616d652c656e61626c652c637265617465645f746960408301527f6d652c757064617465645f74696d652c6578745f6a736f6e00000000000000006060830152608082019050919050565b60006060820190508181036000830152620002b28184620001a0565b90508181036020830152620002c781620001dc565b90508181036040830152620002dc8162000213565b905092915050565b600081519050919050565b6000819050919050565b60005b8381101562000319578082015181840152602081019050620002fc565b8381111562000329576000848401525b50505050565b6000601f19601f8301169050919050565b61416780620003506000396000f300608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806305a9bbe71461008857806311dad538146100c55780634d3d096b146101025780635c6d21861461013f57806363964aa31461017c578063857cb0eb146101b957806397291150146101e5575b600080fd5b34801561009457600080fd5b506100af60048036036100aa9190810190613680565b610222565b6040516100bc9190613a00565b60405180910390f35b3480156100d157600080fd5b506100ec60048036036100e79190810190613614565b6107dc565b6040516100f99190613a00565b60405180910390f35b34801561010e57600080fd5b5061012960048036036101249190810190613592565b610e60565b60405161013691906139e5565b60405180910390f35b34801561014b57600080fd5b5061016660048036036101619190810190613592565b611224565b6040516101739190613a00565b60405180910390f35b34801561018857600080fd5b506101a3600480360361019e9190810190613680565b6115af565b6040516101b09190613a00565b60405180910390f35b3480156101c557600080fd5b506101ce611af1565b6040516101dc929190613a1b565b60405180910390f35b3480156101f157600080fd5b5061020c60048036036102079190810190613459565b611e95565b6040516102199190613a00565b60405180910390f35b6000806000806000806000945061023889610e60565b15156102a6577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff94507f7d29950a0ae63eb067d4a746f4bfc4351fff7ffaa81e13a0c7f07a80aa4f529d858a8a8a6040516102969493929190613b05565b60405180910390a18495506107d0565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280600d81526020017f756e696f6e5f6e6f64655f7632000000000000000000000000000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016103519190613b5f565b602060405180830381600087803b15801561036b57600080fd5b505af115801561037f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506103a39190810190613540565b93508373ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561040957600080fd5b505af115801561041d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061044191908101906134c5565b92508273ffffffffffffffffffffffffffffffffffffffff1663cd30a1d18a6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016104989190613c74565b600060405180830381600087803b1580156104b257600080fd5b505af11580156104c6573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff166313db93466040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561052e57600080fd5b505af1158015610542573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105669190810190613517565b91508173ffffffffffffffffffffffffffffffffffffffff1663e942b516896040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016105bd9190613e12565b600060405180830381600087803b1580156105d757600080fd5b505af11580156105eb573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b516886040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016106449190613d88565b600060405180830381600087803b15801561065e57600080fd5b505af1158015610672573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff1663bf2b70a16040805190810160405280600a81526020017f6669785f69645f3030350000000000000000000000000000000000000000000081525084866040518463ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161070493929190613be1565b602060405180830381600087803b15801561071e57600080fd5b505af1158015610732573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107569190810190613569565b905060018112151561076b576000945061078f565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe94505b7f7d29950a0ae63eb067d4a746f4bfc4351fff7ffaa81e13a0c7f07a80aa4f529d858a8a8a6040516107c49493929190613b05565b60405180910390a18095505b50505050509392505050565b600080600080600080600094506107f288610e60565b151561085e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff94507fef47f7042e8c83038d176a3f11687417b43c663a42baf9fdbf3c25061984ae9a85898960405161084e93929190613ac0565b60405180910390a1849550610e55565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280600d81526020017f756e696f6e5f6e6f64655f7632000000000000000000000000000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016109099190613b5f565b602060405180830381600087803b15801561092357600080fd5b505af1158015610937573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061095b9190810190613540565b93508373ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156109c157600080fd5b505af11580156109d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506109f991908101906134c5565b92508273ffffffffffffffffffffffffffffffffffffffff1663cd30a1d1896040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610a509190613c74565b600060405180830381600087803b158015610a6a57600080fd5b505af1158015610a7e573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff166313db93466040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610ae657600080fd5b505af1158015610afa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b1e9190810190613517565b91508173ffffffffffffffffffffffffffffffffffffffff1663e942b516886000815181101515610b4b57fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610b8d9190613ebc565b600060405180830381600087803b158015610ba757600080fd5b505af1158015610bbb573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b516886001815181101515610bea57fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610c2c9190613e67565b600060405180830381600087803b158015610c4657600080fd5b505af1158015610c5a573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b516886002815181101515610c8957fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000","000000000000000000000000028152600401610ccb9190613d53565b600060405180830381600087803b158015610ce557600080fd5b505af1158015610cf9573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff1663bf2b70a16040805190810160405280600a81526020017f6669785f69645f3030350000000000000000000000000000000000000000000081525084866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610d8b93929190613be1565b602060405180830381600087803b158015610da557600080fd5b505af1158015610db9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ddd9190810190613569565b9050600181121515610df25760009450610e16565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe94505b7fef47f7042e8c83038d176a3f11687417b43c663a42baf9fdbf3c25061984ae9a858989604051610e4993929190613ac0565b60405180910390a18095505b505050505092915050565b6000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280600d81526020017f756e696f6e5f6e6f64655f7632000000000000000000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610f119190613b5f565b602060405180830381600087803b158015610f2b57600080fd5b505af1158015610f3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610f639190810190613540565b92508273ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610fc957600080fd5b505af1158015610fdd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061100191908101906134c5565b91508173ffffffffffffffffffffffffffffffffffffffff1663cd30a1d1866040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016110589190613c74565b600060405180830381600087803b15801561107257600080fd5b505af1158015611086573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663e8434e396040805190810160405280600a81526020017f6669785f69645f30303500000000000000000000000000000000000000000000815250846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611116929190613b81565b602060405180830381600087803b15801561113057600080fd5b505af1158015611144573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061116891908101906134ee565b905060008173ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156111d057600080fd5b505af11580156111e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112089190810190613569565b1115611217576001935061121c565b600093505b505050919050565b60008060008060008093506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280600d81526020017f756e696f6e5f6e6f64655f7632000000000000000000000000000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016112da9190613b5f565b602060405180830381600087803b1580156112f457600080fd5b505af1158015611308573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061132c9190810190613540565b92508273ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561139257600080fd5b505af11580156113a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113ca91908101906134c5565b91508173ffffffffffffffffffffffffffffffffffffffff1663cd30a1d1876040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016114219190613c74565b600060405180830381600087803b15801561143b57600080fd5b505af115801561144f573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff166328bb21176040805190810160405280600a81526020017f6669785f69645f30303500000000000000000000000000000000000000000000815250846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016114df929190613b81565b602060405180830381600087803b1580156114f957600080fd5b505af115801561150d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506115319190810190613569565b9050600181121515611546576000935061156a565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7f521d3afd9caf15cf70b25ebc2337882b442d473ad92dde97bd41550297b8a8f7848760405161159b929190613a90565b60405180910390a180945050505050919050565b6000806000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280600d81526020017f756e696f6e5f6e6f64655f7632000000000000000000000000000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016116639190613b5f565b602060405180830381600087803b15801561167d57600080fd5b505af1158015611691573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506116b59190810190613540565b94508473ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561171b57600080fd5b505af115801561172f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061175391908101906134c5565b93508373ffffffffffffffffffffffffffffffffffffffff1663cd30a1d18a6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016117aa9190613c74565b600060405180830381600087803b1580156117c457600080fd5b505af11580156117d8573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff166313db93466040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561184057600080fd5b505af1158015611854573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118789190810190613517565b92508273ffffffffffffffffffffffffffffffffffffffff1663e942b516896040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016118cf9190613cc9565b600060405180830381600087803b1580156118e957600080fd5b505af11580156118fd573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663e942b516886040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016119569190613d88565b600060405180830381600087803b15801561197057600080fd5b505af1158015611984573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff1663bf2b70a16040805190810160405280600a81526020017f6669785f69645f3030350000000000000000000000000000000000000000000081525085876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611a1693929190613be1565b602060405180830381600087803b158015611a3057600080fd5b505af1158015611a44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611a689190810190613569565b915060009050600182121515611a815760009050611aa5565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe90505b7f91fa9d6109b9b8b47733f98f4b6858346683ebdf73ba3c2f98b90c0d352f83e1818a8a8a604051611ada9493929190613b05565b60405180910390a180955050505050509392505050565b600060606000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280600d81526020017f756e696f6e5f6e6f64655f7632000000000000000000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611ba39190613b5f565b602060405180830381600087803b158015611bbd57600080fd5b505af1158015611bd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611bf59190810190613540565b91508173ffffffffffffffffffffffffffffffffffffffff1663e8434e396040805190810160405280600a81526020017f6669785f69645f303035000000000000000000000000000000000000000000008152508473ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611cad57600080fd5b505a","","","90508181036000830152613cc281613864565b9050919050565b60006040820190508181036000830152613ce281613864565b90508181036020830152613cf681846137c1565b905092915050565b60006040820190508181036000830152613d178161389b565b90508181036020830152613d2b81846137f7565b905092915050565b60006020820190508181036000830152613d4c816138d2565b9050919050565b60006040820190508181036000830152613d6c816138d2565b90508181036020830152613d8081846137f7565b905092915050565b60006040820190508181036000830152613da1816138d2565b90508181036020830152613db581846137c1565b905092915050565b60006020820190508181036000830152613dd681613909565b9050919050565b60006040820190508181036000830152613df681613909565b90508181036020830152613e0a81846137f7565b905092915050565b60006040820190508181036000830152613e2b81613909565b90508181036020830152613e3f81846137c1565b905092915050565b60006020820190508181036000830152613e6081613940565b9050919050565b60006040820190508181036000830152613e8081613940565b90508181036020830152613e9481846137f7565b905092915050565b60006020820190508181036000830152613eb581613977565b9050919050565b60006040820190508181036000830152613ed581613977565b90508181036020830152613ee981846137f7565b905092915050565b60006020820190508181036000830152613f0a816139ae565b9050919050565b60006040820190508181036000830152613f2a816139ae565b90508181036020830152613f3e81846137f7565b905092915050565b6000604051905081810181811067ffffffffffffffff82111715613f6957600080fd5b8060405250919050565b600067ffffffffffffffff821115613f8a57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115613fb257600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115613fde57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b600061406f8261402e565b9050919050565b60006140818261402e565b9050919050565b60006140938261402e565b9050919050565b60006140a58261402e565b9050919050565b6000819050919050565b60006140c18261402e565b9050919050565b60006140d38261402e565b9050919050565b82818337600083830152505050565b60005b838110156141075780820151818401526020810190506140ec565b83811115614116576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a723058200cf73b8b769157c24ed6a9990b72a970891b63c945e1c8058e850b94b86757a06c6578706572696d656e74616cf50037"};

    public static final String BINARY = String.join("", BINARY_ARRAY);

    public static final String[] SM_BINARY_ARRAY = {"60806040523480156200001157600080fd5b506110016000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c92a78016040805190810160405280600d81526020017f756e696f6e5f6e6f64655f7632000000000000000000000000000000000000008152506040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162000101919062000296565b602060405180830381600087803b1580156200011c57600080fd5b505af115801562000131573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062000157919081019062000174565b5062000340565b60006200016c8251620002ef565b905092915050565b6000602082840312156200018757600080fd5b600062000197848285016200015e565b91505092915050565b6000620001ad82620002e4565b808452620001c3816020860160208601620002f9565b620001ce816200032f565b602085010191505092915050565b6000605882527f756e696f6e5f6e6f64655f69642c756e696f6e5f626173655f75726c2c6f726760208301527f616e697a6174696f6e5f6e616d652c656e61626c652c637265617465645f746960408301527f6d652c757064617465645f74696d652c6578745f6a736f6e00000000000000006060830152608082019050919050565b6000600682527f6669785f696400000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006060820190508181036000830152620002b28184620001a0565b90508181036020830152620002c7816200025f565b90508181036040830152620002dc81620001dc565b905092915050565b600081519050919050565b6000819050919050565b60005b8381101562000319578082015181840152602081019050620002fc565b8381111562000329576000848401525b50505050565b6000601f19601f8301169050919050565b61416780620003506000396000f300608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806315d0d62514610088578063568fe885146100c55780639eb03ade14610102578063b359ee071461013f578063c181ca361461017c578063d5fc5a53146101a8578063ed1cc08a146101e5575b600080fd5b34801561009457600080fd5b506100af60048036036100aa9190810190613680565b610222565b6040516100bc9190613a00565b60405180910390f35b3480156100d157600080fd5b506100ec60048036036100e79190810190613592565b610764565b6040516100f991906139e5565b60405180910390f35b34801561010e57600080fd5b5061012960048036036101249190810190613459565b610b28565b6040516101369190613a00565b60405180910390f35b34801561014b57600080fd5b5061016660048036036101619190810190613592565b6113d8565b6040516101739190613a00565b60405180910390f35b34801561018857600080fd5b50610191611763565b60405161019f929190613a1b565b60405180910390f35b3480156101b457600080fd5b506101cf60048036036101ca9190810190613680565b611b07565b6040516101dc9190613a00565b60405180910390f35b3480156101f157600080fd5b5061020c60048036036102079190810190613614565b6120c1565b6040516102199190613a00565b60405180910390f35b6000806000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280600d81526020017f756e696f6e5f6e6f64655f7632000000000000000000000000000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016102d69190613b5f565b602060405180830381600087803b1580156102f057600080fd5b505af1158015610304573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506103289190810190613540565b94508473ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561038e57600080fd5b505af11580156103a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506103c691908101906134c5565b93508373ffffffffffffffffffffffffffffffffffffffff1663ae763db58a6040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161041d9190613d88565b600060405180830381600087803b15801561043757600080fd5b505af115801561044b573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff16635887ab246040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156104b357600080fd5b505af11580156104c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506104eb9190810190613517565b92508273ffffffffffffffffffffffffffffffffffffffff16631a391cb4896040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016105429190613f11565b600060405180830381600087803b15801561055c57600080fd5b505af1158015610570573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff16631a391cb4886040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016105c99190613cfe565b600060405180830381600087803b1580156105e357600080fd5b505af11580156105f7573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff1663664b37d66040805190810160405280600a81526020017f6669785f69645f3030350000000000000000000000000000000000000000000081525085876040518463ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161068993929190613be1565b602060405180830381600087803b1580156106a357600080fd5b505af11580156106b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106db9190810190613569565b9150600090506001821215156106f45760009050610718565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe90505b7fb36a4960db7128c065f905021bc6b7ab38c8106c359c6ac8dcd55ed9356c994c818a8a8a60405161074d9493929190613b05565b60405180910390a180955050505050509392505050565b6000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280600d81526020017f756e696f6e5f6e6f64655f7632000000000000000000000000000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016108159190613b5f565b602060405180830381600087803b15801561082f57600080fd5b505af1158015610843573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108679190810190613540565b92508273ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156108cd57600080fd5b505af11580156108e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061090591908101906134c5565b91508173ffffffffffffffffffffffffffffffffffffffff1663ae763db5866040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161095c9190613d88565b600060405180830381600087803b15801561097657600080fd5b505af115801561098a573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663d8ac59576040805190810160405280600a81526020017f6669785f69645f30303500000000000000000000000000000000000000000000815250846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610a1a929190613b81565b602060405180830381600087803b158015610a3457600080fd5b505af1158015610a48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a6c91908101906134ee565b905060008173ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610ad457600080fd5b505af1158015610ae8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b0c9190810190613569565b1115610b1b5760019350610b20565b600093505b505050919050565b6000806000806000809350610b54876000815181101515610b4557fe5b90602001906020020151610764565b15610bdf577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff93507fcb263a23d186eec891d55f1e0ba96ec8290af8c893d32d644c22dbff0953e51f848888604051610baf93929190613a4b565b60405180910390a17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff94506113ce565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280600d81526020017f756e696f6e5f6e6f64655f7632000000000000000000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610c8a9190613b5f565b602060405180830381600087803b158015610ca457600080fd5b505af1158015610cb8573d","6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610cdc9190810190613540565b92508273ffffffffffffffffffffffffffffffffffffffff16635887ab246040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610d4257600080fd5b505af1158015610d56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610d7a9190810190613517565b91508173ffffffffffffffffffffffffffffffffffffffff16631a391cb46040805190810160405280600a81526020017f6669785f69645f303035000000000000000000000000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610e069190613ebc565b600060405180830381600087803b158015610e2057600080fd5b505af1158015610e34573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4886000815181101515610e6357fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610ea59190613d53565b600060405180830381600087803b158015610ebf57600080fd5b505af1158015610ed3573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4886001815181101515610f0257fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610f449190613e87565b600060405180830381600087803b158015610f5e57600080fd5b505af1158015610f72573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4886002815181101515610fa157fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610fe39190613e32565b600060405180830381600087803b158015610ffd57600080fd5b505af1158015611011573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb488600381518110151561104057fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016110829190613c3f565b600060405180830381600087803b15801561109c57600080fd5b505af11580156110b0573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48860048151811015156110df57fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016111219190613ddd565b600060405180830381600087803b15801561113b57600080fd5b505af115801561114f573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb488600581518110151561117e57fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016111c09190613cc9565b600060405180830381600087803b1580156111da57600080fd5b505af11580156111ee573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4876040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016112479190613f11565b600060405180830381600087803b15801561126157600080fd5b505af1158015611275573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff16634c6f30c06040805190810160405280600a81526020017f6669785f69645f30303500000000000000000000000000000000000000000000815250846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611305929190613bb1565b602060405180830381600087803b15801561131f57600080fd5b505af1158015611333573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113579190810190613569565b9050600181141561136b576000935061138f565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7fcb263a23d186eec891d55f1e0ba96ec8290af8c893d32d644c22dbff0953e51f8488886040516113c293929190613a4b565b60405180910390a18094505b5050505092915050565b60008060008060008093506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280600d81526020017f756e696f6e5f6e6f64655f7632000000000000000000000000000000000000008152506040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161148e9190613b5f565b602060405180830381600087803b1580156114a857600080fd5b505af11580156114bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506114e09190810190613540565b92508273ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561154657600080fd5b505af115801561155a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061157e91908101906134c5565b91508173ffffffffffffffffffffffffffffffffffffffff1663ae763db5876040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016115d59190613d88565b600060405180830381600087803b1580156115ef57600080fd5b505af1158015611603573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff166309ff42f06040805190810160405280600a81526020017f6669785f69645f30303500000000000000000000000000000000000000000000815250846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611693929190613b81565b602060405180830381600087803b1580156116ad57600080fd5b505af11580156116c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506116e59190810190613569565b90506001811215156116fa576000935061171e565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7f79d370910f1e50a6a56f868b3da28b3749934e4660a9d48cb5e673bff3a01c39848760405161174f929190613a90565b60405180910390a180945050505050919050565b600060606000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280600d81526020017f756e696f6e5f6e6f64655f7632000000000000000000000000000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016118159190613b5f565b602060405180830381600087803b15801561182f57600080fd5b505af1158015611843573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118679190810190613540565b91508173ffffffffffffffffffffffffffffffffffffffff1663d8ac59576040805190810160405280600a81526020017f6669785f69645f303035000000000000000000000000000000000000000000008152508473ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561191f57600080fd5b505af1158015611933573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061195791908101906134c5565b6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611990929190613b81565b602060405180830381600087803b1580156119aa57600080fd5b505af11580156119be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506119e291908101906134ee565b90508073ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611a4857600080fd5b505af1158015611a5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611a809190810190613569565b60001415611aee577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd6000604051908082528060200260200182016040528015611ade57816020015b6060815260200190600190039081611ac95790505b5081915080905093509350611b01565b6000611af982612745565b819150935093505b50509091565b60008060008060008060009450611b1d89610764565b1515611b8b577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff94507f6cbca64bfdd615f94babd25f1fed6a9d80607ed38c5e9cd592d1647e6de646a2858a8a8a604051611b7b9493929190613b05565b60405180910390a18495506120b5565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280600d81526020017f756e696f6e5f6e6f64655f7632000000000000000000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611c369190613b5f565b602060405180830381600087803b158015611c5057600080fd5b505af1158015611c64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611c889190810190613540565b93508373ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff","","612cb890613c1f565b600060405180830381600087803b158015612cd257600080fd5b505af1158015612ce6573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250612d0f91908101906135d3565b613048565b6130a1565b9050612d5a816040805190810160405280600181526020017f7c000000000000000000000000000000000000000000000000000000000000008152506130a1565b9050612e1781612e128473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612db690613dbd565b600060405180830381600087803b158015612dd057600080fd5b505af1158015612de4573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250612e0d91908101906135d3565b613048565b6130a1565b9050612e58816040805190810160405280600181526020017f7c000000000000000000000000000000000000000000000000000000000000008152506130a1565b9050612f1581612f108473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612eb490613ca9565b600060405180830381600087803b158015612ece57600080fd5b505af1158015612ee2573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250612f0b91908101906135d3565b613048565b6130a1565b9050612f56816040805190810160405280600181526020017f7c000000000000000000000000000000000000000000000000000000000000008152506130a1565b90506130138161300e8473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612fb290613ef1565b600060405180830381600087803b158015612fcc57600080fd5b505af1158015612fe0573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061300991908101906135d3565b613048565b6130a1565b905080848481518110151561302457fe5b90602001906020020181905250826001019250612824565b83945050505050919050565b6060600061305583613272565b1415613098576040805190810160405280600181526020017f2000000000000000000000000000000000000000000000000000000000000000815250905061309c565b8190505b919050565b606080606080606060008088955087945084518651016040519080825280601f01601f1916602001820160405280156130e95781602001602082028038833980820191505090505b50935083925060009150600090505b85518110156131ab57858181518110151561310f57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561316e57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506130f8565b600090505b84518110156132635784818151811015156131c757fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561322657fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506131b0565b83965050505050505092915050565b600081519050919050565b600082601f830112151561329057600080fd5b81356132a361329e82613f73565b613f46565b9150818183526020840193506020810190508360005b838110156132e957813586016132cf8882613357565b8452602084019350602083019250506001810190506132b9565b5050505092915050565b60006132ff8251614064565b905092915050565b60006133138251614076565b905092915050565b60006133278251614088565b905092915050565b600061333b825161409a565b905092915050565b600061334f82516140ac565b905092915050565b600082601f830112151561336a57600080fd5b813561337d61337882613f9b565b613f46565b9150808252602083016020830185838301111561339957600080fd5b6133a48382846140da565b50505092915050565b600082601f83011215156133c057600080fd5b81356133d36133ce82613fc7565b613f46565b915080825260208301602083018583830111156133ef57600080fd5b6133fa8382846140da565b50505092915050565b600082601f830112151561341657600080fd5b815161342961342482613fc7565b613f46565b9150808252602083016020830185838301111561344557600080fd5b6134508382846140e9565b50505092915050565b6000806040838503121561346c57600080fd5b600083013567ffffffffffffffff81111561348657600080fd5b6134928582860161327d565b925050602083013567ffffffffffffffff8111156134af57600080fd5b6134bb858286016133ad565b9150509250929050565b6000602082840312156134d757600080fd5b60006134e5848285016132f3565b91505092915050565b60006020828403121561350057600080fd5b600061350e84828501613307565b91505092915050565b60006020828403121561352957600080fd5b60006135378482850161331b565b91505092915050565b60006020828403121561355257600080fd5b60006135608482850161332f565b91505092915050565b60006020828403121561357b57600080fd5b600061358984828501613343565b91505092915050565b6000602082840312156135a457600080fd5b600082013567ffffffffffffffff8111156135be57600080fd5b6135ca848285016133ad565b91505092915050565b6000602082840312156135e557600080fd5b600082015167ffffffffffffffff8111156135ff57600080fd5b61360b84828501613403565b91505092915050565b6000806040838503121561362757600080fd5b600083013567ffffffffffffffff81111561364157600080fd5b61364d858286016133ad565b925050602083013567ffffffffffffffff81111561366a57600080fd5b6136768582860161327d565b9150509250929050565b60008060006060848603121561369557600080fd5b600084013567ffffffffffffffff8111156136af57600080fd5b6136bb868287016133ad565b935050602084013567ffffffffffffffff8111156136d857600080fd5b6136e4868287016133ad565b925050604084013567ffffffffffffffff81111561370157600080fd5b61370d868287016133ad565b9150509250925092565b600061372282614000565b8084526020840193508360208202850161373b85613ff3565b60005b848110156137745783830388526137568383516137f7565b925061376182614021565b915060208801975060018101905061373e565b508196508694505050505092915050565b61378e8161404e565b82525050565b61379d816140b6565b82525050565b6137ac816140c8565b82525050565b6137bb8161405a565b82525050565b60006137cc82614016565b8084526137e08160208601602086016140e9565b6137e98161411c565b602085010191505092915050565b60006138028261400b565b8084526138168160208601602086016140e9565b61381f8161411c565b602085010191505092915050565b6000600682527f656e61626c6500000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f757064617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000600d82527f756e696f6e5f6e6f64655f6964000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f637265617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000601182527f6f7267616e697a6174696f6e5f6e616d650000000000000000000000000000006020830152604082019050919050565b6000600e82527f756e696f6e5f626173655f75726c0000000000000000000000000000000000006020830152604082019050919050565b6000600682527f6669785f696400000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f6578745f6a736f6e0000000000000000000000000000000000000000000000006020830152604082019050919050565b60006020820190506139fa6000830184613785565b92915050565b6000602082019050613a1560008301846137b2565b92915050565b6000604082019050613a3060008301856137b2565b8181036020830152613a428184613717565b90509392505050565b6000606082019050613a6060008301866137b2565b8181036020830152613a728185613717565b90508181036040830152613a8681846137c1565b9050949350505050565b6000604082019050613aa560008301856137b2565b8181036020830152613ab781846137c1565b90509392505050565b6000606082019050613ad560008301866137b2565b8181036020830152613ae781856137c1565b90508181036040830152613afb8184613717565b9050949350505050565b6000608082019050613b1a60008301876137b2565b8181036020830152613b2c81866137c1565b90508181036040830152613b4081856137c1565b90508181036060830152613b5481846137c1565b905095945050505050565b60006020820190508181036000830152613b7981846137f7565b905092915050565b60006040820190508181036000830152613b9b81856137f7565b9050613baa6020830184613794565b9392505050565b60006040820190508181036000830152613bcb81856137f7565b9050613bda60208301846137a3565b9392505050565b60006060820190508181036000830152613bfb81866137f7565b9050613c0a60208301856137a3565b613c176040830184613794565b949350505050565b60006020820190508181036000830152613c388161382d565b9050919050565b60006040820190508181036000830152613c588161382d565b90508181036020830152613c6c81846137f7565b905092915050565b60006040820190508181036000830152613c8d8161382d565b90508181036020830152613ca181846137c1565b905092915050565b600060208201","90508181036000830152613cc281613864565b9050919050565b60006040820190508181036000830152613ce281613864565b90508181036020830152613cf681846137f7565b905092915050565b60006040820190508181036000830152613d1781613864565b90508181036020830152613d2b81846137c1565b905092915050565b60006020820190508181036000830152613d4c8161389b565b9050919050565b60006040820190508181036000830152613d6c8161389b565b90508181036020830152613d8081846137f7565b905092915050565b60006040820190508181036000830152613da18161389b565b90508181036020830152613db581846137c1565b905092915050565b60006020820190508181036000830152613dd6816138d2565b9050919050565b60006040820190508181036000830152613df6816138d2565b90508181036020830152613e0a81846137f7565b905092915050565b60006020820190508181036000830152613e2b81613909565b9050919050565b60006040820190508181036000830152613e4b81613909565b90508181036020830152613e5f81846137f7565b905092915050565b60006020820190508181036000830152613e8081613940565b9050919050565b60006040820190508181036000830152613ea081613940565b90508181036020830152613eb481846137f7565b905092915050565b60006040820190508181036000830152613ed581613977565b90508181036020830152613ee981846137f7565b905092915050565b60006020820190508181036000830152613f0a816139ae565b9050919050565b60006040820190508181036000830152613f2a816139ae565b90508181036020830152613f3e81846137c1565b905092915050565b6000604051905081810181811067ffffffffffffffff82111715613f6957600080fd5b8060405250919050565b600067ffffffffffffffff821115613f8a57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115613fb257600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115613fde57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b600061406f8261402e565b9050919050565b60006140818261402e565b9050919050565b60006140938261402e565b9050919050565b60006140a58261402e565b9050919050565b6000819050919050565b60006140c18261402e565b9050919050565b60006140d38261402e565b9050919050565b82818337600083830152505050565b60005b838110156141075780820151818401526020810190506140ec565b83811115614116576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a72305820566391768f7e46b91b959c2cab4b819bf63bfbd51a4bfd3aaf550d32ab3936c56c6578706572696d656e74616cf50037"};

    public static final String SM_BINARY = String.join("", SM_BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"constant\":false,\"inputs\":[{\"name\":\"union_node_id\",\"type\":\"string\"},{\"name\":\"enable\",\"type\":\"string\"},{\"name\":\"updated_time\",\"type\":\"string\"}],\"name\":\"updateEnable\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"union_node_id\",\"type\":\"string\"},{\"name\":\"params\",\"type\":\"string[]\"}],\"name\":\"update\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"union_node_id\",\"type\":\"string\"}],\"name\":\"isExist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"union_node_id\",\"type\":\"string\"}],\"name\":\"deleteByUnionNodeId\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"union_node_id\",\"type\":\"string\"},{\"name\":\"ext_json\",\"type\":\"string\"},{\"name\":\"updated_time\",\"type\":\"string\"}],\"name\":\"updateExtJson\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"selectAll\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"params\",\"type\":\"string[]\"},{\"name\":\"ext_json\",\"type\":\"string\"}],\"name\":\"insert\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"params\",\"type\":\"string[]\"},{\"indexed\":false,\"name\":\"ext_json\",\"type\":\"string\"}],\"name\":\"insertEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"union_node_id\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"params\",\"type\":\"string[]\"}],\"name\":\"updateEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"union_node_id\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"enable\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"updated_time\",\"type\":\"string\"}],\"name\":\"updateEnableEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"union_node_id\",\"type\":\"string\"}],\"name\":\"deleteByUnionNodeIdEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"union_node_id\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"ext_json\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"updated_time\",\"type\":\"string\"}],\"name\":\"updateExtJsonEvent\",\"type\":\"event\"}]"};

    public static final String ABI = String.join("", ABI_ARRAY);

    public static final String FUNC_UPDATEENABLE = "updateEnable";

    public static final String FUNC_UPDATE = "update";

    public static final String FUNC_ISEXIST = "isExist";

    public static final String FUNC_DELETEBYUNIONNODEID = "deleteByUnionNodeId";

    public static final String FUNC_UPDATEEXTJSON = "updateExtJson";

    public static final String FUNC_SELECTALL = "selectAll";

    public static final String FUNC_INSERT = "insert";

    public static final Event INSERTEVENT_EVENT = new Event("insertEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event UPDATEEVENT_EVENT = new Event("updateEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<DynamicArray<Utf8String>>() {}));
    ;

    public static final Event UPDATEENABLEEVENT_EVENT = new Event("updateEnableEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event DELETEBYUNIONNODEIDEVENT_EVENT = new Event("deleteByUnionNodeIdEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event UPDATEEXTJSONEVENT_EVENT = new Event("updateExtJsonEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
    ;

    protected UnionNodeContract(String contractAddress, Client client, CryptoKeyPair credential) {
        super(getBinary(client.getCryptoSuite()), contractAddress, client, credential);
    }

    public static String getBinary(CryptoSuite cryptoSuite) {
        return (cryptoSuite.getCryptoTypeConfig() == CryptoType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public TransactionReceipt updateEnable(String union_node_id, String enable, String updated_time) {
        final Function function = new Function(
                FUNC_UPDATEENABLE, 
                Arrays.<Type>asList(new Utf8String(union_node_id),
                new Utf8String(enable),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void updateEnable(String union_node_id, String enable, String updated_time, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UPDATEENABLE, 
                Arrays.<Type>asList(new Utf8String(union_node_id),
                new Utf8String(enable),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForUpdateEnable(String union_node_id, String enable, String updated_time) {
        final Function function = new Function(
                FUNC_UPDATEENABLE, 
                Arrays.<Type>asList(new Utf8String(union_node_id),
                new Utf8String(enable),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<String, String, String> getUpdateEnableInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_UPDATEENABLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<String, String, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (String) results.get(2).getValue()
                );
    }

    public Tuple1<BigInteger> getUpdateEnableOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_UPDATEENABLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public TransactionReceipt update(String union_node_id, List<String> params) {
        final Function function = new Function(
                FUNC_UPDATE, 
                Arrays.<Type>asList(new Utf8String(union_node_id),
                params.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(params, Utf8String.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void update(String union_node_id, List<String> params, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UPDATE, 
                Arrays.<Type>asList(new Utf8String(union_node_id),
                params.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(params, Utf8String.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForUpdate(String union_node_id, List<String> params) {
        final Function function = new Function(
                FUNC_UPDATE, 
                Arrays.<Type>asList(new Utf8String(union_node_id),
                params.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(params, Utf8String.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<String, List<String>> getUpdateInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_UPDATE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<DynamicArray<Utf8String>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<String, List<String>>(

                (String) results.get(0).getValue(), 
                convertToNative((List<Utf8String>) results.get(1).getValue())
                );
    }

    public Tuple1<BigInteger> getUpdateOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_UPDATE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public Boolean isExist(String union_node_id) throws ContractException {
        final Function function = new Function(FUNC_ISEXIST, 
                Arrays.<Type>asList(new Utf8String(union_node_id)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeCallWithSingleValueReturn(function, Boolean.class);
    }

    public TransactionReceipt deleteByUnionNodeId(String union_node_id) {
        final Function function = new Function(
                FUNC_DELETEBYUNIONNODEID, 
                Arrays.<Type>asList(new Utf8String(union_node_id)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void deleteByUnionNodeId(String union_node_id, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_DELETEBYUNIONNODEID, 
                Arrays.<Type>asList(new Utf8String(union_node_id)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForDeleteByUnionNodeId(String union_node_id) {
        final Function function = new Function(
                FUNC_DELETEBYUNIONNODEID, 
                Arrays.<Type>asList(new Utf8String(union_node_id)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getDeleteByUnionNodeIdInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_DELETEBYUNIONNODEID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple1<BigInteger> getDeleteByUnionNodeIdOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_DELETEBYUNIONNODEID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public TransactionReceipt updateExtJson(String union_node_id, String ext_json, String updated_time) {
        final Function function = new Function(
                FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(new Utf8String(union_node_id),
                new Utf8String(ext_json),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void updateExtJson(String union_node_id, String ext_json, String updated_time, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(new Utf8String(union_node_id),
                new Utf8String(ext_json),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForUpdateExtJson(String union_node_id, String ext_json, String updated_time) {
        final Function function = new Function(
                FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(new Utf8String(union_node_id),
                new Utf8String(ext_json),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<String, String, String> getUpdateExtJsonInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<String, String, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (String) results.get(2).getValue()
                );
    }

    public Tuple1<BigInteger> getUpdateExtJsonOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public Tuple2<BigInteger, List<String>> selectAll() throws ContractException {
        final Function function = new Function(FUNC_SELECTALL, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<DynamicArray<Utf8String>>() {}));
        List<Type> results = executeCallWithMultipleValueReturn(function);
        return new Tuple2<BigInteger, List<String>>(
                (BigInteger) results.get(0).getValue(), 
                convertToNative((List<Utf8String>) results.get(1).getValue()));
    }

    public TransactionReceipt insert(List<String> params, String ext_json) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(params.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(params, Utf8String.class)),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void insert(List<String> params, String ext_json, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(params.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(params, Utf8String.class)),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForInsert(List<String> params, String ext_json) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(params.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(params, Utf8String.class)),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<List<String>, String> getInsertInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_INSERT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<List<String>, String>(

                convertToNative((List<Utf8String>) results.get(0).getValue()), 
                (String) results.get(1).getValue()
                );
    }

    public Tuple1<BigInteger> getInsertOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_INSERT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public List<InsertEventEventResponse> getInsertEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(INSERTEVENT_EVENT, transactionReceipt);
        ArrayList<InsertEventEventResponse> responses = new ArrayList<InsertEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            InsertEventEventResponse typedResponse = new InsertEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.params = (List<String>) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.ext_json = (String) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeInsertEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeInsertEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<UpdateEventEventResponse> getUpdateEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(UPDATEEVENT_EVENT, transactionReceipt);
        ArrayList<UpdateEventEventResponse> responses = new ArrayList<UpdateEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            UpdateEventEventResponse typedResponse = new UpdateEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.union_node_id = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.params = (List<String>) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeUpdateEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeUpdateEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<UpdateEnableEventEventResponse> getUpdateEnableEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(UPDATEENABLEEVENT_EVENT, transactionReceipt);
        ArrayList<UpdateEnableEventEventResponse> responses = new ArrayList<UpdateEnableEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            UpdateEnableEventEventResponse typedResponse = new UpdateEnableEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.union_node_id = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.enable = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.updated_time = (String) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeUpdateEnableEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEENABLEEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeUpdateEnableEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEENABLEEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<DeleteByUnionNodeIdEventEventResponse> getDeleteByUnionNodeIdEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(DELETEBYUNIONNODEIDEVENT_EVENT, transactionReceipt);
        ArrayList<DeleteByUnionNodeIdEventEventResponse> responses = new ArrayList<DeleteByUnionNodeIdEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            DeleteByUnionNodeIdEventEventResponse typedResponse = new DeleteByUnionNodeIdEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.union_node_id = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeDeleteByUnionNodeIdEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(DELETEBYUNIONNODEIDEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeDeleteByUnionNodeIdEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(DELETEBYUNIONNODEIDEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<UpdateExtJsonEventEventResponse> getUpdateExtJsonEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(UPDATEEXTJSONEVENT_EVENT, transactionReceipt);
        ArrayList<UpdateExtJsonEventEventResponse> responses = new ArrayList<UpdateExtJsonEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            UpdateExtJsonEventEventResponse typedResponse = new UpdateExtJsonEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.union_node_id = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.ext_json = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.updated_time = (String) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeUpdateExtJsonEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEXTJSONEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeUpdateExtJsonEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEXTJSONEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public static UnionNodeContract load(String contractAddress, Client client, CryptoKeyPair credential) {
        return new UnionNodeContract(contractAddress, client, credential);
    }

    public static UnionNodeContract deploy(Client client, CryptoKeyPair credential) throws ContractException {
        return deploy(UnionNodeContract.class, client, credential, getBinary(client.getCryptoSuite()), "");
    }

    public static class InsertEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public List<String> params;

        public String ext_json;
    }

    public static class UpdateEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public String union_node_id;

        public List<String> params;
    }

    public static class UpdateEnableEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public String union_node_id;

        public String enable;

        public String updated_time;
    }

    public static class DeleteByUnionNodeIdEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public String union_node_id;
    }

    public static class UpdateExtJsonEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public String union_node_id;

        public String ext_json;

        public String updated_time;
    }
}
