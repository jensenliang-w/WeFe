package com.welab.wefe.union.service.contract;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.fisco.bcos.sdk.abi.FunctionReturnDecoder;
import org.fisco.bcos.sdk.abi.TypeReference;
import org.fisco.bcos.sdk.abi.datatypes.Bool;
import org.fisco.bcos.sdk.abi.datatypes.DynamicArray;
import org.fisco.bcos.sdk.abi.datatypes.Event;
import org.fisco.bcos.sdk.abi.datatypes.Function;
import org.fisco.bcos.sdk.abi.datatypes.Type;
import org.fisco.bcos.sdk.abi.datatypes.Utf8String;
import org.fisco.bcos.sdk.abi.datatypes.generated.Int256;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple1;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple2;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple3;
import org.fisco.bcos.sdk.client.Client;
import org.fisco.bcos.sdk.contract.Contract;
import org.fisco.bcos.sdk.crypto.CryptoSuite;
import org.fisco.bcos.sdk.crypto.keypair.CryptoKeyPair;
import org.fisco.bcos.sdk.eventsub.EventCallback;
import org.fisco.bcos.sdk.model.CryptoType;
import org.fisco.bcos.sdk.model.TransactionReceipt;
import org.fisco.bcos.sdk.model.callback.TransactionCallback;
import org.fisco.bcos.sdk.transaction.model.exception.ContractException;

@SuppressWarnings("unchecked")
public class BloomFilterContract extends Contract {
    public static final String[] BINARY_ARRAY = {"","01610cba9190612ebf565b600060405180830381600087803b158015610cd457600080fd5b505af1158015610ce8573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663e942b516886040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610d419190612f7e565b600060405180830381600087803b158015610d5b57600080fd5b505af1158015610d6f573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff1663bf2b70a16040805190810160405280600a81526020017f6669785f69645f3031310000000000000000000000000000000000000000000081525085876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610e0193929190612df7565b602060405180830381600087803b158015610e1b57600080fd5b505af1158015610e2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e539190810190612897565b915060009050600182121515610e6c5760009050610e90565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe90505b7f91fa9d6109b9b8b47733f98f4b6858346683ebdf73ba3c2f98b90c0d352f83e1818a8a8a604051610ec59493929190612d1b565b60405180910390a180955050505050509392505050565b60008060008060008060009450610ef2896105d6565b1515610f60577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff94507f9a7f95a08114585df56e335cc7d7c8408a6ee0be6f3f2250ef933b4f7e158932858a8a8a604051610f509493929190612d1b565b60405180910390a1849550611511565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280600c81526020017f626c6f6f6d5f66696c74657200000000000000000000000000000000000000008152506040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161100b9190612d75565b602060405180830381600087803b15801561102557600080fd5b505af1158015611039573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061105d919081019061286e565b93508373ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156110c357600080fd5b505af11580156110d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506110fb91908101906127f3565b92508273ffffffffffffffffffffffffffffffffffffffff1663cd30a1d18a6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611152919061305d565b600060405180830381600087803b15801561116c57600080fd5b505af1158015611180573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663cd30a1d1896040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016111d99190612e6a565b600060405180830381600087803b1580156111f357600080fd5b505af1158015611207573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff166313db93466040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561126f57600080fd5b505af1158015611283573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112a79190810190612845565b91508173ffffffffffffffffffffffffffffffffffffffff1663e942b516896040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016112fe9190612e6a565b600060405180830381600087803b15801561131857600080fd5b505af115801561132c573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b516886040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016113859190612f7e565b600060405180830381600087803b15801561139f57600080fd5b505af11580156113b3573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff1663bf2b70a16040805190810160405280600a81526020017f6669785f69645f3031310000000000000000000000000000000000000000000081525084866040518463ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161144593929190612df7565b602060405180830381600087803b15801561145f57600080fd5b505af1158015611473573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506114979190810190612897565b90506001811215156114ac57600094506114d0565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe94505b7f9a7f95a08114585df56e335cc7d7c8408a6ee0be6f3f2250ef933b4f7e158932858a8a8a6040516115059493929190612d1b565b60405180910390a18495505b50505050509392505050565b600080600080600080935061154987600081518110151561153a57fe5b906020019060200201516105d6565b156115b4577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff93507f5157dc1ab0b55c7621be94a34b2ae4228f7d16e8271628060cc027b1a513b12f8488886040516115a493929190612cd6565b60405180910390a1839450611c65565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280600c81526020017f626c6f6f6d5f66696c74657200000000000000000000000000000000000000008152506040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161165f9190612d75565b602060405180830381600087803b15801561167957600080fd5b505af115801561168d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506116b1919081019061286e565b92508273ffffffffffffffffffffffffffffffffffffffff166313db93466040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561171757600080fd5b505af115801561172b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061174f9190810190612845565b91508173ffffffffffffffffffffffffffffffffffffffff1663e942b5166040805190810160405280600a81526020017f6669785f69645f303131000000000000000000000000000000000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016117db9190612ef4565b600060405180830381600087803b1580156117f557600080fd5b505af1158015611809573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b51688600081518110151561183857fe5b906020019060200201516040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161187a9190613028565b600060405180830381600087803b15801561189457600080fd5b505af11580156118a8573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b5168860018151811015156118d757fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016119199190612e35565b600060405180830381600087803b15801561193357600080fd5b505af1158015611947573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b51688600281518110151561197657fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016119b89190612fd3565b600060405180830381600087803b1580156119d257600080fd5b505af11580156119e6573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b516886003815181101515611a1557fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611a579190612f49565b600060405180830381600087803b158015611a7157600080fd5b505af1158015611a85573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b516876040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611ade9190612ebf565b600060405180830381600087803b158015611af857600080fd5b505af1158015611b0c573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff166331afac366040805190810160405280600a81526020017f6669785f69645f30313100000000000000000000000000000000000000000000815250846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611b9c929190612dc7565b602060405180830381600087803b158015611bb657600080fd5b505af1158015611bca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611bee9190810190612897565b90506001811415611c025760009350611c26565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7f5157dc1ab0b55c7621be94a34b2ae4228f7d16e8271628060cc027b1a513b12f848888604051611c5993929190612cd6565b60405180910390a18394505b5050505092915050565b60608060008060608573ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000","000000000000000000000000028152600401602060405180830381600087803b158015611cdb57600080fd5b505af1158015611cef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611d139190810190612897565b604051908082528060200260200182016040528015611d4657816020015b6060815260200190600190039081611d315790505b509350600092505b8573ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611db257600080fd5b505af1158015611dc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611dea9190810190612897565b83121561236a578573ffffffffffffffffffffffffffffffffffffffff1663846719e0846040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611e469190612c8b565b602060405180830381600087803b158015611e6057600080fd5b505af1158015611e74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611e989190810190612845565b9150611f8a611f4f8373ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611ef390613008565b600060405180830381600087803b158015611f0d57600080fd5b505af1158015611f21573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250611f4a9190810190612901565b612376565b6040805190810160405280600181526020017f7c000000000000000000000000000000000000000000000000000000000000008152506123cf565b9050612047816120428473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611fe690613092565b600060405180830381600087803b15801561200057600080fd5b505af1158015612014573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061203d9190810190612901565b612376565b6123cf565b9050612088816040805190810160405280600181526020017f7c000000000000000000000000000000000000000000000000000000000000008152506123cf565b9050612145816121408473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016120e490612fb3565b600060405180830381600087803b1580156120fe57600080fd5b505af1158015612112573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061213b9190810190612901565b612376565b6123cf565b9050612186816040805190810160405280600181526020017f7c000000000000000000000000000000000000000000000000000000000000008152506123cf565b90506122438161223e8473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016121e290612f29565b600060405180830381600087803b1580156121fc57600080fd5b505af1158015612210573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506122399190810190612901565b612376565b6123cf565b9050612284816040805190810160405280600181526020017f7c000000000000000000000000000000000000000000000000000000000000008152506123cf565b90506123418161233c8473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016122e090612e9f565b600060405180830381600087803b1580156122fa57600080fd5b505af115801561230e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506123379190810190612901565b612376565b6123cf565b905080848481518110151561235257fe5b90602001906020020181905250826001019250611d4e565b83945050505050919050565b60606000612383836125a0565b14156123c6576040805190810160405280600181526020017f200000000000000000000000000000000000000000000000000000000000000081525090506123ca565b8190505b919050565b606080606080606060008088955087945084518651016040519080825280601f01601f1916602001820160405280156124175781602001602082028038833980820191505090505b50935083925060009150600090505b85518110156124d957858181518110151561243d57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561249c57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612426565b600090505b84518110156125915784818151811015156124f557fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561255457fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506124de565b83965050505050505092915050565b600081519050919050565b600082601f83011215156125be57600080fd5b81356125d16125cc826130df565b6130b2565b9150818183526020840193506020810190508360005b8381101561261757813586016125fd8882612685565b8452602084019350602083019250506001810190506125e7565b5050505092915050565b600061262d82516131d0565b905092915050565b600061264182516131e2565b905092915050565b600061265582516131f4565b905092915050565b60006126698251613206565b905092915050565b600061267d8251613218565b905092915050565b600082601f830112151561269857600080fd5b81356126ab6126a682613107565b6130b2565b915080825260208301602083018583830111156126c757600080fd5b6126d2838284613246565b50505092915050565b600082601f83011215156126ee57600080fd5b81356127016126fc82613133565b6130b2565b9150808252602083016020830185838301111561271d57600080fd5b612728838284613246565b50505092915050565b600082601f830112151561274457600080fd5b815161275761275282613133565b6130b2565b9150808252602083016020830185838301111561277357600080fd5b61277e838284613255565b50505092915050565b6000806040838503121561279a57600080fd5b600083013567ffffffffffffffff8111156127b457600080fd5b6127c0858286016125ab565b925050602083013567ffffffffffffffff8111156127dd57600080fd5b6127e9858286016126db565b9150509250929050565b60006020828403121561280557600080fd5b600061281384828501612621565b91505092915050565b60006020828403121561282e57600080fd5b600061283c84828501612635565b91505092915050565b60006020828403121561285757600080fd5b600061286584828501612649565b91505092915050565b60006020828403121561288057600080fd5b600061288e8482850161265d565b91505092915050565b6000602082840312156128a957600080fd5b60006128b784828501612671565b91505092915050565b6000602082840312156128d257600080fd5b600082013567ffffffffffffffff8111156128ec57600080fd5b6128f8848285016126db565b91505092915050565b60006020828403121561291357600080fd5b600082015167ffffffffffffffff81111561292d57600080fd5b61293984828501612731565b91505092915050565b60008060006060848603121561295757600080fd5b600084013567ffffffffffffffff81111561297157600080fd5b61297d868287016126db565b935050602084013567ffffffffffffffff81111561299a57600080fd5b6129a6868287016126db565b925050604084013567ffffffffffffffff8111156129c357600080fd5b6129cf868287016126db565b9150509250925092565b60006129e48261316c565b808452602084019350836020820285016129fd8561315f565b60005b84811015612a36578383038852612a18838351612ab9565b9250612a238261318d565b9150602088019750600181019050612a00565b508196508694505050505092915050565b612a50816131ba565b82525050565b612a5f81613222565b82525050565b612a6e81613234565b82525050565b612a7d816131c6565b82525050565b6000612a8e82613182565b808452612aa2816020860160208601613255565b612aab81613288565b602085010191505092915050565b6000612ac482613177565b808452612ad8816020860160208601613255565b612ae181613288565b602085010191505092915050565b6000600d82527f686173685f66756e6374696f6e000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f6578745f6a736f6e0000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600682527f6669785f696400000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f757064617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f637265617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000601082527f646174615f7265736f757263655f6964000000000000000000000000000000006020830152604082019050919050565b6000601182527f7570646174654861736846756e74696f6e0000000000000000000000000000006020830152604082019050919050565b6000602082019050612c856000830184612a47565b92915050565b6000602082019050612ca06000830184612a74565b92915050565b600060408201905061","2cbb6000830185612a74565b8181036020830152612ccd81846129d9565b90509392505050565b6000606082019050612ceb6000830186612a74565b8181036020830152612cfd81856129d9565b90508181036040830152612d118184612a83565b9050949350505050565b6000608082019050612d306000830187612a74565b8181036020830152612d428186612a83565b90508181036040830152612d568185612a83565b90508181036060830152612d6a8184612a83565b905095945050505050565b60006020820190508181036000830152612d8f8184612ab9565b905092915050565b60006040820190508181036000830152612db18185612ab9565b9050612dc06020830184612a56565b9392505050565b60006040820190508181036000830152612de18185612ab9565b9050612df06020830184612a65565b9392505050565b60006060820190508181036000830152612e118186612ab9565b9050612e206020830185612a65565b612e2d6040830184612a56565b949350505050565b60006040820190508181036000830152612e4e81612aef565b90508181036020830152612e628184612ab9565b905092915050565b60006040820190508181036000830152612e8381612aef565b90508181036020830152612e978184612a83565b905092915050565b60006020820190508181036000830152612eb881612b26565b9050919050565b60006040820190508181036000830152612ed881612b26565b90508181036020830152612eec8184612a83565b905092915050565b60006040820190508181036000830152612f0d81612b5d565b90508181036020830152612f218184612ab9565b905092915050565b60006020820190508181036000830152612f4281612b94565b9050919050565b60006040820190508181036000830152612f6281612b94565b90508181036020830152612f768184612ab9565b905092915050565b60006040820190508181036000830152612f9781612b94565b90508181036020830152612fab8184612a83565b905092915050565b60006020820190508181036000830152612fcc81612bcb565b9050919050565b60006040820190508181036000830152612fec81612bcb565b905081810360208301526130008184612ab9565b905092915050565b6000602082019050818103600083015261302181612c02565b9050919050565b6000604082019050818103600083015261304181612c02565b905081810360208301526130558184612ab9565b905092915050565b6000604082019050818103600083015261307681612c02565b9050818103602083015261308a8184612a83565b905092915050565b600060208201905081810360008301526130ab81612c39565b9050919050565b6000604051905081810181811067ffffffffffffffff821117156130d557600080fd5b8060405250919050565b600067ffffffffffffffff8211156130f657600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561311e57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561314a57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b60006131db8261319a565b9050919050565b60006131ed8261319a565b9050919050565b60006131ff8261319a565b9050919050565b60006132118261319a565b9050919050565b6000819050919050565b600061322d8261319a565b9050919050565b600061323f8261319a565b9050919050565b82818337600083830152505050565b60005b83811015613273578082015181840152602081019050613258565b83811115613282576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a723058201487c289ceedaaa5362cfae36fa197ab3e75fc8d6211261d2730be39d2db1fed6c6578706572696d656e74616cf50037"};

    public static final String BINARY = String.join("", BINARY_ARRAY);

    public static final String[] SM_BINARY_ARRAY = {"60806040523480156200001157600080fd5b506110016000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c92a78016040805190810160405280600c81526020017f626c6f6f6d5f66696c74657200000000000000000000000000000000000000008152506040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162000101919062000296565b602060405180830381600087803b1580156200011c57600080fd5b505af115801562000131573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062000157919081019062000174565b5062000340565b60006200016c8251620002ef565b905092915050565b6000602082840312156200018757600080fd5b600062000197848285016200015e565b91505092915050565b6000620001ad82620002e4565b808452620001c3816020860160208601620002f9565b620001ce816200032f565b602085010191505092915050565b6000604182527f646174615f7265736f757263655f69642c686173685f66756e6374696f6e2c6360208301527f7265617465645f74696d652c757064617465645f74696d652c6578745f6a736f60408301527f6e000000000000000000000000000000000000000000000000000000000000006060830152608082019050919050565b6000600682527f6669785f696400000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006060820190508181036000830152620002b28184620001a0565b90508181036020830152620002c7816200025f565b90508181036040830152620002dc81620001dc565b905092915050565b600081519050919050565b6000819050919050565b60005b8381101562000319578082015181840152602081019050620002fc565b8381111562000329576000848401525b50505050565b6000601f19601f8301169050919050565b6132d380620003506000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630140088c1461007257806315d0d625146100af578063568fe885146100ec5780639eb03ade14610129578063e5dc357014610166575b600080fd5b34801561007e57600080fd5b5061009960048036036100949190810190612942565b6101a4565b6040516100a69190612c8b565b60405180910390f35b3480156100bb57600080fd5b506100d660048036036100d19190810190612942565b6107e5565b6040516100e39190612c8b565b60405180910390f35b3480156100f857600080fd5b50610113600480360361010e91908101906128c0565b610d27565b6040516101209190612c70565b60405180910390f35b34801561013557600080fd5b50610150600480360361014b9190810190612787565b6110eb565b60405161015d9190612c8b565b60405180910390f35b34801561017257600080fd5b5061018d600480360361018891908101906128c0565b61183d565b60405161019b929190612ca6565b60405180910390f35b600080600080600080600094506101ba89610d27565b1515610228577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff94507f1db165e21ad44e1f69710df8e6e711f92b7b85027f964003788f68fe2840eb1d858a8a8a6040516102189493929190612d1b565b60405180910390a18495506107d9565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280600c81526020017f626c6f6f6d5f66696c74657200000000000000000000000000000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016102d39190612d75565b602060405180830381600087803b1580156102ed57600080fd5b505af1158015610301573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610325919081019061286e565b93508373ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561038b57600080fd5b505af115801561039f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506103c391908101906127f3565b92508273ffffffffffffffffffffffffffffffffffffffff1663ae763db58a6040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161041a9190612e8a565b600060405180830381600087803b15801561043457600080fd5b505af1158015610448573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663ae763db5896040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016104a19190612ff3565b600060405180830381600087803b1580156104bb57600080fd5b505af11580156104cf573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff16635887ab246040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561053757600080fd5b505af115801561054b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061056f9190810190612845565b91508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4896040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016105c69190612ff3565b600060405180830381600087803b1580156105e057600080fd5b505af11580156105f4573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4886040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161064d9190612f14565b600060405180830381600087803b15801561066757600080fd5b505af115801561067b573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff1663664b37d66040805190810160405280600a81526020017f6669785f69645f3031310000000000000000000000000000000000000000000081525084866040518463ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161070d93929190612df7565b602060405180830381600087803b15801561072757600080fd5b505af115801561073b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061075f9190810190612897565b90506001811215156107745760009450610798565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe94505b7f1db165e21ad44e1f69710df8e6e711f92b7b85027f964003788f68fe2840eb1d858a8a8a6040516107cd9493929190612d1b565b60405180910390a18495505b50505050509392505050565b6000806000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280600c81526020017f626c6f6f6d5f66696c74657200000000000000000000000000000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016108999190612d75565b602060405180830381600087803b1580156108b357600080fd5b505af11580156108c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108eb919081019061286e565b94508473ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561095157600080fd5b505af1158015610965573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061098991908101906127f3565b93508373ffffffffffffffffffffffffffffffffffffffff1663ae763db58a6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016109e09190612e8a565b600060405180830381600087803b1580156109fa57600080fd5b505af1158015610a0e573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff16635887ab246040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610a7657600080fd5b505af1158015610a8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610aae9190810190612845565b92508273ffffffffffffffffffffffffffffffffffffffff16631a391cb4896040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610b05919061307d565b600060405180830381600087803b158015610b1f57600080fd5b505af1158015610b33573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff16631a391cb4886040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610b8c9190612f14565b600060405180830381600087803b158015610ba657600080fd5b505af1158015610bba573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff1663664b37d66040805190810160405280600a81526020017f6669785f69645f3031310000000000000000000000000000000000000000000081525085876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610c4c93929190612df7565b602060405180830381600087803b158015610c6657600080fd5b505af1158015610c7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c9e9190810190612897565b915060009050600182121515610cb75760","009050610cdb565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe90505b7fb36a4960db7128c065f905021bc6b7ab38c8106c359c6ac8dcd55ed9356c994c818a8a8a604051610d109493929190612d1b565b60405180910390a180955050505050509392505050565b6000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280600c81526020017f626c6f6f6d5f66696c74657200000000000000000000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610dd89190612d75565b602060405180830381600087803b158015610df257600080fd5b505af1158015610e06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e2a919081019061286e565b92508273ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610e9057600080fd5b505af1158015610ea4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ec891908101906127f3565b91508173ffffffffffffffffffffffffffffffffffffffff1663ae763db5866040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610f1f9190612e8a565b600060405180830381600087803b158015610f3957600080fd5b505af1158015610f4d573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663d8ac59576040805190810160405280600a81526020017f6669785f69645f30313100000000000000000000000000000000000000000000815250846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610fdd929190612d97565b602060405180830381600087803b158015610ff757600080fd5b505af115801561100b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061102f919081019061281c565b905060008173ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561109757600080fd5b505af11580156110ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506110cf9190810190612897565b11156110de57600193506110e3565b600093505b505050919050565b600080600080600080935061111787600081518110151561110857fe5b90602001906020020151610d27565b15611182577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff93507fcb263a23d186eec891d55f1e0ba96ec8290af8c893d32d644c22dbff0953e51f84888860405161117293929190612cd6565b60405180910390a1839450611833565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280600c81526020017f626c6f6f6d5f66696c74657200000000000000000000000000000000000000008152506040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161122d9190612d75565b602060405180830381600087803b15801561124757600080fd5b505af115801561125b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061127f919081019061286e565b92508273ffffffffffffffffffffffffffffffffffffffff16635887ab246040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156112e557600080fd5b505af11580156112f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061131d9190810190612845565b91508173ffffffffffffffffffffffffffffffffffffffff16631a391cb46040805190810160405280600a81526020017f6669785f69645f303131000000000000000000000000000000000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016113a99190613028565b600060405180830381600087803b1580156113c357600080fd5b505af11580156113d7573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb488600081518110151561140657fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016114489190612e55565b600060405180830381600087803b15801561146257600080fd5b505af1158015611476573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48860018151811015156114a557fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016114e79190612fbe565b600060405180830381600087803b15801561150157600080fd5b505af1158015611515573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb488600281518110151561154457fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016115869190612f69565b600060405180830381600087803b1580156115a057600080fd5b505af11580156115b4573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48860038151811015156115e357fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016116259190612edf565b600060405180830381600087803b15801561163f57600080fd5b505af1158015611653573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4876040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016116ac919061307d565b600060405180830381600087803b1580156116c657600080fd5b505af11580156116da573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff16634c6f30c06040805190810160405280600a81526020017f6669785f69645f30313100000000000000000000000000000000000000000000815250846040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161176a929190612dc7565b602060405180830381600087803b15801561178457600080fd5b505af1158015611798573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117bc9190810190612897565b905060018114156117d057600093506117f4565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7fcb263a23d186eec891d55f1e0ba96ec8290af8c893d32d644c22dbff0953e51f84888860405161182793929190612cd6565b60405180910390a18394505b5050505092915050565b6000606060008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280600c81526020017f626c6f6f6d5f66696c74657200000000000000000000000000000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016118f19190612d75565b602060405180830381600087803b15801561190b57600080fd5b505af115801561191f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611943919081019061286e565b92508273ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156119a957600080fd5b505af11580156119bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506119e191908101906127f3565b91508173ffffffffffffffffffffffffffffffffffffffff1663ae763db5876040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611a389190612e8a565b600060405180830381600087803b158015611a5257600080fd5b505af1158015611a66573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663d8ac59576040805190810160405280600a81526020017f6669785f69645f30313100000000000000000000000000000000000000000000815250846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611af6929190612d97565b602060405180830381600087803b158015611b1057600080fd5b505af1158015611b24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611b48919081019061281c565b90508073ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611bae57600080fd5b505af1158015611bc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611be69190810190612897565b60001415611c54577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd6000604051908082528060200260200182016040528015611c4457816020015b6060815260200190600190039081611c2f5790505b5081915080905094509450611c67565b6000611c5f82611c6f565b819150945094505b505050915091565b60608060008060608573ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000","","2cbb6000830185612a74565b8181036020830152612ccd81846129d9565b90509392505050565b6000606082019050612ceb6000830186612a74565b8181036020830152612cfd81856129d9565b90508181036040830152612d118184612a83565b9050949350505050565b6000608082019050612d306000830187612a74565b8181036020830152612d428186612a83565b90508181036040830152612d568185612a83565b90508181036060830152612d6a8184612a83565b905095945050505050565b60006020820190508181036000830152612d8f8184612ab9565b905092915050565b60006040820190508181036000830152612db18185612ab9565b9050612dc06020830184612a56565b9392505050565b60006040820190508181036000830152612de18185612ab9565b9050612df06020830184612a65565b9392505050565b60006060820190508181036000830152612e118186612ab9565b9050612e206020830185612a65565b612e2d6040830184612a56565b949350505050565b60006020820190508181036000830152612e4e81612aef565b9050919050565b60006040820190508181036000830152612e6e81612aef565b90508181036020830152612e828184612ab9565b905092915050565b60006040820190508181036000830152612ea381612aef565b90508181036020830152612eb78184612a83565b905092915050565b60006020820190508181036000830152612ed881612b26565b9050919050565b60006040820190508181036000830152612ef881612b26565b90508181036020830152612f0c8184612ab9565b905092915050565b60006040820190508181036000830152612f2d81612b26565b90508181036020830152612f418184612a83565b905092915050565b60006020820190508181036000830152612f6281612b5d565b9050919050565b60006040820190508181036000830152612f8281612b5d565b90508181036020830152612f968184612ab9565b905092915050565b60006020820190508181036000830152612fb781612b94565b9050919050565b60006040820190508181036000830152612fd781612bcb565b90508181036020830152612feb8184612ab9565b905092915050565b6000604082019050818103600083015261300c81612bcb565b905081810360208301526130208184612a83565b905092915050565b6000604082019050818103600083015261304181612c02565b905081810360208301526130558184612ab9565b905092915050565b6000602082019050818103600083015261307681612c39565b9050919050565b6000604082019050818103600083015261309681612c39565b905081810360208301526130aa8184612a83565b905092915050565b6000604051905081810181811067ffffffffffffffff821117156130d557600080fd5b8060405250919050565b600067ffffffffffffffff8211156130f657600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561311e57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561314a57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b60006131db8261319a565b9050919050565b60006131ed8261319a565b9050919050565b60006131ff8261319a565b9050919050565b60006132118261319a565b9050919050565b6000819050919050565b600061322d8261319a565b9050919050565b600061323f8261319a565b9050919050565b82818337600083830152505050565b60005b83811015613273578082015181840152602081019050613258565b83811115613282576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a72305820fee0f962f48d29791e6cfda39da03cfd4dfe49dfa3c057ae7399a3b18f74e6af6c6578706572696d656e74616cf50037"};

    public static final String SM_BINARY = String.join("", SM_BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"constant\":true,\"inputs\":[{\"name\":\"data_resource_id\",\"type\":\"string\"}],\"name\":\"selectById\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"data_resource_id\",\"type\":\"string\"}],\"name\":\"isExist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"data_resource_id\",\"type\":\"string\"},{\"name\":\"ext_json\",\"type\":\"string\"},{\"name\":\"updated_time\",\"type\":\"string\"}],\"name\":\"updateExtJson\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"data_resource_id\",\"type\":\"string\"},{\"name\":\"hash_function\",\"type\":\"string\"},{\"name\":\"updated_time\",\"type\":\"string\"}],\"name\":\"updateHashFuntion\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"params\",\"type\":\"string[]\"},{\"name\":\"ext_json\",\"type\":\"string\"}],\"name\":\"insert\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"params\",\"type\":\"string[]\"},{\"indexed\":false,\"name\":\"ext_json\",\"type\":\"string\"}],\"name\":\"insertEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"data_resource_id\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"hash_function\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"updated_time\",\"type\":\"string\"}],\"name\":\"updateHashFunctionEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"data_resource_id\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"ext_json\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"updated_time\",\"type\":\"string\"}],\"name\":\"updateExtJsonEvent\",\"type\":\"event\"}]"};

    public static final String ABI = String.join("", ABI_ARRAY);

    public static final String FUNC_SELECTBYID = "selectById";

    public static final String FUNC_ISEXIST = "isExist";

    public static final String FUNC_UPDATEEXTJSON = "updateExtJson";

    public static final String FUNC_UPDATEHASHFUNTION = "updateHashFuntion";

    public static final String FUNC_INSERT = "insert";

    public static final Event INSERTEVENT_EVENT = new Event("insertEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event UPDATEHASHFUNCTIONEVENT_EVENT = new Event("updateHashFunctionEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event UPDATEEXTJSONEVENT_EVENT = new Event("updateExtJsonEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
    ;

    protected BloomFilterContract(String contractAddress, Client client, CryptoKeyPair credential) {
        super(getBinary(client.getCryptoSuite()), contractAddress, client, credential);
    }

    public static String getBinary(CryptoSuite cryptoSuite) {
        return (cryptoSuite.getCryptoTypeConfig() == CryptoType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public Tuple2<BigInteger, List<String>> selectById(String data_resource_id) throws ContractException {
        final Function function = new Function(FUNC_SELECTBYID, 
                Arrays.<Type>asList(new Utf8String(data_resource_id)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<DynamicArray<Utf8String>>() {}));
        List<Type> results = executeCallWithMultipleValueReturn(function);
        return new Tuple2<BigInteger, List<String>>(
                (BigInteger) results.get(0).getValue(), 
                convertToNative((List<Utf8String>) results.get(1).getValue()));
    }

    public Boolean isExist(String data_resource_id) throws ContractException {
        final Function function = new Function(FUNC_ISEXIST, 
                Arrays.<Type>asList(new Utf8String(data_resource_id)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeCallWithSingleValueReturn(function, Boolean.class);
    }

    public TransactionReceipt updateExtJson(String data_resource_id, String ext_json, String updated_time) {
        final Function function = new Function(
                FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(new Utf8String(data_resource_id),
                new Utf8String(ext_json),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void updateExtJson(String data_resource_id, String ext_json, String updated_time, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(new Utf8String(data_resource_id),
                new Utf8String(ext_json),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForUpdateExtJson(String data_resource_id, String ext_json, String updated_time) {
        final Function function = new Function(
                FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(new Utf8String(data_resource_id),
                new Utf8String(ext_json),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<String, String, String> getUpdateExtJsonInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<String, String, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (String) results.get(2).getValue()
                );
    }

    public Tuple1<BigInteger> getUpdateExtJsonOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public TransactionReceipt updateHashFuntion(String data_resource_id, String hash_function, String updated_time) {
        final Function function = new Function(
                FUNC_UPDATEHASHFUNTION, 
                Arrays.<Type>asList(new Utf8String(data_resource_id),
                new Utf8String(hash_function),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void updateHashFuntion(String data_resource_id, String hash_function, String updated_time, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UPDATEHASHFUNTION, 
                Arrays.<Type>asList(new Utf8String(data_resource_id),
                new Utf8String(hash_function),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForUpdateHashFuntion(String data_resource_id, String hash_function, String updated_time) {
        final Function function = new Function(
                FUNC_UPDATEHASHFUNTION, 
                Arrays.<Type>asList(new Utf8String(data_resource_id),
                new Utf8String(hash_function),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<String, String, String> getUpdateHashFuntionInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_UPDATEHASHFUNTION, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<String, String, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (String) results.get(2).getValue()
                );
    }

    public Tuple1<BigInteger> getUpdateHashFuntionOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_UPDATEHASHFUNTION, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public TransactionReceipt insert(List<String> params, String ext_json) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(params.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(params, Utf8String.class)),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void insert(List<String> params, String ext_json, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(params.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(params, Utf8String.class)),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForInsert(List<String> params, String ext_json) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(params.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(params, Utf8String.class)),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<List<String>, String> getInsertInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_INSERT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<List<String>, String>(

                convertToNative((List<Utf8String>) results.get(0).getValue()), 
                (String) results.get(1).getValue()
                );
    }

    public Tuple1<BigInteger> getInsertOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_INSERT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public List<InsertEventEventResponse> getInsertEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(INSERTEVENT_EVENT, transactionReceipt);
        ArrayList<InsertEventEventResponse> responses = new ArrayList<InsertEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            InsertEventEventResponse typedResponse = new InsertEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.params = (List<String>) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.ext_json = (String) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeInsertEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeInsertEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<UpdateHashFunctionEventEventResponse> getUpdateHashFunctionEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(UPDATEHASHFUNCTIONEVENT_EVENT, transactionReceipt);
        ArrayList<UpdateHashFunctionEventEventResponse> responses = new ArrayList<UpdateHashFunctionEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            UpdateHashFunctionEventEventResponse typedResponse = new UpdateHashFunctionEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.data_resource_id = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.hash_function = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.updated_time = (String) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeUpdateHashFunctionEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEHASHFUNCTIONEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeUpdateHashFunctionEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEHASHFUNCTIONEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<UpdateExtJsonEventEventResponse> getUpdateExtJsonEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(UPDATEEXTJSONEVENT_EVENT, transactionReceipt);
        ArrayList<UpdateExtJsonEventEventResponse> responses = new ArrayList<UpdateExtJsonEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            UpdateExtJsonEventEventResponse typedResponse = new UpdateExtJsonEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.data_resource_id = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.ext_json = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.updated_time = (String) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeUpdateExtJsonEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEXTJSONEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeUpdateExtJsonEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEXTJSONEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public static BloomFilterContract load(String contractAddress, Client client, CryptoKeyPair credential) {
        return new BloomFilterContract(contractAddress, client, credential);
    }

    public static BloomFilterContract deploy(Client client, CryptoKeyPair credential) throws ContractException {
        return deploy(BloomFilterContract.class, client, credential, getBinary(client.getCryptoSuite()), "");
    }

    public static class InsertEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public List<String> params;

        public String ext_json;
    }

    public static class UpdateHashFunctionEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public String data_resource_id;

        public String hash_function;

        public String updated_time;
    }

    public static class UpdateExtJsonEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public String data_resource_id;

        public String ext_json;

        public String updated_time;
    }
}
