package com.welab.wefe.union.service.contract;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.fisco.bcos.sdk.abi.FunctionReturnDecoder;
import org.fisco.bcos.sdk.abi.TypeReference;
import org.fisco.bcos.sdk.abi.datatypes.Bool;
import org.fisco.bcos.sdk.abi.datatypes.DynamicArray;
import org.fisco.bcos.sdk.abi.datatypes.Event;
import org.fisco.bcos.sdk.abi.datatypes.Function;
import org.fisco.bcos.sdk.abi.datatypes.Type;
import org.fisco.bcos.sdk.abi.datatypes.Utf8String;
import org.fisco.bcos.sdk.abi.datatypes.generated.Int256;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple1;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple2;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple3;
import org.fisco.bcos.sdk.client.Client;
import org.fisco.bcos.sdk.contract.Contract;
import org.fisco.bcos.sdk.crypto.CryptoSuite;
import org.fisco.bcos.sdk.crypto.keypair.CryptoKeyPair;
import org.fisco.bcos.sdk.eventsub.EventCallback;
import org.fisco.bcos.sdk.model.CryptoType;
import org.fisco.bcos.sdk.model.TransactionReceipt;
import org.fisco.bcos.sdk.model.callback.TransactionCallback;
import org.fisco.bcos.sdk.transaction.model.exception.ContractException;

@SuppressWarnings("unchecked")
public class MemberServiceContract extends Contract {
    public static final String[] BINARY_ARRAY = {"","803b158015610c9757600080fd5b505af1158015610cab573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff1663bf2b70a16040805190810160405280600e81526020017f6d656d6265725f7365727669636500000000000000000000000000000000000081525084866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610d3d93929190614399565b602060405180830381600087803b158015610d5757600080fd5b505af1158015610d6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610d8f9190810190613c3c565b9050600181121515610da45760009450610dc8565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe94505b7fe51e5a2c44f24c199548148fdf95a942915d28d8fe38f362720cc6b0557cc51d858a8a8a604051610dfd9493929190614263565b60405180910390a18495505b50505050509392505050565b6000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280600e81526020017f6d656d6265725f736572766963650000000000000000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610ec69190614317565b602060405180830381600087803b158015610ee057600080fd5b505af1158015610ef4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610f189190810190613c13565b92508273ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610f7e57600080fd5b505af1158015610f92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610fb69190810190613b98565b91508173ffffffffffffffffffffffffffffffffffffffff1663cd30a1d1866040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161100d919061463f565b600060405180830381600087803b15801561102757600080fd5b505af115801561103b573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663e8434e396040805190810160405280600e81526020017f6d656d6265725f73657276696365000000000000000000000000000000000000815250846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016110cb929190614339565b602060405180830381600087803b1580156110e557600080fd5b505af11580156110f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061111d9190810190613bc1565b905060008173ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561118557600080fd5b505af1158015611199573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111bd9190810190613c3c565b11156111cc57600193506111d1565b600093505b505050919050565b60008060008060008093506111ed86610e15565b1515611234577fe89d52ddffaaf8dd329551e54d44e2f67cf22dc874d83fe8e27c069fd41ae1cb8487604051611224929190614233565b60405180910390a18394506115ac565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280600e81526020017f6d656d6265725f736572766963650000000000000000000000000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016112df9190614317565b602060405180830381600087803b1580156112f957600080fd5b505af115801561130d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113319190810190613c13565b92508273ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561139757600080fd5b505af11580156113ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113cf9190810190613b98565b91508173ffffffffffffffffffffffffffffffffffffffff1663cd30a1d1876040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611426919061463f565b600060405180830381600087803b15801561144057600080fd5b505af1158015611454573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff166328bb21176040805190810160405280600e81526020017f6d656d6265725f73657276696365000000000000000000000000000000000000815250846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016114e4929190614339565b602060405180830381600087803b1580156114fe57600080fd5b505af1158015611512573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506115369190810190613c3c565b905060018112151561154b576000935061156f565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7fe89d52ddffaaf8dd329551e54d44e2f67cf22dc874d83fe8e27c069fd41ae1cb84876040516115a0929190614233565b60405180910390a18394505b50505050919050565b6000806000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280600e81526020017f6d656d6265725f736572766963650000000000000000000000000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016116699190614317565b602060405180830381600087803b15801561168357600080fd5b505af1158015611697573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506116bb9190810190613c13565b94508473ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561172157600080fd5b505af1158015611735573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117599190810190613b98565b93508373ffffffffffffffffffffffffffffffffffffffff1663cd30a1d18a6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016117b0919061463f565b600060405180830381600087803b1580156117ca57600080fd5b505af11580156117de573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff166313db93466040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561184657600080fd5b505af115801561185a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061187e9190810190613bea565b92508273ffffffffffffffffffffffffffffffffffffffff1663e942b516896040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016118d591906144a1565b600060405180830381600087803b1580156118ef57600080fd5b505af1158015611903573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663e942b516886040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161195c91906145b5565b600060405180830381600087803b15801561197657600080fd5b505af115801561198a573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff1663bf2b70a16040805190810160405280600e81526020017f6d656d6265725f7365727669636500000000000000000000000000000000000081525085876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611a1c93929190614399565b602060405180830381600087803b158015611a3657600080fd5b505af1158015611a4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611a6e9190810190613c3c565b915060009050600182121515611a875760009050611aab565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe90505b7f91fa9d6109b9b8b47733f98f4b6858346683ebdf73ba3c2f98b90c0d352f83e1818a8a8a604051611ae094939291906142bd565b60405180910390a180955050505050509392505050565b6000806000806000809350611b23876000815181101515611b1457fe5b90602001906020020151610e15565b15611b8e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff93507f5157dc1ab0b55c7621be94a34b2ae4228f7d16e8271628060cc027b1a513b12f848888604051611b7e939291906141ee565b60405180910390a183945061255a565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280600e81526020017f6d656d6265725f736572766963650000000000000000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611c399190614317565b602060405180830381600087803b158015611c5357600080fd5b505af1158015611c67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611c8b9190810190613c13","565b92508273ffffffffffffffffffffffffffffffffffffffff166313db93466040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611cf157600080fd5b505af1158015611d05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611d299190810190613bea565b91508173ffffffffffffffffffffffffffffffffffffffff1663e942b5166040805190810160405280600e81526020017f6d656d6265725f736572766963650000000000000000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611db5919061452b565b600060405180830381600087803b158015611dcf57600080fd5b505af1158015611de3573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b516886000815181101515611e1257fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611e54919061460a565b600060405180830381600087803b158015611e6e57600080fd5b505af1158015611e82573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b516886001815181101515611eb157fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611ef391906143f7565b600060405180830381600087803b158015611f0d57600080fd5b505af1158015611f21573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b516886002815181101515611f5057fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611f92919061444c565b600060405180830381600087803b158015611fac57600080fd5b505af1158015611fc0573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b516886003815181101515611fef57fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016120319190614694565b600060405180830381600087803b15801561204b57600080fd5b505af115801561205f573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b51688600481518110151561208e57fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016120d091906144f6565b600060405180830381600087803b1580156120ea57600080fd5b505af11580156120fe573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b51688600581518110151561212d57fe5b906020019060200201516040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161216f919061473e565b600060405180830381600087803b15801561218957600080fd5b505af115801561219d573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b5168860068151811015156121cc57fe5b906020019060200201516040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161220e9190614793565b600060405180830381600087803b15801561222857600080fd5b505af115801561223c573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b51688600781518110151561226b57fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016122ad91906146e9565b600060405180830381600087803b1580156122c757600080fd5b505af11580156122db573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b51688600881518110151561230a57fe5b906020019060200201516040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161234c9190614580565b600060405180830381600087803b15801561236657600080fd5b505af115801561237a573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b516876040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016123d391906144a1565b600060405180830381600087803b1580156123ed57600080fd5b505af1158015612401573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff166331afac366040805190810160405280600e81526020017f6d656d6265725f73657276696365000000000000000000000000000000000000815250846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612491929190614369565b602060405180830381600087803b1580156124ab57600080fd5b505af11580156124bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506124e39190810190613c3c565b905060018114156124f7576000935061251b565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7f5157dc1ab0b55c7621be94a34b2ae4228f7d16e8271628060cc027b1a513b12f84888860405161254e939291906141ee565b60405180910390a18394505b5050505092915050565b6000806000806000806000945061257a89610e15565b15156125e8577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd94507fea5ac348fc639d2f71660d1d6f2665aa0669b45188442687492dcd252177f693858a8a8a6040516125d894939291906142bd565b60405180910390a1849550612b12565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280600e81526020017f6d656d6265725f736572766963650000000000000000000000000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016126939190614317565b602060405180830381600087803b1580156126ad57600080fd5b505af11580156126c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506126e59190810190613c13565b93508373ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561274b57600080fd5b505af115801561275f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506127839190810190613b98565b92508273ffffffffffffffffffffffffffffffffffffffff1663cd30a1d18a6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016127da919061463f565b600060405180830381600087803b1580156127f457600080fd5b505af1158015612808573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff166313db93466040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561287057600080fd5b505af1158015612884573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506128a89190810190613bea565b91508173ffffffffffffffffffffffffffffffffffffffff1663e942b516896040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016128ff91906147c8565b600060405180830381600087803b15801561291957600080fd5b505af115801561292d573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b516886040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161298691906145b5565b600060405180830381600087803b1580156129a057600080fd5b505af11580156129b4573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff1663bf2b70a16040805190810160405280600e81526020017f6d656d6265725f7365727669636500000000000000000000000000000000000081525084866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612a4693929190614399565b602060405180830381600087803b158015612a6057600080fd5b505af1158015612a74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612a989190810190613c3c565b9050600181121515612aad5760009450612ad1565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe94505b7fea5ac348fc639d2f71660d1d6f2665aa0669b45188442687492dcd252177f693858a8a8a604051612b0694939291906142bd565b60405180910390a18495505b50505050509392505050565b60608060008060608573ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612b8a57600080fd5b505af1158015612b9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612bc29190810190613c3c565b604051908082528060200260200182016040528015612bf557816020015b6060815260200190600190039081612be05790505b509350600092505b8573ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612c6157600080fd5b505af1158015612c75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060","405250612c999190810190613c3c565b83121561370f578573ffffffffffffffffffffffffffffffffffffffff1663846719e0846040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612cf591906141a3565b602060405180830381600087803b158015612d0f57600080fd5b505af1158015612d23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612d479190810190613bea565b9150612e39612dfe8373ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612da2906145ea565b600060405180830381600087803b158015612dbc57600080fd5b505af1158015612dd0573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250612df99190810190613ca6565b61371b565b6040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250613774565b9050612ef681612ef18473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612e95906143d7565b600060405180830381600087803b158015612eaf57600080fd5b505af1158015612ec3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250612eec9190810190613ca6565b61371b565b613774565b9050612f37816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250613774565b9050612ff481612fef8473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612f939061442c565b600060405180830381600087803b158015612fad57600080fd5b505af1158015612fc1573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250612fea9190810190613ca6565b61371b565b613774565b9050613035816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250613774565b90506130f2816130ed8473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161309190614674565b600060405180830381600087803b1580156130ab57600080fd5b505af11580156130bf573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506130e89190810190613ca6565b61371b565b613774565b9050613133816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250613774565b90506131f0816131eb8473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161318f906144d6565b600060405180830381600087803b1580156131a957600080fd5b505af11580156131bd573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506131e69190810190613ca6565b61371b565b613774565b9050613231816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250613774565b90506132ee816132e98473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161328d9061471e565b600060405180830381600087803b1580156132a757600080fd5b505af11580156132bb573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506132e49190810190613ca6565b61371b565b613774565b905061332f816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250613774565b90506133ec816133e78473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161338b90614773565b600060405180830381600087803b1580156133a557600080fd5b505af11580156133b9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506133e29190810190613ca6565b61371b565b613774565b905061342d816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250613774565b90506134ea816134e58473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401613489906146c9565b600060405180830381600087803b1580156134a357600080fd5b505af11580156134b7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506134e09190810190613ca6565b61371b565b613774565b905061352b816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250613774565b90506135e8816135e38473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161358790614560565b600060405180830381600087803b1580156135a157600080fd5b505af11580156135b5573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506135de9190810190613ca6565b61371b565b613774565b9050613629816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250613774565b90506136e6816136e18473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161368590614481565b600060405180830381600087803b15801561369f57600080fd5b505af11580156136b3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506136dc9190810190613ca6565b61371b565b613774565b90508084848151811015156136f757fe5b90602001906020020181905250826001019250612bfd565b83945050505050919050565b6060600061372883613945565b141561376b576040805190810160405280600181526020017f2000000000000000000000000000000000000000000000000000000000000000815250905061376f565b8190505b919050565b606080606080606060008088955087945084518651016040519080825280601f01601f1916602001820160405280156137bc5781602001602082028038833980820191505090505b50935083925060009150600090505b855181101561387e5785818151811015156137e257fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561384157fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506137cb565b600090505b845181101561393657848181518110151561389a57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156138f957fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613883565b83965050505050505092915050565b600081519050919050565b600082601f830112151561396357600080fd5b81356139766139718261482a565b6147fd565b9150818183526020840193506020810190508360005b838110156139bc57813586016139a28882613a2a565b84526020840193506020830192505060018101905061398c565b5050505092915050565b60006139d2825161491b565b905092915050565b60006139e6825161492d565b905092915050565b60006139fa825161493f565b905092915050565b6000613a0e8251614951565b905092915050565b6000613a228251614963565b905092915050565b600082601f8301121515613a3d57600080fd5b8135613a50613a4b82614852565b6147fd565b91508082526020830160208301858383011115613a6c57600080fd5b613a77838284614991565b50505092915050565b600082601f8301121515613a9357600080fd5b8135613aa6613aa18261487e565b6147fd565b91508082526020830160208301858383011115613ac257600080fd5b613acd838284614991565b50505092915050565b600082601f8301121515613ae957600080fd5b8151613afc613af78261487e565b6147fd565b91508082526020830160208301858383011115613b1857600080fd5b613b238382846149a0565b50505092915050565b60008060408385031215613b3f57600080fd5b600083013567ffffffffffffffff811115613b5957600080fd5b613b6585828601613950565b925050602083013567ffffffffffffffff811115613b8257600080fd5b613b8e85828601613a80565b9150509250929050565b600060208284031215613baa57600080fd5b6000613bb8848285016139c6565b91505092915050565b600060208284031215613bd357600080fd5b6000613be1848285016139da565b91505092915050565b600060208284031215613bfc57600080fd5b6000613c0a848285016139ee565b91505092915050565b600060208284031215613c2557600080fd5b6000613c3384828501613a02565b91505092915050565b600060208284031215613c4e57600080fd5b6000613c5c84828501613a16565b91505092915050565b600060208284031215613c7757600080fd5b600082013567ffffffffffffffff81111561","3c9157600080fd5b613c9d84828501613a80565b91505092915050565b600060208284031215613cb857600080fd5b600082015167ffffffffffffffff811115613cd257600080fd5b613cde84828501613ad6565b91505092915050565b600080600060608486031215613cfc57600080fd5b600084013567ffffffffffffffff811115613d1657600080fd5b613d2286828701613a80565b935050602084013567ffffffffffffffff811115613d3f57600080fd5b613d4b86828701613950565b925050604084013567ffffffffffffffff811115613d6857600080fd5b613d7486828701613a80565b9150509250925092565b600080600060608486031215613d9357600080fd5b600084013567ffffffffffffffff811115613dad57600080fd5b613db986828701613a80565b935050602084013567ffffffffffffffff811115613dd657600080fd5b613de286828701613a80565b925050604084013567ffffffffffffffff811115613dff57600080fd5b613e0b86828701613a80565b9150509250925092565b6000613e20826148b7565b80845260208401935083602082028501613e39856148aa565b60005b84811015613e72578383038852613e54838351613ef5565b9250613e5f826148d8565b9150602088019750600181019050613e3c565b508196508694505050505092915050565b613e8c81614905565b82525050565b613e9b8161496d565b82525050565b613eaa8161497f565b82525050565b613eb981614911565b82525050565b6000613eca826148cd565b808452613ede8160208601602086016149a0565b613ee7816149d3565b602085010191505092915050565b6000613f00826148c2565b808452613f148160208601602086016149a0565b613f1d816149d3565b602085010191505092915050565b6000600982527f6d656d6265725f696400000000000000000000000000000000000000000000006020830152604082019050919050565b6000600482527f6e616d65000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f6578745f6a736f6e0000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f736572766963655f7479706500000000000000000000000000000000000000006020830152604082019050919050565b6000600682527f6669785f696400000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f757064617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000600a82527f736572766963655f6964000000000000000000000000000000000000000000006020830152604082019050919050565b6000600382527f75726c00000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f637265617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f71756572795f706172616d7300000000000000000000000000000000000000006020830152604082019050919050565b6000600e82527f736572766963655f7374617475730000000000000000000000000000000000006020830152604082019050919050565b600060208201905061419d6000830184613e83565b92915050565b60006020820190506141b86000830184613eb0565b92915050565b60006040820190506141d36000830185613eb0565b81810360208301526141e58184613e15565b90509392505050565b60006060820190506142036000830186613eb0565b81810360208301526142158185613e15565b905081810360408301526142298184613ebf565b9050949350505050565b60006040820190506142486000830185613eb0565b818103602083015261425a8184613ebf565b90509392505050565b60006080820190506142786000830187613eb0565b818103602083015261428a8186613ebf565b9050818103604083015261429e8185613e15565b905081810360608301526142b28184613ebf565b905095945050505050565b60006080820190506142d26000830187613eb0565b81810360208301526142e48186613ebf565b905081810360408301526142f88185613ebf565b9050818103606083015261430c8184613ebf565b905095945050505050565b600060208201905081810360008301526143318184613ef5565b905092915050565b600060408201905081810360008301526143538185613ef5565b90506143626020830184613e92565b9392505050565b600060408201905081810360008301526143838185613ef5565b90506143926020830184613ea1565b9392505050565b600060608201905081810360008301526143b38186613ef5565b90506143c26020830185613ea1565b6143cf6040830184613e92565b949350505050565b600060208201905081810360008301526143f081613f2b565b9050919050565b6000604082019050818103600083015261441081613f2b565b905081810360208301526144248184613ef5565b905092915050565b6000602082019050818103600083015261444581613f62565b9050919050565b6000604082019050818103600083015261446581613f62565b905081810360208301526144798184613ef5565b905092915050565b6000602082019050818103600083015261449a81613f99565b9050919050565b600060408201905081810360008301526144ba81613f99565b905081810360208301526144ce8184613ebf565b905092915050565b600060208201905081810360008301526144ef81613fd0565b9050919050565b6000604082019050818103600083015261450f81613fd0565b905081810360208301526145238184613ef5565b905092915050565b6000604082019050818103600083015261454481614007565b905081810360208301526145588184613ef5565b905092915050565b600060208201905081810360008301526145798161403e565b9050919050565b600060408201905081810360008301526145998161403e565b905081810360208301526145ad8184613ef5565b905092915050565b600060408201905081810360008301526145ce8161403e565b905081810360208301526145e28184613ebf565b905092915050565b6000602082019050818103600083015261460381614075565b9050919050565b6000604082019050818103600083015261462381614075565b905081810360208301526146378184613ef5565b905092915050565b6000604082019050818103600083015261465881614075565b9050818103602083015261466c8184613ebf565b905092915050565b6000602082019050818103600083015261468d816140ac565b9050919050565b600060408201905081810360008301526146ad816140ac565b905081810360208301526146c18184613ef5565b905092915050565b600060208201905081810360008301526146e2816140e3565b9050919050565b60006040820190508181036000830152614702816140e3565b905081810360208301526147168184613ef5565b905092915050565b600060208201905081810360008301526147378161411a565b9050919050565b600060408201905081810360008301526147578161411a565b9050818103602083015261476b8184613ef5565b905092915050565b6000602082019050818103600083015261478c81614151565b9050919050565b600060408201905081810360008301526147ac81614151565b905081810360208301526147c08184613ef5565b905092915050565b600060408201905081810360008301526147e181614151565b905081810360208301526147f58184613ebf565b905092915050565b6000604051905081810181811067ffffffffffffffff8211171561482057600080fd5b8060405250919050565b600067ffffffffffffffff82111561484157600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561486957600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561489557600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b6000614926826148e5565b9050919050565b6000614938826148e5565b9050919050565b600061494a826148e5565b9050919050565b600061495c826148e5565b9050919050565b6000819050919050565b6000614978826148e5565b9050919050565b600061498a826148e5565b9050919050565b82818337600083830152505050565b60005b838110156149be5780820151818401526020810190506149a3565b838111156149cd576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a7230582039fb126e745cbf31c882c5a0c819d93e2e27088f72428aa8d5feab267d739ed26c6578706572696d656e74616cf50037"};

    public static final String BINARY = String.join("", BINARY_ARRAY);

    public static final String[] SM_BINARY_ARRAY = {"","90810190613c13565b92508273ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610cf857600080fd5b505af1158015610d0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610d309190810190613b98565b91508173ffffffffffffffffffffffffffffffffffffffff1663ae763db5876040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610d8791906145ea565b600060405180830381600087803b158015610da157600080fd5b505af1158015610db5573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff166309ff42f06040805190810160405280600e81526020017f6d656d6265725f73657276696365000000000000000000000000000000000000815250846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610e45929190614339565b602060405180830381600087803b158015610e5f57600080fd5b505af1158015610e73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e979190810190613c3c565b9050600181121515610eac5760009350610ed0565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7fc1307d7beca835a5b2069c6d1d23d0b7cbf2b15dbaa76ff2e03d852beda8b2b28487604051610f01929190614233565b60405180910390a18394505b50505050919050565b6000806000806000809350610f42876000815181101515610f3357fe5b90602001906020020151610776565b15610fad577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff93507fcb263a23d186eec891d55f1e0ba96ec8290af8c893d32d644c22dbff0953e51f848888604051610f9d939291906141ee565b60405180910390a1839450611979565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280600e81526020017f6d656d6265725f736572766963650000000000000000000000000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016110589190614317565b602060405180830381600087803b15801561107257600080fd5b505af1158015611086573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506110aa9190810190613c13565b92508273ffffffffffffffffffffffffffffffffffffffff16635887ab246040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561111057600080fd5b505af1158015611124573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111489190810190613bea565b91508173ffffffffffffffffffffffffffffffffffffffff16631a391cb46040805190810160405280600e81526020017f6d656d6265725f736572766963650000000000000000000000000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016111d49190614674565b600060405180830381600087803b1580156111ee57600080fd5b505af1158015611202573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb488600081518110151561123157fe5b906020019060200201516040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161127391906145b5565b600060405180830381600087803b15801561128d57600080fd5b505af11580156112a1573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48860018151811015156112d057fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611312919061450b565b600060405180830381600087803b15801561132c57600080fd5b505af1158015611340573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb488600281518110151561136f57fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016113b19190614773565b600060405180830381600087803b1580156113cb57600080fd5b505af11580156113df573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb488600381518110151561140e57fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611450919061471e565b600060405180830381600087803b15801561146a57600080fd5b505af115801561147e573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48860048151811015156114ad57fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016114ef91906146c9565b600060405180830381600087803b15801561150957600080fd5b505af115801561151d573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb488600581518110151561154c57fe5b906020019060200201516040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161158e919061463f565b600060405180830381600087803b1580156115a857600080fd5b505af11580156115bc573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48860068151811015156115eb57fe5b906020019060200201516040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161162d9190614481565b600060405180830381600087803b15801561164757600080fd5b505af115801561165b573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb488600781518110151561168a57fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016116cc9190614560565b600060405180830381600087803b1580156116e657600080fd5b505af11580156116fa573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb488600881518110151561172957fe5b906020019060200201516040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161176b91906143f7565b600060405180830381600087803b15801561178557600080fd5b505af1158015611799573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4876040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016117f291906147c8565b600060405180830381600087803b15801561180c57600080fd5b505af1158015611820573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff16634c6f30c06040805190810160405280600e81526020017f6d656d6265725f73657276696365000000000000000000000000000000000000815250846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016118b0929190614369565b602060405180830381600087803b1580156118ca57600080fd5b505af11580156118de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506119029190810190613c3c565b90506001811415611916576000935061193a565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7fcb263a23d186eec891d55f1e0ba96ec8290af8c893d32d644c22dbff0953e51f84888860405161196d939291906141ee565b60405180910390a18394505b5050505092915050565b6000806000806000806000945061199989610776565b1515611a07577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd94507f82b037505edcc3a6e33c089a334b68fc343a270b040c527e4c4baf3005639272858a8a8a6040516119f794939291906142bd565b60405180910390a1849550611f31565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280600e81526020017f6d656d6265725f736572766963650000000000000000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611ab29190614317565b602060405180830381600087803b158015611acc57600080fd5b505af1158015611ae0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611b049190810190613c13565b93508373ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611b6a57600080fd5b505af1158015611b7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611ba29190810190613b98565b92508273ffffffffffffffffffffffffffffffffffffffff1663ae763db58a6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611bf991906145ea565b600060405180830381600087803b158015611c1357600080fd5b505af1158015611c27573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff16635887ab246040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611c8f","57600080fd5b505af1158015611ca3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611cc79190810190613bea565b91508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4896040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611d1e91906144b6565b600060405180830381600087803b158015611d3857600080fd5b505af1158015611d4c573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4886040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611da5919061442c565b600060405180830381600087803b158015611dbf57600080fd5b505af1158015611dd3573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff1663664b37d66040805190810160405280600e81526020017f6d656d6265725f7365727669636500000000000000000000000000000000000081525084866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611e6593929190614399565b602060405180830381600087803b158015611e7f57600080fd5b505af1158015611e93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611eb79190810190613c3c565b9050600181121515611ecc5760009450611ef0565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe94505b7f82b037505edcc3a6e33c089a334b68fc343a270b040c527e4c4baf3005639272858a8a8a604051611f2594939291906142bd565b60405180910390a18495505b50505050509392505050565b6000606060008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280600e81526020017f6d656d6265725f736572766963650000000000000000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611ff19190614317565b602060405180830381600087803b15801561200b57600080fd5b505af115801561201f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506120439190810190613c13565b92508273ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156120a957600080fd5b505af11580156120bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506120e19190810190613b98565b91508173ffffffffffffffffffffffffffffffffffffffff1663ae763db5876040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161213891906145ea565b600060405180830381600087803b15801561215257600080fd5b505af1158015612166573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663d8ac59576040805190810160405280600e81526020017f6d656d6265725f73657276696365000000000000000000000000000000000000815250846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016121f6929190614339565b602060405180830381600087803b15801561221057600080fd5b505af1158015612224573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506122489190810190613bc1565b90508073ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156122ae57600080fd5b505af11580156122c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506122e69190810190613c3c565b60001415612354577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd600060405190808252806020026020018201604052801561234457816020015b606081526020019060019003908161232f5790505b5081915080905094509450612367565b600061235f82612b1e565b819150945094505b505050915091565b6000806000806000806000945061238589610776565b15156123f3577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd94507fbac04743e9995a1fe36455a858456c3cdad7ee2bbaea850ef809501caab4ceea858a8a8a6040516123e39493929190614263565b60405180910390a1849550612b12565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280600e81526020017f6d656d6265725f736572766963650000000000000000000000000000000000008152506040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161249e9190614317565b602060405180830381600087803b1580156124b857600080fd5b505af11580156124cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506124f09190810190613c13565b93508373ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561255657600080fd5b505af115801561256a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061258e9190810190613b98565b92508273ffffffffffffffffffffffffffffffffffffffff1663ae763db58a6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016125e591906145ea565b600060405180830381600087803b1580156125ff57600080fd5b505af1158015612613573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff16635887ab246040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561267b57600080fd5b505af115801561268f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506126b39190810190613bea565b91508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48960008151811015156126e057fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016127229190614773565b600060405180830381600087803b15801561273c57600080fd5b505af1158015612750573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb489600181518110151561277f57fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016127c1919061471e565b600060405180830381600087803b1580156127db57600080fd5b505af11580156127ef573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb489600281518110151561281e57fe5b906020019060200201516040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161286091906146c9565b600060405180830381600087803b15801561287a57600080fd5b505af115801561288e573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48960038151811015156128bd57fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016128ff919061463f565b600060405180830381600087803b15801561291957600080fd5b505af115801561292d573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4886040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612986919061442c565b600060405180830381600087803b1580156129a057600080fd5b505af11580156129b4573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff1663664b37d66040805190810160405280600e81526020017f6d656d6265725f7365727669636500000000000000000000000000000000000081525084866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612a4693929190614399565b602060405180830381600087803b158015612a6057600080fd5b505af1158015612a74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612a989190810190613c3c565b9050600181121515612aad5760009450612ad1565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe94505b7fbac04743e9995a1fe36455a858456c3cdad7ee2bbaea850ef809501caab4ceea858a8a8a604051612b069493929190614263565b60405180910390a18495505b50505050509392505050565b60608060008060608573ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612b8a57600080fd5b505af1158015612b9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612bc29190810190613c3c565b604051908082528060200260200182016040528015612bf557816020015b6060815260200190600190039081612be05790505b509350600092505b8573ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612c6157600080fd5b505af1158015612c75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060","405250612c999190810190613c3c565b83121561370f578573ffffffffffffffffffffffffffffffffffffffff16633dd2b614846040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612cf591906141a3565b602060405180830381600087803b158015612d0f57600080fd5b505af1158015612d23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612d479190810190613bea565b9150612e39612dfe8373ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612da290614595565b600060405180830381600087803b158015612dbc57600080fd5b505af1158015612dd0573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250612df99190810190613ca6565b61371b565b6040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250613774565b9050612ef681612ef18473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612e95906144eb565b600060405180830381600087803b158015612eaf57600080fd5b505af1158015612ec3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250612eec9190810190613ca6565b61371b565b613774565b9050612f37816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250613774565b9050612ff481612fef8473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612f9390614753565b600060405180830381600087803b158015612fad57600080fd5b505af1158015612fc1573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250612fea9190810190613ca6565b61371b565b613774565b9050613035816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250613774565b90506130f2816130ed8473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401613091906146fe565b600060405180830381600087803b1580156130ab57600080fd5b505af11580156130bf573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506130e89190810190613ca6565b61371b565b613774565b9050613133816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250613774565b90506131f0816131eb8473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161318f906146a9565b600060405180830381600087803b1580156131a957600080fd5b505af11580156131bd573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506131e69190810190613ca6565b61371b565b613774565b9050613231816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250613774565b90506132ee816132e98473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161328d9061461f565b600060405180830381600087803b1580156132a757600080fd5b505af11580156132bb573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506132e49190810190613ca6565b61371b565b613774565b905061332f816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250613774565b90506133ec816133e78473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161338b90614461565b600060405180830381600087803b1580156133a557600080fd5b505af11580156133b9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506133e29190810190613ca6565b61371b565b613774565b905061342d816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250613774565b90506134ea816134e58473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161348990614540565b600060405180830381600087803b1580156134a357600080fd5b505af11580156134b7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506134e09190810190613ca6565b61371b565b613774565b905061352b816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250613774565b90506135e8816135e38473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401613587906143d7565b600060405180830381600087803b1580156135a157600080fd5b505af11580156135b5573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506135de9190810190613ca6565b61371b565b613774565b9050613629816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250613774565b90506136e6816136e18473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401613685906147a8565b600060405180830381600087803b15801561369f57600080fd5b505af11580156136b3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506136dc9190810190613ca6565b61371b565b613774565b90508084848151811015156136f757fe5b90602001906020020181905250826001019250612bfd565b83945050505050919050565b6060600061372883613945565b141561376b576040805190810160405280600181526020017f2000000000000000000000000000000000000000000000000000000000000000815250905061376f565b8190505b919050565b606080606080606060008088955087945084518651016040519080825280601f01601f1916602001820160405280156137bc5781602001602082028038833980820191505090505b50935083925060009150600090505b855181101561387e5785818151811015156137e257fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561384157fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506137cb565b600090505b845181101561393657848181518110151561389a57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156138f957fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613883565b83965050505050505092915050565b600081519050919050565b600082601f830112151561396357600080fd5b81356139766139718261482a565b6147fd565b9150818183526020840193506020810190508360005b838110156139bc57813586016139a28882613a2a565b84526020840193506020830192505060018101905061398c565b5050505092915050565b60006139d2825161491b565b905092915050565b60006139e6825161492d565b905092915050565b60006139fa825161493f565b905092915050565b6000613a0e8251614951565b905092915050565b6000613a228251614963565b905092915050565b600082601f8301121515613a3d57600080fd5b8135613a50613a4b82614852565b6147fd565b91508082526020830160208301858383011115613a6c57600080fd5b613a77838284614991565b50505092915050565b600082601f8301121515613a9357600080fd5b8135613aa6613aa18261487e565b6147fd565b91508082526020830160208301858383011115613ac257600080fd5b613acd838284614991565b50505092915050565b600082601f8301121515613ae957600080fd5b8151613afc613af78261487e565b6147fd565b91508082526020830160208301858383011115613b1857600080fd5b613b238382846149a0565b50505092915050565b60008060408385031215613b3f57600080fd5b600083013567ffffffffffffffff811115613b5957600080fd5b613b6585828601613950565b925050602083013567ffffffffffffffff811115613b8257600080fd5b613b8e85828601613a80565b9150509250929050565b600060208284031215613baa57600080fd5b6000613bb8848285016139c6565b91505092915050565b600060208284031215613bd357600080fd5b6000613be1848285016139da565b91505092915050565b600060208284031215613bfc57600080fd5b6000613c0a848285016139ee565b91505092915050565b600060208284031215613c2557600080fd5b6000613c3384828501613a02565b91505092915050565b600060208284031215613c4e57600080fd5b6000613c5c84828501613a16565b91505092915050565b600060208284031215613c7757600080fd5b600082013567ffffffffffffffff81111561","3c9157600080fd5b613c9d84828501613a80565b91505092915050565b600060208284031215613cb857600080fd5b600082015167ffffffffffffffff811115613cd257600080fd5b613cde84828501613ad6565b91505092915050565b600080600060608486031215613cfc57600080fd5b600084013567ffffffffffffffff811115613d1657600080fd5b613d2286828701613a80565b935050602084013567ffffffffffffffff811115613d3f57600080fd5b613d4b86828701613950565b925050604084013567ffffffffffffffff811115613d6857600080fd5b613d7486828701613a80565b9150509250925092565b600080600060608486031215613d9357600080fd5b600084013567ffffffffffffffff811115613dad57600080fd5b613db986828701613a80565b935050602084013567ffffffffffffffff811115613dd657600080fd5b613de286828701613a80565b925050604084013567ffffffffffffffff811115613dff57600080fd5b613e0b86828701613a80565b9150509250925092565b6000613e20826148b7565b80845260208401935083602082028501613e39856148aa565b60005b84811015613e72578383038852613e54838351613ef5565b9250613e5f826148d8565b9150602088019750600181019050613e3c565b508196508694505050505092915050565b613e8c81614905565b82525050565b613e9b8161496d565b82525050565b613eaa8161497f565b82525050565b613eb981614911565b82525050565b6000613eca826148cd565b808452613ede8160208601602086016149a0565b613ee7816149d3565b602085010191505092915050565b6000613f00826148c2565b808452613f148160208601602086016149a0565b613f1d816149d3565b602085010191505092915050565b6000600c82527f757064617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000600e82527f736572766963655f7374617475730000000000000000000000000000000000006020830152604082019050919050565b6000600982527f6d656d6265725f696400000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f637265617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000600a82527f736572766963655f6964000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f71756572795f706172616d7300000000000000000000000000000000000000006020830152604082019050919050565b6000600682527f6669785f696400000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f736572766963655f7479706500000000000000000000000000000000000000006020830152604082019050919050565b6000600382527f75726c00000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600482527f6e616d65000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f6578745f6a736f6e0000000000000000000000000000000000000000000000006020830152604082019050919050565b600060208201905061419d6000830184613e83565b92915050565b60006020820190506141b86000830184613eb0565b92915050565b60006040820190506141d36000830185613eb0565b81810360208301526141e58184613e15565b90509392505050565b60006060820190506142036000830186613eb0565b81810360208301526142158185613e15565b905081810360408301526142298184613ebf565b9050949350505050565b60006040820190506142486000830185613eb0565b818103602083015261425a8184613ebf565b90509392505050565b60006080820190506142786000830187613eb0565b818103602083015261428a8186613ebf565b9050818103604083015261429e8185613e15565b905081810360608301526142b28184613ebf565b905095945050505050565b60006080820190506142d26000830187613eb0565b81810360208301526142e48186613ebf565b905081810360408301526142f88185613ebf565b9050818103606083015261430c8184613ebf565b905095945050505050565b600060208201905081810360008301526143318184613ef5565b905092915050565b600060408201905081810360008301526143538185613ef5565b90506143626020830184613e92565b9392505050565b600060408201905081810360008301526143838185613ef5565b90506143926020830184613ea1565b9392505050565b600060608201905081810360008301526143b38186613ef5565b90506143c26020830185613ea1565b6143cf6040830184613e92565b949350505050565b600060208201905081810360008301526143f081613f2b565b9050919050565b6000604082019050818103600083015261441081613f2b565b905081810360208301526144248184613ef5565b905092915050565b6000604082019050818103600083015261444581613f2b565b905081810360208301526144598184613ebf565b905092915050565b6000602082019050818103600083015261447a81613f62565b9050919050565b6000604082019050818103600083015261449a81613f62565b905081810360208301526144ae8184613ef5565b905092915050565b600060408201905081810360008301526144cf81613f62565b905081810360208301526144e38184613ebf565b905092915050565b6000602082019050818103600083015261450481613f99565b9050919050565b6000604082019050818103600083015261452481613f99565b905081810360208301526145388184613ef5565b905092915050565b6000602082019050818103600083015261455981613fd0565b9050919050565b6000604082019050818103600083015261457981613fd0565b9050818103602083015261458d8184613ef5565b905092915050565b600060208201905081810360008301526145ae81614007565b9050919050565b600060408201905081810360008301526145ce81614007565b905081810360208301526145e28184613ef5565b905092915050565b6000604082019050818103600083015261460381614007565b905081810360208301526146178184613ebf565b905092915050565b600060208201905081810360008301526146388161403e565b9050919050565b600060408201905081810360008301526146588161403e565b9050818103602083015261466c8184613ef5565b905092915050565b6000604082019050818103600083015261468d81614075565b905081810360208301526146a18184613ef5565b905092915050565b600060208201905081810360008301526146c2816140ac565b9050919050565b600060408201905081810360008301526146e2816140ac565b905081810360208301526146f68184613ef5565b905092915050565b60006020820190508181036000830152614717816140e3565b9050919050565b60006040820190508181036000830152614737816140e3565b9050818103602083015261474b8184613ef5565b905092915050565b6000602082019050818103600083015261476c8161411a565b9050919050565b6000604082019050818103600083015261478c8161411a565b905081810360208301526147a08184613ef5565b905092915050565b600060208201905081810360008301526147c181614151565b9050919050565b600060408201905081810360008301526147e181614151565b905081810360208301526147f58184613ebf565b905092915050565b6000604051905081810181811067ffffffffffffffff8211171561482057600080fd5b8060405250919050565b600067ffffffffffffffff82111561484157600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561486957600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561489557600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b6000614926826148e5565b9050919050565b6000614938826148e5565b9050919050565b600061494a826148e5565b9050919050565b600061495c826148e5565b9050919050565b6000819050919050565b6000614978826148e5565b9050919050565b600061498a826148e5565b9050919050565b82818337600083830152505050565b60005b838110156149be5780820151818401526020810190506149a3565b838111156149cd576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a72305820d67829bc7700f36a81b1c0b79c184155f68fa8f518d5eb33f930f8b5b8e4817e6c6578706572696d656e74616cf50037"};

    public static final String SM_BINARY = String.join("", SM_BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"constant\":true,\"inputs\":[{\"name\":\"service_id\",\"type\":\"string\"}],\"name\":\"selectById\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"service_id\",\"type\":\"string\"},{\"name\":\"params\",\"type\":\"string[]\"},{\"name\":\"updated_time\",\"type\":\"string\"}],\"name\":\"update\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"service_id\",\"type\":\"string\"}],\"name\":\"isExist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"service_id\",\"type\":\"string\"}],\"name\":\"deleteByServiceId\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"service_id\",\"type\":\"string\"},{\"name\":\"ext_json\",\"type\":\"string\"},{\"name\":\"updated_time\",\"type\":\"string\"}],\"name\":\"updateExtJson\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"params\",\"type\":\"string[]\"},{\"name\":\"ext_json\",\"type\":\"string\"}],\"name\":\"insert\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"service_id\",\"type\":\"string\"},{\"name\":\"service_status\",\"type\":\"string\"},{\"name\":\"updated_time\",\"type\":\"string\"}],\"name\":\"updateServiceStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"params\",\"type\":\"string[]\"},{\"indexed\":false,\"name\":\"ext_json\",\"type\":\"string\"}],\"name\":\"insertEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"service_id\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"params\",\"type\":\"string[]\"},{\"indexed\":false,\"name\":\"updated_time\",\"type\":\"string\"}],\"name\":\"updateEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"service_id\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"ext_json\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"updated_time\",\"type\":\"string\"}],\"name\":\"updateExtJsonEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"service_id\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"service_status\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"updated_time\",\"type\":\"string\"}],\"name\":\"updateServiceStatusEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"service_id\",\"type\":\"string\"}],\"name\":\"deleteByServiceIdEvent\",\"type\":\"event\"}]"};

    public static final String ABI = String.join("", ABI_ARRAY);

    public static final String FUNC_SELECTBYID = "selectById";

    public static final String FUNC_UPDATE = "update";

    public static final String FUNC_ISEXIST = "isExist";

    public static final String FUNC_DELETEBYSERVICEID = "deleteByServiceId";

    public static final String FUNC_UPDATEEXTJSON = "updateExtJson";

    public static final String FUNC_INSERT = "insert";

    public static final String FUNC_UPDATESERVICESTATUS = "updateServiceStatus";

    public static final Event INSERTEVENT_EVENT = new Event("insertEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event UPDATEEVENT_EVENT = new Event("updateEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event UPDATEEXTJSONEVENT_EVENT = new Event("updateExtJsonEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event UPDATESERVICESTATUSEVENT_EVENT = new Event("updateServiceStatusEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event DELETEBYSERVICEIDEVENT_EVENT = new Event("deleteByServiceIdEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}));
    ;

    protected MemberServiceContract(String contractAddress, Client client, CryptoKeyPair credential) {
        super(getBinary(client.getCryptoSuite()), contractAddress, client, credential);
    }

    public static String getBinary(CryptoSuite cryptoSuite) {
        return (cryptoSuite.getCryptoTypeConfig() == CryptoType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public Tuple2<BigInteger, List<String>> selectById(String service_id) throws ContractException {
        final Function function = new Function(FUNC_SELECTBYID, 
                Arrays.<Type>asList(new Utf8String(service_id)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<DynamicArray<Utf8String>>() {}));
        List<Type> results = executeCallWithMultipleValueReturn(function);
        return new Tuple2<BigInteger, List<String>>(
                (BigInteger) results.get(0).getValue(), 
                convertToNative((List<Utf8String>) results.get(1).getValue()));
    }

    public TransactionReceipt update(String service_id, List<String> params, String updated_time) {
        final Function function = new Function(
                FUNC_UPDATE, 
                Arrays.<Type>asList(new Utf8String(service_id),
                params.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(params, Utf8String.class)),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void update(String service_id, List<String> params, String updated_time, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UPDATE, 
                Arrays.<Type>asList(new Utf8String(service_id),
                params.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(params, Utf8String.class)),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForUpdate(String service_id, List<String> params, String updated_time) {
        final Function function = new Function(
                FUNC_UPDATE, 
                Arrays.<Type>asList(new Utf8String(service_id),
                params.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(params, Utf8String.class)),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<String, List<String>, String> getUpdateInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_UPDATE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<String, List<String>, String>(

                (String) results.get(0).getValue(), 
                convertToNative((List<Utf8String>) results.get(1).getValue()), 
                (String) results.get(2).getValue()
                );
    }

    public Tuple1<BigInteger> getUpdateOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_UPDATE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public Boolean isExist(String service_id) throws ContractException {
        final Function function = new Function(FUNC_ISEXIST, 
                Arrays.<Type>asList(new Utf8String(service_id)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeCallWithSingleValueReturn(function, Boolean.class);
    }

    public TransactionReceipt deleteByServiceId(String service_id) {
        final Function function = new Function(
                FUNC_DELETEBYSERVICEID, 
                Arrays.<Type>asList(new Utf8String(service_id)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void deleteByServiceId(String service_id, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_DELETEBYSERVICEID, 
                Arrays.<Type>asList(new Utf8String(service_id)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForDeleteByServiceId(String service_id) {
        final Function function = new Function(
                FUNC_DELETEBYSERVICEID, 
                Arrays.<Type>asList(new Utf8String(service_id)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getDeleteByServiceIdInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_DELETEBYSERVICEID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple1<BigInteger> getDeleteByServiceIdOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_DELETEBYSERVICEID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public TransactionReceipt updateExtJson(String service_id, String ext_json, String updated_time) {
        final Function function = new Function(
                FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(new Utf8String(service_id),
                new Utf8String(ext_json),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void updateExtJson(String service_id, String ext_json, String updated_time, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(new Utf8String(service_id),
                new Utf8String(ext_json),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForUpdateExtJson(String service_id, String ext_json, String updated_time) {
        final Function function = new Function(
                FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(new Utf8String(service_id),
                new Utf8String(ext_json),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<String, String, String> getUpdateExtJsonInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<String, String, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (String) results.get(2).getValue()
                );
    }

    public Tuple1<BigInteger> getUpdateExtJsonOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public TransactionReceipt insert(List<String> params, String ext_json) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(params.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(params, Utf8String.class)),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void insert(List<String> params, String ext_json, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(params.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(params, Utf8String.class)),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForInsert(List<String> params, String ext_json) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(params.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(params, Utf8String.class)),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<List<String>, String> getInsertInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_INSERT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<List<String>, String>(

                convertToNative((List<Utf8String>) results.get(0).getValue()), 
                (String) results.get(1).getValue()
                );
    }

    public Tuple1<BigInteger> getInsertOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_INSERT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public TransactionReceipt updateServiceStatus(String service_id, String service_status, String updated_time) {
        final Function function = new Function(
                FUNC_UPDATESERVICESTATUS, 
                Arrays.<Type>asList(new Utf8String(service_id),
                new Utf8String(service_status),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void updateServiceStatus(String service_id, String service_status, String updated_time, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UPDATESERVICESTATUS, 
                Arrays.<Type>asList(new Utf8String(service_id),
                new Utf8String(service_status),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForUpdateServiceStatus(String service_id, String service_status, String updated_time) {
        final Function function = new Function(
                FUNC_UPDATESERVICESTATUS, 
                Arrays.<Type>asList(new Utf8String(service_id),
                new Utf8String(service_status),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<String, String, String> getUpdateServiceStatusInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_UPDATESERVICESTATUS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<String, String, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (String) results.get(2).getValue()
                );
    }

    public Tuple1<BigInteger> getUpdateServiceStatusOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_UPDATESERVICESTATUS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public List<InsertEventEventResponse> getInsertEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(INSERTEVENT_EVENT, transactionReceipt);
        ArrayList<InsertEventEventResponse> responses = new ArrayList<InsertEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            InsertEventEventResponse typedResponse = new InsertEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.params = (List<String>) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.ext_json = (String) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeInsertEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeInsertEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<UpdateEventEventResponse> getUpdateEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(UPDATEEVENT_EVENT, transactionReceipt);
        ArrayList<UpdateEventEventResponse> responses = new ArrayList<UpdateEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            UpdateEventEventResponse typedResponse = new UpdateEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.service_id = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.params = (List<String>) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.updated_time = (String) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeUpdateEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeUpdateEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<UpdateExtJsonEventEventResponse> getUpdateExtJsonEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(UPDATEEXTJSONEVENT_EVENT, transactionReceipt);
        ArrayList<UpdateExtJsonEventEventResponse> responses = new ArrayList<UpdateExtJsonEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            UpdateExtJsonEventEventResponse typedResponse = new UpdateExtJsonEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.service_id = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.ext_json = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.updated_time = (String) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeUpdateExtJsonEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEXTJSONEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeUpdateExtJsonEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEXTJSONEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<UpdateServiceStatusEventEventResponse> getUpdateServiceStatusEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(UPDATESERVICESTATUSEVENT_EVENT, transactionReceipt);
        ArrayList<UpdateServiceStatusEventEventResponse> responses = new ArrayList<UpdateServiceStatusEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            UpdateServiceStatusEventEventResponse typedResponse = new UpdateServiceStatusEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.service_id = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.service_status = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.updated_time = (String) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeUpdateServiceStatusEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATESERVICESTATUSEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeUpdateServiceStatusEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATESERVICESTATUSEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<DeleteByServiceIdEventEventResponse> getDeleteByServiceIdEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(DELETEBYSERVICEIDEVENT_EVENT, transactionReceipt);
        ArrayList<DeleteByServiceIdEventEventResponse> responses = new ArrayList<DeleteByServiceIdEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            DeleteByServiceIdEventEventResponse typedResponse = new DeleteByServiceIdEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.service_id = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeDeleteByServiceIdEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(DELETEBYSERVICEIDEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeDeleteByServiceIdEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(DELETEBYSERVICEIDEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public static MemberServiceContract load(String contractAddress, Client client, CryptoKeyPair credential) {
        return new MemberServiceContract(contractAddress, client, credential);
    }

    public static MemberServiceContract deploy(Client client, CryptoKeyPair credential) throws ContractException {
        return deploy(MemberServiceContract.class, client, credential, getBinary(client.getCryptoSuite()), "");
    }

    public static class InsertEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public List<String> params;

        public String ext_json;
    }

    public static class UpdateEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public String service_id;

        public List<String> params;

        public String updated_time;
    }

    public static class UpdateExtJsonEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public String service_id;

        public String ext_json;

        public String updated_time;
    }

    public static class UpdateServiceStatusEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public String service_id;

        public String service_status;

        public String updated_time;
    }

    public static class DeleteByServiceIdEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public String service_id;
    }
}
